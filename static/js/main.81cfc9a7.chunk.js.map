{"version":3,"sources":["globals/icons/sprite.svg","container/Content/additionalInputsActions.js","globals/constants/types.js","container/Content/components/MarkdownEditor/MarkdownEditor.js","globals/constants/constants.js","container/Content/components/ExternalReferences/components/CustomInput/CustomInput.js","container/Content/components/ExternalReferences/externalReferencesActions.js","container/Content/components/ExternalReferences/ExternalReferences.js","container/Content/components/Properties/propertiesActions.js","container/Content/components/Properties/components/SupportedAPI/SupportedAPI.js","container/Content/components/Capabilities/capabilitiesActions.js","container/Content/components/Properties/components/AuthType/ConfTokenDetail.js","container/Content/components/Properties/components/AuthType/ConfToken.js","container/Content/components/Properties/components/AuthType/AuthType.js","container/Content/components/Properties/Properties.js","container/Content/components/ConfigurationSpec/configurationSpecActions.js","container/Content/components/ConfigurationSpec/components/Options/OptionItem.js","container/Content/components/ConfigurationSpec/components/Options/Options.js","container/Content/components/ConfigurationSpec/components/ConfigurationSpecItem/ConfigurationSpecItem.js","container/Content/components/ConfigurationSpec/ConfigurationSpec.js","container/Content/components/Capabilities/components/Capability.js","container/Content/components/Capabilities/Capabilities.js","container/Content/components/FileInput/FileInput.js","container/Content/Content.js","rootActions.js","container/Content/components/visibilityActions.js","container/Content/components/ModalForPush/ModalForPush.js","container/Content/components/CustomAlert/CustomAlert.js","globals/constants/schema.js","container/Content/components/ModalForPull/ModalForPull.js","container/Content/components/Sidebar/Sidebar.js","utils/formattingUtils.js","container/Content/components/Header/Header.js","App.js","serviceWorker.js","container/Content/components/ExternalReferences/externalReferencesReducer.js","container/Content/components/ConfigurationSpec/configurationSpecReducer.js","container/Content/components/Properties/propertiesReducer.js","container/Content/components/Capabilities/capabilitiesReducer.js","container/Content/components/visibilityReducer.js","rootReducer.js","container/Content/additionalInputsReducer.js","services.js","sagas.js","index.js"],"names":["module","exports","updateSingleInput","pair","type","payload","name","value","onFileLoaded","imageFile","MarkdownEditor","state","tab","props","handleValueChange","setState","handleTabChange","minEditorHeight","minPreviewHeight","maxEditorHeight","commands","headerCommand","boldCommand","italicCommand","strikeThroughCommand","linkCommand","quoteCommand","codeCommand","orderedListCommand","unorderedListCommand","checkedListCommand","onChange","this","onTabChange","syncContent","generateMarkdownPreview","markdown","Promise","resolve","source","selectedTab","React","Component","mapDispatchToProps","connect","other_inputs","IROH_SERVICES_URLS","JSON_ELEMENTS_ORDER","KEY_DATALIST","TYPE_OPTIONS","LABELS","AUTH_TYPE_OPTIONS","CONF_TOKEN_OPTIONS","ALERT_TITLE_FAILURE","CustomInput","trimInputValue","event","updateExternalReference","reference","id","target","trim","changeInputHandler","persist","onDeleteIconClick","deleteExternalReference","className","placeholder","autoComplete","list","label","onBlur","required","link","Constants","map","option","key","onClick","xlinkHref","Icons","ExternalReferences","onAddButtonClick","addExternalReference","syncExternalReferences","item","uuidv4","external_references","updateConfToken","SupportedAPI","title","api","class","onCheckboxToggle","updateSupportedAPI","checked","addCapability","syncSupportedAPIs","filter","elem","startsWith","length","deleteCapability","includes","properties","ConfTokenDetail","alg","syncProperties","ConfToken","onSelectUpdate","toggleAlgorithm","disabled","hidden","AuthType","toggleAuthType","onAuthSelection","updateAuthType","Object","keys","Properties","apis","addConfSpec","addOptions","options","conf_spec_id","OptionsItem","deleteOption","onInputUpdate","updateOption","option_id","Options","onButtonClick","ConfigurationSpecItem","showOptions","syncConfSpecItem","onSelectChange","onInputChange","role","deleteAllOptions","deleteConfSpec","updateConfSpec","prev","tooltip","subtype","syncConfSpec","configuration_spec","ConfigurationSpec","Capability","updateCapabilityDescription","description","onDescriptionChange","syncCapabilities","capabilities","deleteLogo","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onload","dataURL","result","readAsDataURL","useDropzone","multiple","accept","getRootProps","getInputProps","isDragActive","Boolean","src","alt","height","Content","trimFlags","updateFlags","split","changeFlagsHandler","handleLoadLocalFile","preventDefault","files","onloadend","default_name","short_description","flags","logo","readStateFromBackend","json","hideModalForPush","hideModalForPull","showAlert","message","pushModuleTypeRequest","values","client_id","password","iroh_service_url","loader","elements_visibility","initialValues","validate","errors","onSubmit","a","setSubmitting","isSubmitting","loaded","htmlFor","component","as","CustomAlert","closeAlertHandler","validator","Validator","addSchema","VALIDATION_SCHEMA","pullModuleTypeRequest","module_type_id","Sidebar","inputEl","createRef","onSaveButtonClick","isValidForm","formattedData","constructValidJSON","fileData","JSON","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","replace","download","href","click","onPushButtonClick","showModalForPush","handleFile","parse","valResult","valid","join","error","String","onerror","readAsText","onOpenButtonClick","inputElement","current","addEventListener","data","syncJSON","forEach","element","arrangedData","constants","property","arrangeJSON","getElementById","reportValidity","ref","showModalForPull","modalForPush","customAlert","hideAlert","modalForPull","formatState","Header","App","window","location","hostname","match","initialState","getIndexOfSpec","spec","indexOf","appReducer","combineReducers","action","fromEntries","entries","concat","obj","elementIndex","index","el","addIDs","currentList","authorize","fetch","method","headers","btoa","body","response","ok","statusText","pullModuleType","token","pushModuleType","sagaWatcher","onPullSuccessSagaWorker","onPullErrorSagaWorker","pullSagaWorker","onPushSuccessSagaWorker","onPushErrorSagaWorker","pushSagaWorker","takeLatest","put","call","c","toUpperCase","saga","createSagaMiddleware","store","createStore","tips","applyMiddleware","run","app","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.81cfc9a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.31710dea.svg\";","import { LOAD_FILE, UPDATE_FlAGS, UPDATE_SINGLE_INPUT, DELETE_LOGO }\nfrom \"globals/constants/types\";\n\nexport const updateSingleInput = (pair) => ({\n        type: UPDATE_SINGLE_INPUT,\n        payload: {name: pair.name, value: pair.value}\n})\n\nexport const updateFlags = (list) => ({\n        type: UPDATE_FlAGS,\n        payload: list\n})\n\nexport const onFileLoaded = (imageFile) => ({\n        type: LOAD_FILE,\n        payload: imageFile\n})\n\nexport const deleteLogo = () => ({\n        type: DELETE_LOGO\n})\n","// Capabilities\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const UPDATE_CAPABILITY_DESCR = 'UPDATE_CAPABILITY_DESCR';\nexport const DELETE_CAPABILITY = 'DELETE_CAPABILITY';\n\n// Properties\nexport const UPDATE_SUPPORTED_API = 'UPDATE_SUPPORTED_API';\nexport const TOGGLE_AUTH_TYPE = 'TOGGLE_AUTH_TYPE';\nexport const UPDATE_AUTH_TYPE = 'UPDATE_AUTH_TYPE';\nexport const UPDATE_CONF_TOKEN = 'UPDATE_CONF_TOKEN';\nexport const TOGGLE_ALGORITHM = 'TOGGLE_ALGORITHM';\n\n// Content\nexport const UPDATE_SINGLE_INPUT = 'UPDATE_SINGLE_INPUT';\nexport const UPDATE_FlAGS = 'UPDATE_FlAGS';\nexport const LOAD_FILE = 'LOAD_FILE';\nexport const DELETE_LOGO = 'DELETE_LOGO';\n\n// Configuration Spec\nexport const ADD_CONF_SPEC = 'ADD_CONF_SPEC';\nexport const ADD_OPTIONS = 'ADD_OPTIONS';\nexport const DELETE_CONF_SPEC = 'DELETE_CONF_SPEC';\nexport const DELETE_ALL_OPTIONS = 'DELETE_ALL_OPTIONS';\nexport const DELETE_OPTION = 'DELETE_OPTION';\nexport const UPDATE_CONF_SPEC = 'UPDATE_CONF_SPEC';\nexport const UPDATE_OPTION = 'UPDATE_OPTION';\n\n// External References\nexport const UPDATE_EXTERNAL_REFERENCE = 'UPDATE_EXTERNAL_REFERENCE';\nexport const ADD_EXTERNAL_REFERENCE = 'ADD_EXTERNAL_REFERENCE';\nexport const DELETE_EXTERNAL_REFERENCE = 'DELETE_EXTERNAL_REFERENCE';\n\n// Root\nexport const READ_STATE_FROM_BACKEND = 'READ_STATE_FROM_BACKEND';\n\nexport const PULL_MODULE_TYPE_REQUEST = 'PULL_MODULE_TYPE_REQUEST';\nexport const PUSH_MODULE_TYPE_REQUEST = 'PUSH_MODULE_TYPE_REQUEST';\n\nexport const PULL_MODULE_TYPE_SUCCESS = 'PULL_MODULE_TYPE_SUCCESS';\nexport const PUSH_MODULE_TYPE_SUCCESS = 'PUSH_MODULE_TYPE_SUCCESS';\n\nexport const PULL_MODULE_TYPE_ERROR = 'PULL_MODULE_TYPE_ERROR';\nexport const PUSH_MODULE_TYPE_ERROR = 'PUSH_MODULE_TYPE_ERROR';\n\n// Visibility\nexport const SHOW_MODAL_FOR_PUSH = \"SHOW_MODAL_FOR_PUSH\";\nexport const HIDE_MODAL_FOR_PUSH = \"HIDE_MODAL_FOR_PUSH\";\n\nexport const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\n\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const HIDE_LOADER = \"HIDE_LOADER\";\n\nexport const SHOW_MODAL_FOR_PULL = \"SHOW_MODAL_FOR_PULL\";\nexport const HIDE_MODAL_FOR_PULL = \"HIDE_MODAL_FOR_PULL\";\n","import React from \"react\";\nimport ReactMde, { commands } from \"react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./MarkdownEditor.scss\";\nimport { updateSingleInput } from \"container/Content/additionalInputsActions\";\nimport { connect } from \"react-redux\";\n\n\nclass MarkdownEditor extends React.Component {\n    state = {\n            value: \"\",\n            tab: \"write\",\n            name: this.props.name\n    };\n\n    handleValueChange = value => {\n        this.setState({ value });\n        this.props.updateSingleInput({name: this.state.name, value: value})\n    };\n\n    handleTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    render() {\n        return  <ReactMde\n            minEditorHeight={323}\n            minPreviewHeight={323}\n            maxEditorHeight={646}\n            commands={[\n                {\n                    commands: [\n                        commands.headerCommand,\n                        commands.boldCommand,\n                        commands.italicCommand,\n                        commands.strikeThroughCommand,\n                        commands.linkCommand,\n                        commands.quoteCommand,\n                        commands.codeCommand,\n                        commands.orderedListCommand,\n                        commands.unorderedListCommand,\n                        commands.checkedListCommand\n                    ]\n                }\n            ]}\n            onChange={this.handleValueChange}\n            onTabChange={this.handleTabChange}\n            value={this.props.syncContent[`${this.props.name}`]}\n            generateMarkdownPreview={(markdown) =>\n                Promise.resolve(<ReactMarkdown source={markdown} />)\n            }\n            selectedTab={this.state.tab}\n        />\n    }\n}\n\n\nconst mapDispatchToProps = {\n    updateSingleInput\n}\n\nconst mapStateToProps = (state) => ({\n    syncContent: state.other_inputs\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);\n","export const SELECT_PLACEHOLDER = \"Select your option\";\nexport const LOGO = \"logo\";\nexport const SUPPORTED_APIS = \"supported-apis\";\nexport const IROH_SERVICES_URLS = {\n    \"Europe\": \"https://visibility.eu.amp.cisco.com\",\n    \"North America\": \"https://visibility.amp.cisco.com\",\n    \"Asia\": \"https://visibility.apjc.amp.cisco.com\"\n}\n\n// Content.js\nexport const MAIN_TITLE = \"Module\";\nexport const INPUT_TITLE_LABEL = \"Title\";\nexport const DEFAULT_NAME_LABEL = \"Default Name\";\nexport const SHORT_DESCRIPTION_LABEL = \"Short Description\";\nexport const DESCRIPTION_LABEL = \"Description\";\nexport const TIPS_LABEL = \"Tips\";\nexport const FLAGS_LABEL = \"Flags\";\nexport const FLAGS_PLACEHOLDER = \"Enter flags separated by commas\";\nexport const LOGO_LABEL = \"Logo\";\n\n// Capabilities.js\nexport const CAPABILITIES_TEXT = \"Select at least one of \" +\n    \"the Supported APIs to write a description\";\n\n// Sidebar.js\nexport const SIDEBAR_TITLE = \"Settings\";\nexport const OPEN_FROM_FILE = \"Open JSON from File\";\nexport const OPEN_FROM_API = \"Open JSON from TR API\";\nexport const SAVE_JSON = \"Save JSON\";\nexport const PUSH_JSON = \"Push JSON to TR\";\nexport const VALIDATION_ERROR_MESSAGE = \"Wrong JSON structure: \";\nexport const FILE_LOADING_FAILURE = \"Error occurred reading file: \";\nexport const JSON_ELEMENTS_ORDER = [\n    \"title\", \"default_name\", \"short_description\",\n    \"description\", \"tips\", \"external_references\",\n    \"configuration_spec\", \"capabilities\",\n    \"properties\", \"flags\", \"logo\"\n];\n\n// ConfigurationSpec.js\nexport const ADD_BTN_TITLE = \"+ Add\";\n\n// ConfigurationSpecItem.js\nexport const KEY_DATALIST = [\n    \"basic-auth-password\", \"basic-auth-user\", \"token\", \"url\", \"user\"\n];\nexport const TYPE_OPTIONS = [\n    \"api_key\", \"boolean\", \"device\", \"integer\", \"options\", \"password\", \"string\"\n];\nexport const TOOLTIP_LABEL = \"tooltip\";\nexport const SUBTYPE_LABEL = \"subtype\";\nexport const GROUP_LABEL = \"group\";\nexport const REQUIRED_LABEL = \"required\";\nexport const LABEL = \"label\";\nexport const TYPE_LABEL = \"type\";\nexport const KEY_LABEL = \"key\";\n\n// OptionsItem.js\nexport const VALUE_FIELD_TEXT = \"value\";\nexport const LABEL_FIELD_TEXT = \"label\";\n\n// Options.js\nexport const OPTIONS_SECTION_LABEL = \"Options\";\nexport const OPTIONS_BTN_TITLE = \"+ Add\";\n\n// Header.js\nexport const HEADER_TITLE = \"Threat Response Module Maker\";\n\n// ExternalReferences.js\nexport const LABELS = [\"Sign Up\", \"Free Trial\", \"Contact Us\"];\nexport const SECTION_TITLE = \"External References\";\n\n// ModalForPush.js\nexport const AUTH_ENDPOINT = \"/iroh/oauth2/token\";\nexport const MODULE_TYPE_ENDPOINT = \"/iroh/iroh-int/module-type\";\nexport const MESSAGE_SUCCESS = \"The module type was successfully created with id: \"\nexport const PUSH_MODAL_TEXT = \"Create a new module type in your Threat Response organization\";\nexport const CLIENT_ID_LABEL = \"Client ID\";\nexport const CLIENT_PASSWORD_LABEL = \"Client Password\";\nexport const PUSH_BTN_TITLE = \"Push\";\nexport const CANCEL_BTN_TITLE = \"Cancel\";\n\n// ModalForPull.js\nexport const PULL_BTN_TITLE = \"Pull\";\nexport const PULL_MODAL_TEXT = \"Pull module type from your Threat Response organization\";\nexport const MODULE_TYPE_ID = \"Module Type ID\";\nexport const REGION_LABEL = \"Region\";\n\n// AuthType.js\nexport const AUTH_LABEL = \"authorization\";\nexport const AUTH_TYPE_OPTIONS = [\"authorization-header\", \"basic\", \"bearer\", \"configuration-token\"];\n\n// ConfToken.js\nexport const CONF_TOKEN_OPTIONS = [\"RS256\", \"HS256\"];\nexport const CONFIGURATION_TOKEN = \"configuration-token\";\nexport const CONFIGURATION_TOKEN_ALG = \"configuration-token-alg\";\nexport const CONFIGURATION_TOKEN_AUDIENCE = \"configuration-token-audience\";\n\n// ConfTokenDetail.js\nexport const CUSTOM_JWKS_HOST = \"custom_jwks_host\";\nexport const CONFIGURATION_TOKEN_KEY = \"configuration-token-key\";\n\n// CustomAlert.js\nexport const CLOSE_BTN_LABEL = \"Close\";\nexport const ALERT_TITLE_FAILURE = \"Failure: an error occurred\";\nexport const ALERT_TITLE_SUCCESS = \"Success\";\n","import \"./CustomInput.scss\";\nimport React from \"react\";\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport { deleteExternalReference, updateExternalReference }\nfrom \"container/Content/components/ExternalReferences/externalReferencesActions\";\n\n\nclass CustomInput extends React.Component {\n    trimInputValue = event => {\n        this.props.updateExternalReference(\n            this.props.reference.id,\n            {\n                name: event.target.name,\n                value: event.target.value.trim()\n            })\n    }\n\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateExternalReference(\n            this.props.reference.id,\n            {\n            name: event.target.name,\n            value: event.target.value\n            }\n            )\n    }\n\n    onDeleteIconClick = () => {\n        this.props.deleteExternalReference(this.props.reference.id);\n    }\n\n    render() {\n        return(\n            <div className=\"reference_wrapper\">\n                <input type=\"text\"\n                       name=\"label\"\n                       placeholder=\"Enter label\"\n                       className=\"custom_input\"\n                       autoComplete=\"off\"\n                       list=\"ext-ref\"\n                       value={this.props.reference.label}\n                       onChange={this.changeInputHandler}\n                       onBlur={this.trimInputValue}\n                       required\n                />\n                <input type=\"text\"\n                       name=\"link\"\n                       placeholder=\"Enter link\"\n                       className=\"custom_input\"\n                       autoComplete=\"off\"\n                       value={this.props.reference.link}\n                       onChange={this.changeInputHandler}\n                       onBlur={this.trimInputValue}\n                       required\n                />\n                <datalist id=\"ext-ref\">\n                    {\n                        Constants.LABELS.map(\n                            option => {\n                                return (\n                                    <option key={`${option} ${this.props.reference.id}`}>\n                                        {option}\n                                    </option>\n                                )\n                            }\n                        )\n                    }\n                </datalist>\n                <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    deleteExternalReference,\n    updateExternalReference\n}\n\nexport default connect(null, mapDispatchToProps)(CustomInput);\n","import { ADD_EXTERNAL_REFERENCE, DELETE_EXTERNAL_REFERENCE, UPDATE_EXTERNAL_REFERENCE }\nfrom \"globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport const updateExternalReference = (id, pair) => ({\n        type: UPDATE_EXTERNAL_REFERENCE,\n        payload: {id: id, pair: pair}\n})\n\nexport const addExternalReference = () => ({\n        type: ADD_EXTERNAL_REFERENCE,\n        payload: {\n            id: uuidv4()\n        }\n})\n\nexport const deleteExternalReference = (id) => ({\n        type: DELETE_EXTERNAL_REFERENCE,\n        payload: id\n})\n","import React from \"react\";\nimport CustomInput from \"./components/CustomInput/CustomInput\";\nimport * as Constants from \"globals/constants/constants\";\nimport \"container/Content/components/ExternalReferences/ExternalReferences.scss\"\nimport { connect } from \"react-redux\";\nimport { addExternalReference } from \"./externalReferencesActions\";\n\n\nclass ExternalReferences extends React.Component {\n\n    onAddButtonClick = () => {\n        this.props.addExternalReference()\n    }\n\n    render() {\n        return (\n            <div className=\"reference-section\">\n                <div>\n                    <label className='input-label'> {Constants.SECTION_TITLE}</label>\n                    <button onClick={this.onAddButtonClick} type=\"button\">\n                        {Constants.ADD_BTN_TITLE}\n                    </button>\n                </div>\n                    {\n                        this.props.syncExternalReferences.map(\n                            item => (<CustomInput reference={item} key={item.id}/>)\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    addExternalReference\n}\n\nconst mapStateToProps = (state) => ({\n        syncExternalReferences: state.external_references\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExternalReferences);\n","import { TOGGLE_AUTH_TYPE,\n        UPDATE_AUTH_TYPE,\n        UPDATE_SUPPORTED_API,\n        UPDATE_CONF_TOKEN,\n        TOGGLE_ALGORITHM\n}\nfrom \"globals/constants/types\";\n\nexport const updateSupportedAPI = (api) => ({\n        type: UPDATE_SUPPORTED_API,\n        payload: api\n})\n\nexport const toggleAuthType = () => ({\n        type: TOGGLE_AUTH_TYPE\n})\n\nexport const updateAuthType = (type) => ({\n        type: UPDATE_AUTH_TYPE,\n        payload: type\n})\n\nexport const updateConfToken = (pair) => ({\n        type: UPDATE_CONF_TOKEN,\n        payload: pair\n})\n\nexport const toggleAlgorithm = (alg) => ({\n        type: TOGGLE_ALGORITHM,\n        payload: alg\n})\n","import React from \"react\";\nimport \"./SupportedAPI.scss\";\nimport { connect } from \"react-redux\";\nimport { updateSupportedAPI } from \"../../propertiesActions\";\nimport { addCapability, deleteCapability }\nfrom \"container/Content/components/Capabilities/capabilitiesActions\";\n\n\nclass SupportedAPI extends React.Component {\n    state = {\n            title: this.props.api.title,\n            class: this.props.api.class\n        }\n\n    onCheckboxToggle = (event) => {\n\n        this.props.updateSupportedAPI(this.state.title);\n\n        if (event.target.checked) {\n            this.props.addCapability(this.state.class);\n        }\n\n        else {\n            if (this.props.syncSupportedAPIs.filter(\n                elem => elem.startsWith(this.state.class)).length === 1) {\n                this.props.deleteCapability(this.state.class);\n            }\n          }\n        }\n\n    render() {\n        return (\n            <div className=\"supportedAPI\">\n                <input type=\"checkbox\"\n                       autoComplete=\"off\"\n                       onChange={this.onCheckboxToggle}\n                       checked={this.props.syncSupportedAPIs.includes(this.state.title)}\n                />\n                <label>{this.state.title}</label>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addCapability,\n    deleteCapability,\n    updateSupportedAPI\n}\n\nconst mapStateToProps = (state) => ({\n      syncSupportedAPIs: state.properties[\"supported-apis\"] || []\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupportedAPI);\n","import {\n    ADD_CAPABILITY,\n    DELETE_CAPABILITY,\n    UPDATE_CAPABILITY_DESCR\n} from \"globals/constants/types\";\n\nexport const addCapability = (api) => ({\n        type: ADD_CAPABILITY,\n        payload: {id: api}\n})\n\nexport const updateCapabilityDescription = (api) => ({\n        type: UPDATE_CAPABILITY_DESCR,\n        payload: {id: api.id, \"description\": api.description}\n})\n\nexport const deleteCapability = (api) => ({\n    type: DELETE_CAPABILITY,\n    payload: api\n})\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateConfToken } from \"../../propertiesActions\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass ConfTokenDetail extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateConfToken({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    render() {\n        if (this.props.alg === 'RS256') {\n            return (\n                <div className='conf-token-input'>\n                    <label>{Constants.CUSTOM_JWKS_HOST}</label>\n                    <input value={this.props.syncProperties[Constants.CUSTOM_JWKS_HOST] || \"\"}\n                           name='custom_jwks_host'\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <div className='conf-token-input'>\n                    <label>{Constants.CONFIGURATION_TOKEN_KEY}</label>\n                    <input value={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_KEY] || \"\"}\n                           name='configuration-token-key'\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n            )\n        }\n    }\n}\n\nconst mapDispatchToProps = {\n    updateConfToken\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfTokenDetail);\n","import React from \"react\";\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport { toggleAlgorithm, updateConfToken } from \"../../propertiesActions\";\nimport ConfTokenDetail from \"./ConfTokenDetail\";\nimport \"./ConfToken.scss\";\n\n\nclass ConfToken extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateConfToken({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    onSelectUpdate = event => {\n        this.changeInputHandler(event);\n        this.props.toggleAlgorithm(event.target.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='conf-token-input'>\n                    <label>{Constants.CONFIGURATION_TOKEN_ALG}</label>\n                    <select value={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_ALG] || \"\"}\n                            name={Constants.CONFIGURATION_TOKEN_ALG}\n                            onChange={this.onSelectUpdate}\n                    >\n                        <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                        {\n                            Constants.CONF_TOKEN_OPTIONS.map(\n                                option => {\n                                    return <option value={option} key={option}>{option}</option>\n                                }\n                            )\n                        }\n                    </select>\n                </div>\n                {\n                    this.props.syncProperties[Constants.CONFIGURATION_TOKEN_ALG]\n                        ? <ConfTokenDetail  alg={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_ALG]}/>\n                        : ''\n                }\n                <div className='conf-token-input'>\n                    <label>{Constants.CONFIGURATION_TOKEN_AUDIENCE}</label>\n                    <input value={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_AUDIENCE] || \"\"}\n                           name={Constants.CONFIGURATION_TOKEN_AUDIENCE}\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    updateConfToken,\n    toggleAlgorithm\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfToken);\n","import React from \"react\";\nimport \"./AuthType.scss\";\nimport * as Constants from \"globals/constants/constants\";\nimport { toggleAuthType, updateAuthType } from \"../../propertiesActions\";\nimport { connect } from \"react-redux\";\nimport ConfToken from \"./ConfToken\";\n\n\nclass AuthType extends React.Component {\n    onCheckboxToggle = () => {\n        this.props.toggleAuthType();\n    }\n\n    onAuthSelection = event => {\n       event.persist();\n       this.props.updateAuthType(event.target.value)\n    }\n\nrender() {\n    return (\n      <div>\n        <div className=\"divAuth\">\n\n            <input type=\"checkbox\"\n                   autoComplete=\"off\"\n                   onChange={this.onCheckboxToggle}\n                   checked={Object.keys(this.props.syncProperties).includes(\"auth-type\")}\n            />\n\n            <label> { Constants.AUTH_LABEL } </label>\n            <select className=\"selectAuth\"\n                    value={this.props.syncProperties[\"auth-type\"] || \"\"}\n                    onChange={this.onAuthSelection}\n                    disabled={!Object.keys(this.props.syncProperties).includes(\"auth-type\")}\n                    required={Object.keys(this.props.syncProperties).includes(\"auth-type\")&&\"required\"}\n\n            >\n                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                {\n                   Constants.AUTH_TYPE_OPTIONS.map(\n                        option => {\n                            return <option value={option} key={option}>{option}</option>\n                        }\n                    )\n                }\n            </select>\n        </div>\n            {\n                Object.keys(this.props.syncProperties).includes(\"auth-type\")\n                && this.props.syncProperties[\"auth-type\"] === Constants.CONFIGURATION_TOKEN\n                    ? <ConfToken/>\n                    : \"\"\n            }\n      </div>\n    )\n}\n}\n\nconst mapDispatchToProps = {\n    toggleAuthType,\n    updateAuthType\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthType);\n","import React from \"react\";\nimport SupportedAPI from \"./components/SupportedAPI/SupportedAPI\";\nimport AuthType from \"./components/AuthType/AuthType\";\nimport \"./Properties.scss\"\n\n\nclass Properties extends React.Component {\n    state = {\n            apis: [\n                {title: 'health', class: 'health'},\n                {title: 'deliberate/observables', class: 'deliberate'},\n                {title: 'refer/observables', class: 'refer'},\n                {title: 'observe/observables', class: 'observe'},\n                {title: 'respond/observables', class: 'respond'},\n                {title: 'respond/trigger', class: 'respond'},\n                {title: 'tiles', class: 'tiles'},\n                {title: 'tiles/tile', class: 'tiles'},\n                {title: 'tiles/tile-data', class: 'tiles'},\n            ]\n        }\n\n    render() {\n        return (\n            <div>\n                <p>Properties</p>\n                <fieldset>\n                    <p>Supported APIs</p>\n                    <fieldset>\n                        {\n                            this.state.apis.map(\n                                api => {\n                                    return <SupportedAPI api={api} key={api.title}/>\n                                }\n                            )\n                        }\n                    </fieldset>\n                    <p>Auth-type</p>\n                    <fieldset>\n                        <AuthType/>\n                    </fieldset>\n                </fieldset>\n            </div>\n        )\n    }\n}\n\nexport default Properties;\n","import {\n    ADD_CONF_SPEC, ADD_OPTIONS,\n    DELETE_ALL_OPTIONS,\n    DELETE_CONF_SPEC,\n    DELETE_OPTION,\n    UPDATE_CONF_SPEC, UPDATE_OPTION\n} from \"globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport const addConfSpec = () => ({\n        type: ADD_CONF_SPEC,\n        payload:   {\n            \"key\": \"\",\n            \"type\": \"\",\n            \"label\": \"\",\n            \"tooltip\": \"\",\n            \"subtype\": \"\",\n            \"required\": false,\n            \"group\": \"\",\n            \"options\": [],\n            \"id\": uuidv4()\n        }\n})\n\nexport const deleteConfSpec = (id) => ({\n        type: DELETE_CONF_SPEC,\n        payload: {conf_spec_id: id}\n})\n\nexport const updateConfSpec = (id, pair) => ({\n        type: UPDATE_CONF_SPEC,\n        payload: {\n            conf_spec_id: id,\n            pair: pair\n        }\n})\n\nexport const addOptions = (id) => {\n    return {\n        type: ADD_OPTIONS,\n        payload:\n            {\n                options: {\n                    value: \"\", label: \"\",\n                    id: uuidv4()\n                },\n                conf_spec_id: id\n            }\n    }\n}\n\nexport const deleteAllOptions = (id) => ({\n        type: DELETE_ALL_OPTIONS,\n        payload: {conf_spec_id: id}\n})\n\nexport const deleteOption = (option_id, conf_spec_id) => ({\n        type: DELETE_OPTION,\n        payload: {option_id: option_id, conf_spec_id: conf_spec_id}\n})\n\nexport const updateOption = (option_id, conf_spec_id, pair) => ({\n        type: UPDATE_OPTION,\n        payload: {option_id: option_id, conf_spec_id: conf_spec_id, pair: pair}\n})\n","import React from \"react\";\nimport  \"./Options.scss\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport { connect } from \"react-redux\";\nimport { deleteOption, updateOption } from \"../../configurationSpecActions\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass OptionsItem extends React.Component {\n    state = {\n            value: \"\",\n            label: \"\"\n        }\n\n    onDeleteIconClick = () => {\n        this.props.deleteOption(this.props.option.id, this.props.conf_spec_id)\n    }\n\n    onInputUpdate = event => {\n        event.persist()\n        this.props.updateOption(this.props.option.id, this.props.conf_spec_id,\n            {name: event.target.name, value: event.target.value.trim()})\n    }\n\n    render() {\n        return (\n            <div className=\"optionsWrapper\">\n                <div className=\"column\">\n                    <div className=\"inputDiv\">\n                        {Constants.VALUE_FIELD_TEXT}\n                        <span className=\"required-field\">*</span>\n                        <input type=\"text\"\n                               name=\"value\"\n                               className=\"customInput\"\n                               value={this.props.option.value}\n                               onChange={this.onInputUpdate}\n                               required\n                        />\n                    </div>\n                    <div className=\"inputDiv\">\n                        {Constants.LABEL_FIELD_TEXT}\n                        <span className=\"required-field\">*</span>\n                        <input type=\"text\"\n                               name=\"label\"\n                               className=\"customInput\"\n                               value={this.props.option.label}\n                               onChange={this.onInputUpdate}\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"optionsIconWrapper\">\n                    <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteOption,\n    updateOption\n}\n\nexport default connect(null, mapDispatchToProps)(OptionsItem);\n","import React from \"react\";\nimport \"./Options.scss\";\nimport OptionsItem from \"./OptionItem\";\nimport { addOptions } from \"../../configurationSpecActions\";\nimport { connect } from \"react-redux\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass Options extends React.Component {\n    onButtonClick = () => {\n        this.props.addOptions(this.props.conf_spec_id)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"confSpecRow\">\n                    <div className=\"options-title\">\n                        { Constants.OPTIONS_SECTION_LABEL }\n                        <button type=\"button\" className=\"addNewButton\" onClick={this.onButtonClick}>\n                            { Constants.OPTIONS_BTN_TITLE }\n                        </button>\n                    </div>\n                </div>\n                {this.props.options.map(\n                    elem => <OptionsItem key={elem.id}\n                                         option={elem}\n                                         conf_spec_id={this.props.conf_spec_id}\n                    />\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addOptions\n}\n\nexport default connect(null, mapDispatchToProps)(Options)\n","import React from \"react\";\nimport \"./ConfigurationSpecItem.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport Options from \"../Options/Options\";\nimport { connect } from \"react-redux\";\nimport { addOptions, deleteAllOptions, deleteConfSpec, updateConfSpec }\nfrom \"../../configurationSpecActions\";\n\n\nclass ConfigurationSpecItem extends React.Component {\n    state = {\n        showOptions: this.props.syncConfSpecItem.options.length > 0\n    }\n\n    onSelectChange = (event) => {\n        this.onInputChange(event);\n        if (event.target.value === 'options') {\n            this.props.addOptions(this.props.role);\n            this.setState({showOptions: true})\n        }\n        else {\n            this.props.deleteAllOptions(this.props.role);\n            this.setState({showOptions: false});\n        }\n    }\n    onDeleteIconClick = () => {\n        this.props.deleteConfSpec(this.props.role);\n    }\n\n    trimInputValue = event => {\n        this.props.updateConfSpec(\n            this.props.role,\n            {name: event.target.name, value: event.target.value.trim()}\n        )\n    }\n\n    onInputChange = (event) => {\n        event.persist()\n        let value = '';\n        if (event.target.type === \"checkbox\"){\n            value = event.target.checked;\n        }\n        else {\n            value = event.target.value;\n        }\n        this.setState(prev => ({\n            ...prev, ...{\n                [event.target.name]: value\n            }\n        }))\n\n        this.props.updateConfSpec(\n            this.props.role,\n            {name: event.target.name, value: value}\n            )\n\n    }\n\n    render() {\n        return (\n            <div className=\"confSpecWrapper\">\n                <div className='column'>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.KEY_LABEL}</label>\n                            <span className=\"required-field\">*</span>\n                            <input\n                                type=\"text\"\n                                name=\"key\"\n                                className=\"customInput\"\n                                required\n                                value={this.props.syncConfSpecItem.key}\n                                onChange={this.onInputChange}\n                                onBlur={this.trimInputValue}\n                                list=\"key-input-list\"\n                            />\n                        </div>\n                        <datalist id=\"key-input-list\">\n                            {\n                                Constants.KEY_DATALIST.map(\n                                    option => {\n                                        return <option key={`${option} ${this.props.role}`}>{option}</option>\n                                    }\n                                )\n                            }\n                        </datalist>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.TYPE_LABEL}</label>\n                            <span className=\"required-field\">*</span>\n                            <select name=\"type\"\n                                    className=\"customInput\"\n                                    required\n                                    value={this.props.syncConfSpecItem.type || ''}\n                                    onChange={this.onSelectChange}>\n                                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                                {\n                                    Constants.TYPE_OPTIONS.map(\n                                        option => {\n                                            return <option key={option}>{option}</option>\n                                        }\n                                    )\n                                }\n                            </select>\n                        </div>\n                    {  this.state.showOptions\n                        ?\n                        <Options\n                            conf_spec_id={this.props.role}\n                            options={this.props.syncConfSpecItem.options}\n                        />\n                        : null\n                    }\n                        <div className=\"inputDiv\">\n                            <label>{Constants.LABEL}</label>\n                            <span className=\"required-field\">*</span>\n                            <input type=\"text\"\n                                   name=\"label\"\n                                   className=\"customInput\"\n                                   required\n                                   value={this.props.syncConfSpecItem.label}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.TOOLTIP_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"tooltip\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem.tooltip}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.SUBTYPE_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"subtype\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem.subtype}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.GROUP_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"group\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem['group']}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"checkboxDiv\">\n                            <label>{Constants.REQUIRED_LABEL}</label>\n                            <input type=\"checkbox\" name=\"required\"\n                                   checked={this.props.syncConfSpecItem.required} onChange={this.onInputChange}/>\n                        </div>\n                </div>\n                <div>\n                    <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    addOptions,\n    deleteAllOptions,\n    deleteConfSpec,\n    updateConfSpec\n}\n\nconst mapStateToProps = (state) => ({\n        syncConfSpec: state.configuration_spec\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationSpecItem);\n","import React from \"react\";\nimport \"./ConfigurationSpec.scss\"\nimport ConfigurationSpecItem from \"./components/ConfigurationSpecItem/ConfigurationSpecItem\"\nimport { addConfSpec } from \"./configurationSpecActions\";\nimport { connect } from \"react-redux\";\nimport * as Constants from \"globals/constants/constants\";\n\nclass ConfigurationSpec extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"confSpecRow\">\n                    <div>\n                        <label>Configuration Spec</label>\n                        <button type=\"button\" onClick={this.props.addConfSpec}>\n                            { Constants.ADD_BTN_TITLE }\n                        </button>\n                    </div>\n                </div>\n                {\n                    this.props.syncConfSpec.map(\n                        elem => (\n                            <ConfigurationSpecItem\n                                role={elem.id}\n                                key={elem.id}\n                                syncConfSpecItem={elem}\n                            />\n                            )\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addConfSpec,\n}\n\nconst mapStateToProps = (state) => ({\n        syncConfSpec: state.configuration_spec\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationSpec);\n","import React from \"react\";\nimport \"./Capability.scss\"\nimport { updateCapabilityDescription } from \"../capabilitiesActions\";\nimport { connect } from \"react-redux\";\n\n\nclass Capability extends React.Component {\n    trimInputValue = event => {\n        this.props.updateCapabilityDescription({\n            id: this.props.api.id, description: event.target.value.trim()\n        })\n    }\n\n    onDescriptionChange = event => {\n        event.persist()\n        this.props.updateCapabilityDescription({\n            id: this.props.api.id, description: event.target.value\n        }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"capabilitiesWrapper\">\n                <p>{this.props.api.id}\n                    <span className=\"required-field\">*</span>\n                </p>\n                <input\n                    type=\"text\"\n                    value={this.props.api.description || \"\"}\n                    name={this.props.api.id}\n                    placeholder=\"Enter description\"\n                    autoComplete=\"off\"\n                    onChange={this.onDescriptionChange}\n                    onBlur={this.trimInputValue}\n                    required\n                />\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    updateCapabilityDescription\n}\n\nexport default connect(null, mapDispatchToProps)(Capability);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Capability from \"./components/Capability\";\nimport * as Constants from \"globals/constants/constants\";\nimport \"./Capabilities.scss\"\n\n\nconst Capabilities = ({syncCapabilities}) => {\n            return (\n                <div>\n                    <p>Capabilities</p>\n                    <fieldset>\n                        <p className=\"capabilitiesTip\">{Constants.CAPABILITIES_TEXT}</p>\n                        {syncCapabilities.map(api => {\n                            return <Capability api={api} key={api.id}/>\n                        })}\n                    </fieldset>\n                </div>\n            )\n        }\n\nconst mapStateToProps = (state) => ({\n        syncCapabilities: state.capabilities\n})\n\nexport default connect(mapStateToProps)(Capabilities);\n","import React, { useCallback } from \"react\";\nimport \"./FileInput.scss\"\nimport Icons from \"globals/icons/sprite.svg\";\nimport { deleteLogo, onFileLoaded } from \"../../additionalInputsActions\";\nimport { connect } from \"react-redux\";\nimport { useDropzone } from 'react-dropzone'\n\n\nconst FileInput = ({ value, deleteLogo, onFileLoaded }) => {\n    const onDrop = useCallback((acceptedFiles) => {\n        const file = acceptedFiles[0]\n        if (file) {\n            const reader = new FileReader()\n            reader.onload = () => {\n                const dataURL = reader.result\n                onFileLoaded(dataURL)\n            }\n            reader.readAsDataURL(file)\n        }\n\n    }, [onFileLoaded])\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\n        onDrop, multiple: false, accept: \"image/*\"\n    })\n\n    return (\n        <div className=\"dropzone-wrapper\">\n            <div {...getRootProps({className: `dropzone${isDragActive ? '-active' : ''}`})}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop your logo here, or click to select logo</p>\n            </div>\n            {Boolean(value) &&\n            (<div>\n                <img src={value} alt=\"\" height=\"60\" className=\"img\"/>\n                <svg className=\"closeIcon\" onClick={deleteLogo}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>)\n            }\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = {\n    deleteLogo,\n    onFileLoaded\n}\n\nexport default connect(null, mapDispatchToProps)(FileInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Content.scss\";\nimport MarkdownEditor from \"./components/MarkdownEditor/MarkdownEditor\";\nimport ExternalReferences from \"./components/ExternalReferences/ExternalReferences\";\nimport Properties from \"./components/Properties/Properties\";\nimport ConfigurationSpec from \"./components/ConfigurationSpec/ConfigurationSpec\";\nimport Capabilities from \"./components/Capabilities/Capabilities\";\nimport * as Constants from \"globals/constants/constants\";\nimport { onFileLoaded, updateFlags, updateSingleInput } from \"./additionalInputsActions\";\nimport FileInput from \"./components/FileInput/FileInput\";\nimport { addConfSpec } from \"./components/ConfigurationSpec/configurationSpecActions\";\n\n\nclass Content extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateSingleInput({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    trimInputValue = event => {\n        this.props.updateSingleInput({\n            name: event.target.name, value: event.target.value.trim()\n        })\n    }\n\n    trimFlags = event => {\n        this.props.updateFlags(event.target.value.split(',').map(item=>item.trim()))\n    }\n\n    changeFlagsHandler = event => {\n        event.persist()\n        this.props.updateFlags(event.target.value.split(','))\n    }\n\n    handleLoadLocalFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => this.props.onFileLoaded(reader.result);\n            reader.readAsDataURL(file);\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"row\">\n                    <h1 className=\"title\">{Constants.MAIN_TITLE}</h1>\n                </div>\n                <form id=\"mainForm\">\n                    <div className=\"row\">\n                        <div className=\"column\">\n                            <label className=\"input-label\">{Constants.INPUT_TITLE_LABEL}\n                                <span className=\"required-field\">*</span>\n                            </label>\n                            <textarea\n                                required\n                                autoComplete=\"off\"\n                                value={this.props.syncContent.title || '' }\n                                name=\"title\"\n                                onChange={this.changeInputHandler}\n                                onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.DEFAULT_NAME_LABEL}\n                                <span className=\"required-field\">*</span>\n                            </label>\n                            <textarea required\n                                      autoComplete=\"off\"\n                                      value={this.props.syncContent.default_name || ''}\n                                      name=\"default_name\"\n                                      onChange={this.changeInputHandler}\n                                      onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.SHORT_DESCRIPTION_LABEL}</label>\n                            <textarea autoComplete=\"off\"\n                                      value={this.props.syncContent.short_description || ''}\n                                      name=\"short_description\"\n                                      onChange={this.changeInputHandler}\n                                      onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.FLAGS_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"flags\"\n                                   placeholder={Constants.FLAGS_PLACEHOLDER}\n                                   autoComplete=\"off\"\n                                   value={this.props.syncContent.flags || ''}\n                                   onChange={this.changeFlagsHandler}\n                                   onBlur={this.trimFlags}\n                            />\n                            <label className=\"input-label\">{Constants.LOGO_LABEL}</label>\n                            <FileInput\n                                value={this.props.syncContent.logo}\n                                onChange={this.handleLoadLocalFile}\n                            />\n                            <Properties/>\n                            <Capabilities/>\n                            <ExternalReferences/>\n                            <ConfigurationSpec/>\n                        </div>\n                        <div className=\"column\">\n                            <label className=\"input-label\">{Constants.DESCRIPTION_LABEL}</label>\n                            <MarkdownEditor name=\"description\"/>\n                            <label className=\"input-label\">{Constants.TIPS_LABEL}</label>\n                            <MarkdownEditor name=\"tips\"/>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    syncContent: state.other_inputs\n})\n\nconst mapDispatchToProps = {\n    updateSingleInput,\n    updateFlags,\n    onFileLoaded,\n    addConfSpec\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","import {\n    READ_STATE_FROM_BACKEND,\n    PULL_MODULE_TYPE_REQUEST,\n    PUSH_MODULE_TYPE_REQUEST,\n    PULL_MODULE_TYPE_SUCCESS,\n    PULL_MODULE_TYPE_ERROR,\n    PUSH_MODULE_TYPE_SUCCESS,\n    PUSH_MODULE_TYPE_ERROR\n}\nfrom \"globals/constants/types\";\n\n\nexport const readStateFromBackend = (json) => ({\n    type: READ_STATE_FROM_BACKEND,\n    payload: json\n})\n\nexport const pullModuleTypeRequest = (\n    module_type_id, client_id, password, iroh_service_url\n    ) => ({\n    type: PULL_MODULE_TYPE_REQUEST,\n    payload: {\n        module_type_id: module_type_id,\n        client_id: client_id,\n        password: password,\n        iroh_service_url: iroh_service_url\n    }\n})\n\nexport const onPullModuleTypeSuccess = (data) => ({\n    type: PULL_MODULE_TYPE_SUCCESS,\n    payload: data\n})\n\nexport const onPullModuleTypeError = (error) => ({\n    type: PULL_MODULE_TYPE_ERROR,\n    payload: error\n})\n\nexport const pushModuleTypeRequest = (json, values) => ({\n    type: PUSH_MODULE_TYPE_REQUEST,\n    payload: {\n        json: json,\n        client_id: values.client_id,\n        password: values.password,\n        iroh_service_url: values.iroh_service_url\n    }\n})\n\nexport const onPushModuleTypeSuccess = (data) => ({\n    type: PUSH_MODULE_TYPE_SUCCESS,\n    payload: data\n})\n\nexport const onPushModuleTypeError = (error) => ({\n    type: PUSH_MODULE_TYPE_ERROR,\n    payload: error\n})\n","import {\n    HIDE_MODAL_FOR_PUSH,\n    SHOW_MODAL_FOR_PUSH,\n    HIDE_ALERT,\n    HIDE_LOADER,\n    HIDE_MODAL_FOR_PULL,\n    SHOW_ALERT,\n    SHOW_LOADER,\n    SHOW_MODAL_FOR_PULL\n} from \"globals/constants/types\";\n\n\nexport const showModalForPush = () => ({\n    type: SHOW_MODAL_FOR_PUSH\n})\n\nexport const hideModalForPush = () => ({\n    type: HIDE_MODAL_FOR_PUSH\n})\n\nexport const showLoader = () => ({\n    type: SHOW_LOADER\n})\n\nexport const hideLoader = () => ({\n    type: HIDE_LOADER\n})\n\nexport const showModalForPull = () => ({\n    type: SHOW_MODAL_FOR_PULL\n})\n\nexport const hideModalForPull = () => ({\n    type: HIDE_MODAL_FOR_PULL\n})\n\nexport const showAlert = (title, message) => ({\n    type: SHOW_ALERT,\n    payload: {\n        title,\n        message\n    }\n})\n\nexport const hideAlert = () => ({\n    type: HIDE_ALERT\n})\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport './ModalForPush.scss';\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\";\nimport { pushModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPush, showAlert } from \"../visibilityActions\";\nimport { connect } from \"react-redux\";\n\n\nconst ModalForPush = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '', iroh_service_url: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.client_id) {\n                    errors.client_id = 'is required';\n                }\n                if (!values.password) {\n                    errors.password = 'is required';\n                }\n                if (!values.iroh_service_url) {\n                    errors.iroh_service_url = 'is required';\n                }\n                return errors;\n            }}\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.pushModuleTypeRequest(props.json, values)\n                setSubmitting(false);\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader?\n                    <Loader loaded={false} className=\"spinner\" />\n                : <Form className=\"modal-content\">\n                    <svg className=\"closeIcon\" onClick={props.hideModalForPush}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n\n                    <p className=\"push-modal-text\">\n                        { Constants.PUSH_MODAL_TEXT }\n                    </p>\n                    <label htmlFor=\"client_id\" className=\"centered\">\n                        { Constants.CLIENT_ID_LABEL }\n                    </label>\n                    <div>\n                        <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                        <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                    </div>\n                    <label htmlFor=\"password\" className=\"centered\">\n                        { Constants.CLIENT_PASSWORD_LABEL }\n                    </label>\n                    <div>\n                        <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                        <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                    </div>\n                    <label htmlFor=\"iroh_service_url\" className=\"centered\">\n                        { Constants.REGION_LABEL }\n                    </label>\n                    <div>\n                        <Field as=\"select\" name=\"iroh_service_url\" required>\n                          <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                          <option value={ Constants.IROH_SERVICES_URLS.Europe }>Europe</option>\n                          <option value={ Constants.IROH_SERVICES_URLS[\"North America\"] }>North America</option>\n                          <option value={ Constants.IROH_SERVICES_URLS.Asia }>Asia</option>\n                        </Field>\n                      <ErrorMessage name=\"iroh_service_url\" component=\"div\" className='error'/>\n                    </div>\n                    <div className=\"controls\">\n                        <button type=\"button\" onClick={props.hideModalForPush} className=\"cancel\">\n                            { Constants.CANCEL_BTN_TITLE }\n                        </button>\n                        <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                            { Constants.PUSH_BTN_TITLE }\n                        </button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    hideModalForPush,\n    showAlert,\n    pushModuleTypeRequest\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPush);\n","import React from \"react\";\nimport \"./CustomAlert.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\nexport const CustomAlert = ({title, message, closeAlertHandler}) => (\n    <div className=\"alert\">\n        <div className=\"alertContent\">\n            <div className=\"alertHeader\">\n                {title}\n                <svg className=\"closeIcon\" onClick={closeAlertHandler}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n            <div className=\"alertBody\">\n                {message}\n            </div>\n            <div className=\"alertFooter\">\n                <button type=\"button\"\n                        className=\"closeButton\"\n                        onClick={closeAlertHandler}>\n                    {Constants.CLOSE_BTN_LABEL}\n                </button>\n            </div>\n        </div>\n    </div>\n)\n","import { Validator } from \"jsonschema\";\n\nexport const validator = new Validator();\n\nconst Properties = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"supported-apis\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"auth-type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\nconst Capability = {\n    \"id\": \"/Capability\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n                \"enum\": [\n                \"respond\",\n                \"observe\",\n                \"health\",\n                \"tiles\",\n                \"refer\",\n                \"deliberate\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"id\",\n        \"description\"\n    ]\n}\n\nconst ExternalReference =  {\n    \"id\": \"/ExternalReference\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"link\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"label\",\n        \"link\"\n    ]\n}\n\nconst ConfigurationSpecOptions = {\n    \"id\": \"/ConfigurationSpecOptions\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"value\": {\n            \"type\": \"string\"\n        },\n        \"label\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"value\",\n        \"label\"\n    ]\n}\n\nconst ConfigurationSpecField = {\n    \"id\": \"/ConfigurationSpecField\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"key\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\",\n                \"enum\": [\n                \"password\",\n                \"string\",\n                \"api_key\",\n                \"integer\",\n                \"device\",\n                \"options\",\n                \"boolean\"\n            ]\n        },\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"tooltip\": {\n            \"type\": \"string\"\n        },\n        \"subtype\": {\n            \"type\": \"string\"\n        },\n        \"required\": {\n            \"type\": \"boolean\"\n        },\n        \"options\": {\n            \"type\": \"array\",\n                \"items\": {\n                \"$ref\": \"/ConfigurationSpecOptions\"\n            }\n        },\n        \"group\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"key\",\n        \"type\",\n        \"label\"\n    ]\n}\n\nvalidator.addSchema(Capability, '/Capability');\nvalidator.addSchema(ExternalReference, '/ExternalReference');\nvalidator.addSchema(Properties, '/Properties');\nvalidator.addSchema(ConfigurationSpecOptions, '/ConfigurationSpecOptions');\nvalidator.addSchema(ConfigurationSpecField, '/ConfigurationSpecField');\n\nexport const VALIDATION_SCHEMA = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"description\": {\"type\": \"string\"},\n        \"tips\": {\"type\": \"string\"},\n        \"logo\": {\"type\": \"string\"},\n        \"short_description\": {\"type\": \"string\"},\n        \"title\": {\"type\": \"string\"},\n        \"flags\": {\"type\": \"array\"},\n        \"external_references\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/ExternalReference\"\n            }\n        },\n        \"configuration_spec\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/ConfigurationSpecField\"\n            }\n        },\n        \"capabilities\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/Capability\"\n            }\n        },\n        \"properties\": {\n            \"$ref\": \"/Properties\"\n        },\n    },\n    \"required\": [\"title\", \"default_name\"]\n};\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport './ModalForPull.scss';\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\"\nimport { connect } from \"react-redux\";\nimport { pullModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPull } from \"../visibilityActions\";\n\n\nconst ModalForPull = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '', module_type_id: '', iroh_service_url: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.client_id) {\n                    errors.client_id = 'is required';\n                }\n                if (!values.password) {\n                    errors.password = 'is required';\n                }\n                if (!values.module_type_id) {\n                    errors.module_type_id = 'is required';\n                }\n                if (!values.iroh_service_url) {\n                    errors.iroh_service_url = 'is required';\n                }\n                return errors;\n            }}\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.pullModuleTypeRequest(\n                    values.module_type_id,\n                    values.client_id,\n                    values.password,\n                    values.iroh_service_url\n                )\n                setSubmitting(false)\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader ?\n                    <Loader loaded={false} className=\"spinner\" />\n                   : <Form className=\"modal-content\">\n                        <svg className=\"closeIcon\" onClick={props.hideModalForPull}>\n                            <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                        </svg>\n\n                        <p className=\"push-modal-text\">\n                            { Constants.PULL_MODAL_TEXT }\n                        </p>\n                        <label htmlFor=\"client_id\" className=\"centered\">\n                            { Constants.CLIENT_ID_LABEL }\n                        </label>\n                        <div>\n                            <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                            <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"password\" className=\"centered\">\n                            { Constants.CLIENT_PASSWORD_LABEL }\n                        </label>\n                        <div>\n                            <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                            <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"module_type_id\" className=\"centered\">\n                            { Constants.MODULE_TYPE_ID }\n                        </label>\n                        <div>\n                            <Field name=\"module_type_id\" type=\"module_type_id\" id=\"module_type_id\" required/>\n                            <ErrorMessage name=\"module_type_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"iroh_service_url\" className=\"centered\">\n                            { Constants.REGION_LABEL }\n                        </label>\n                        <div>\n                            <Field as=\"select\" name=\"iroh_service_url\" required>\n                                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                                <option value={ Constants.IROH_SERVICES_URLS.Europe }>Europe</option>\n                                <option value={ Constants.IROH_SERVICES_URLS[\"North America\"] }>North America</option>\n                                <option value={ Constants.IROH_SERVICES_URLS.Asia }>Asia</option>\n                            </Field>\n                            <ErrorMessage name=\"iroh_service_url\" component=\"div\" className='error'/>\n                        </div>\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={props.hideModalForPull} className=\"cancel\">\n                                { Constants.CANCEL_BTN_TITLE }\n                            </button>\n                            <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                                { Constants.PULL_BTN_TITLE }\n                            </button>\n                        </div>\n                    </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    pullModuleTypeRequest,\n    hideModalForPull\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPull);\n","import React, { createRef } from \"react\";\nimport \"./Sidebar.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport ModalForPush from \"../ModalForPush/ModalForPush\";\nimport { CustomAlert } from \"../CustomAlert/CustomAlert\";\nimport { validator, VALIDATION_SCHEMA } from \"globals/constants/schema\";\nimport { readStateFromBackend } from \"rootActions\";\nimport ModalForPull from \"../ModalForPull/ModalForPull\";\nimport {\n    hideAlert, hideModalForPush, hideModalForPull,\n    showAlert, showModalForPush, showModalForPull\n} from \"../visibilityActions\";\nimport { arrangeJSON } from \"utils/formattingUtils\";\n\n\nclass Sidebar extends React.Component {\n    state = {\n        inputEl: createRef()\n    }\n\n\n    constructValidJSON() {\n        const data = JSON.parse(JSON.stringify(this.props.syncJSON));\n        for (const elem of data.configuration_spec) {\n            if (elem.options) {\n                elem.options.map(\n                    option => delete option[\"id\"]\n                )\n            }\n            delete elem[\"id\"]\n            Object.keys(elem).forEach(\n                key => (elem[key].length === 0) && delete elem[key]\n            );\n        }\n        data.external_references.map(\n            element => delete element[\"id\"]\n        )\n        return arrangeJSON(data)\n    }\n\n    isValidForm() {\n        const form = document.getElementById(\"mainForm\");\n        return form.reportValidity();\n    }\n\n    onSaveButtonClick = () => {\n        if (this.isValidForm()) {\n            const formattedData = this.constructValidJSON();\n            const fileData = JSON.stringify(formattedData, null, 4);\n            const blob = new Blob([fileData], {type: \"text/plain\"});\n            const url = URL.createObjectURL(blob);\n            const link = document.createElement(\"a\");\n            const title = formattedData.title.replace(/ /g, '_');\n            link.download = `${title}_module_type.json`;\n            link.href = url;\n            link.click();\n        }\n    }\n\n    onPushButtonClick = () => {\n        if (this.isValidForm()) {\n            this.props.showModalForPush();\n        }\n    }\n\n    handleFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                try {\n                    const json = JSON.parse(reader.result);\n                    const valResult = validator.validate(json, VALIDATION_SCHEMA)\n                    if (!valResult.valid) {\n                        this.props.showAlert(\n                            Constants.ALERT_TITLE_FAILURE,\n                            Constants.VALIDATION_ERROR_MESSAGE\n                            + valResult.errors.join(\", \")\n                        )\n                    } else {\n                        this.props.readStateFromBackend(json)\n                    }\n                }\n                catch (error) {\n                    this.props.showAlert(\n                        Constants.ALERT_TITLE_FAILURE,\n                        String(error)\n                    )\n                }\n            };\n            reader.onerror = () => {\n                this.props.showAlert(\n                    Constants.ALERT_TITLE_FAILURE,\n                    Constants.FILE_LOADING_FAILURE\n                    + file.name\n                );\n            };\n            reader.readAsText(file, 'UTF-8');\n        }\n    }\n\n    onOpenButtonClick = () => {\n        const inputElement = this.state.inputEl.current;\n        inputElement.click();\n        inputElement.addEventListener('change', this.handleFile, false);\n    }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <p>{ Constants.SIDEBAR_TITLE }</p>\n                <ul>\n                    <input type=\"file\" ref={this.state.inputEl} accept=\"application/JSON\"/>\n                    <li onClick={this.onOpenButtonClick}>\n                        { Constants.OPEN_FROM_FILE }\n                    </li>\n                    <li onClick={this.props.showModalForPull}>\n                        { Constants.OPEN_FROM_API }\n                    </li>\n                    <li onClick={this.onSaveButtonClick}>\n                        { Constants.SAVE_JSON }\n                    </li>\n                    <li onClick={this.onPushButtonClick}>\n                        { Constants.PUSH_JSON }\n                    </li>\n                </ul>\n                {\n                   this.props.modalForPush &&\n                   <ModalForPush\n                       json={this.constructValidJSON()}\n                   />\n                }\n                {\n                    this.props.customAlert &&\n                        <CustomAlert\n                            title={this.props.customAlert.title}\n                            message={this.props.customAlert.message}\n                            closeAlertHandler={this.props.hideAlert}\n                        />\n                }\n                {\n                    this.props.modalForPull &&\n                    <ModalForPull/>\n                }\n            </div>\n        )\n    }\n}\n\nconst formatState = (state) => {\n    const {\n        external_references,\n        configuration_spec,\n        properties,\n        capabilities,\n        other_inputs\n    } = state;\n    return {\n        external_references,\n        configuration_spec,\n        properties,\n        capabilities,\n        ...other_inputs\n    }\n};\n\n\nconst mapStateToProps = (state) => ({\n    syncJSON: formatState(state),\n    modalForPush: state.elements_visibility.modalForPush,\n    modalForPull: state.elements_visibility.modalForPull,\n    customAlert: state.elements_visibility.customAlert\n})\n\nconst mapDispatchToProps = {\n    readStateFromBackend,\n    showModalForPush,\n    hideModalForPush,\n    showModalForPull,\n    hideModalForPull,\n    showAlert,\n    hideAlert\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n\n","import * as constants from 'globals/constants/constants'\n\nexport function arrangeJSON(data) {\n    let arrangedData = {}\n    for (const property of constants.JSON_ELEMENTS_ORDER) {\n        if (property in data) {\n            arrangedData[property] = data[property];\n        }\n    }\n    return arrangedData;\n}\n","import React from \"react\";\nimport './Header.scss';\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div>\n                    <svg className=\"iconCiscoLogo\">\n                        <use xlinkHref={`${Icons}#icon-cisco-logo`}/>\n                    </svg>\n                </div>\n                <div>\n                    <p className=\"headerTitle\">{Constants.HEADER_TITLE}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.scss';\nimport Content from \"./container/Content/Content\";\nimport Sidebar from \"./container/Content/components/Sidebar/Sidebar\";\nimport Header from \"./container/Content/components/Header/Header\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"site\">\n                <Sidebar/>\n                <Content/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"container is cached for offline use.\" message.\n              console.log('container is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    ADD_EXTERNAL_REFERENCE,\n    DELETE_EXTERNAL_REFERENCE,\n    UPDATE_EXTERNAL_REFERENCE,\n} from \"globals/constants/types\"\n\nconst initialState = []\n\nexport const externalReferencesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_EXTERNAL_REFERENCE:\n            return state.concat(\n                {\n                    \"label\": \"\",\n                    \"link\": \"\",\n                    \"id\": action.payload.id\n                }\n            )\n\n        case DELETE_EXTERNAL_REFERENCE:\n            return state.filter(\n                el => !Object.values(el).includes(action.payload)\n            )\n\n        case UPDATE_EXTERNAL_REFERENCE:\n            return state.map(\n                    item => {\n                        if (item.id !== action.payload.id) {\n                            return item\n                        }\n                        return {\n                            ...item,\n                            [action.payload.pair.name]: action.payload.pair.value\n                        }\n                    }\n                )\n\n        default:\n            return state\n    }\n}\n","import {\n    ADD_CONF_SPEC,\n    ADD_OPTIONS,\n    DELETE_ALL_OPTIONS,\n    DELETE_CONF_SPEC,\n    DELETE_OPTION,\n    UPDATE_CONF_SPEC,\n    UPDATE_OPTION\n} from \"globals/constants/types\"\n\nfunction getIndexOfSpec(state, payload) {\n    let spec = state.filter((spec) => spec.id === payload.conf_spec_id);\n    return state.indexOf(spec[0])\n}\n\nexport const configurationSpecReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_CONF_SPEC:\n            return state.concat([action.payload])\n        case ADD_OPTIONS:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.concat(action.payload.options)\n                    }\n                }\n            )\n\n        case DELETE_CONF_SPEC:\n            return state.filter(\n                (spec) => spec.id !== action.payload.conf_spec_id\n            );\n\n        case DELETE_ALL_OPTIONS:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": []\n                    }\n                }\n            )\n        case DELETE_OPTION:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.filter(\n                            el => el.id !== action.payload.option_id\n                        )\n                    }\n                }\n            )\n\n        case UPDATE_CONF_SPEC:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        [action.payload.pair.name]: action.payload.pair.value\n                    }\n                }\n            )\n\n        case UPDATE_OPTION:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.map((option) => {\n                                if (option.id !== action.payload.option_id) {\n                                    return option\n                                }\n                                return {\n                                    ...option,\n                                    [action.payload.pair.name]: action.payload.pair.value\n                                }\n                            }\n                        )\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\n","import {\n    TOGGLE_AUTH_TYPE, UPDATE_AUTH_TYPE, UPDATE_CONF_TOKEN,\n    UPDATE_SUPPORTED_API\n} from \"globals/constants/types\"\nimport { TOGGLE_ALGORITHM } from \"globals/constants/types\";\nimport * as Constants from \"globals/constants/constants\";\n\nconst initialState = {\n \"supported-apis\": []\n}\n\nexport const propertiesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_SUPPORTED_API:\n            if (!state[\"supported-apis\"].includes(action.payload)) {\n                return {\n                    ...state,\n                        \"supported-apis\": state[\"supported-apis\"].concat([action.payload])\n                    }\n            } else {\n                return {\n                    ...state,\n                        \"supported-apis\": state[\"supported-apis\"].filter(\n                            (api) => api !== action.payload\n                        )\n                }\n            }\n        case TOGGLE_AUTH_TYPE:\n            if (Object.keys(state).includes(\"auth-type\")) {\n                return Object.fromEntries(\n                        Object.entries(state).filter(\n                            ([key, val]) => key === Constants.SUPPORTED_APIS\n                        )\n                )\n            } else {\n                return {\n                    ...state,\n                        \"auth-type\": \"\"\n                }\n            }\n\n        case UPDATE_AUTH_TYPE:\n            return {\n                ...state,\n                \"auth-type\": action.payload\n            }\n        case UPDATE_CONF_TOKEN:\n            return {...state,\n                [action.payload.name]: action.payload.value\n            }\n\n        case TOGGLE_ALGORITHM:\n            if (action.payload === 'RS256'){\n                return Object.fromEntries(\n                    Object.entries(state).filter(\n                        ([key, val]) => key !== Constants.CONFIGURATION_TOKEN_KEY\n                    )\n                )\n            }\n            else {\n                return Object.fromEntries(\n                    Object.entries(state).filter(\n                        ([key, val]) => key !== Constants.CUSTOM_JWKS_HOST\n                    )\n                )\n            }\n\n        default:\n            return state\n    }\n}\n","import {\n    ADD_CAPABILITY,\n    DELETE_CAPABILITY,\n    UPDATE_CAPABILITY_DESCR\n} from \"globals/constants/types\"\n\nconst initialState = [];\n\nexport const capabilitiesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CAPABILITY:\n            if (state.filter(\n                obj => Object.values(obj).includes(action.payload.id)).length === 0\n            ) {\n                return state.concat([action.payload])\n            } else {\n                return state\n            }\n        case DELETE_CAPABILITY:\n            return state.filter((api) => api.id !== action.payload)\n\n        case UPDATE_CAPABILITY_DESCR:\n            let item = state.filter((api) => api.id === action.payload.id);\n            let elementIndex = state.indexOf(item[0]);\n            return state.map((item, index) => {\n                    if (index !== elementIndex) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        ...action.payload\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\n","import {\n    HIDE_ALERT, HIDE_MODAL_FOR_PUSH, SHOW_ALERT, SHOW_LOADER,\n    SHOW_MODAL_FOR_PUSH, SHOW_MODAL_FOR_PULL,\n    HIDE_LOADER, HIDE_MODAL_FOR_PULL\n}\nfrom \"globals/constants/types\";\n\n\nconst initialState = {\n    modalForPush: false,\n    modalForPull: false,\n    loader: false,\n    customAlert: null\n};\n\nexport const visibilityReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case SHOW_MODAL_FOR_PUSH:\n            return {...state, modalForPush: true}\n        case HIDE_MODAL_FOR_PUSH:\n            return {...state, modalForPush: false}\n        case SHOW_LOADER:\n            return {...state, loader: true}\n        case HIDE_LOADER:\n            return {...state, loader: false}\n        case SHOW_MODAL_FOR_PULL:\n            return {...state, modalForPull: true}\n        case HIDE_MODAL_FOR_PULL:\n            return {...state, modalForPull: false}\n        case SHOW_ALERT:\n            return {...state, customAlert: {\n                ...state.customAlert,\n                    ...action.payload\n                }\n            }\n        case HIDE_ALERT:\n            return {...state, customAlert: null}\n        default: return state\n    }\n}\n","import { additionalInputsReducer } from \"./container/Content/additionalInputsReducer\";\nimport { externalReferencesReducer } from \"./container/Content/components/ExternalReferences/externalReferencesReducer\";\nimport { configurationSpecReducer } from \"./container/Content/components/ConfigurationSpec/configurationSpecReducer\";\nimport { propertiesReducer } from \"./container/Content/components/Properties/propertiesReducer\";\nimport { capabilitiesReducer } from \"./container/Content/components/Capabilities/capabilitiesReducer\";\nimport { combineReducers } from \"redux\";\nimport { READ_STATE_FROM_BACKEND } from \"./globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { visibilityReducer } from \"./container/Content/components/visibilityReducer\";\n\n\nconst appReducer = combineReducers({\n            other_inputs: additionalInputsReducer,\n            properties: propertiesReducer,\n            capabilities: capabilitiesReducer,\n            external_references: externalReferencesReducer,\n            configuration_spec: configurationSpecReducer,\n            elements_visibility: visibilityReducer\n    }\n)\n\nfunction addIDs (currentList) {\n    if (currentList) {\n        currentList.map(\n            el => el.id = uuidv4()\n        )\n    }\n    return currentList || []\n}\n\nfunction reformatConfSpec (spec) {\n    spec = addIDs(spec);\n    if (spec) {\n        spec.map(el => el.options = addIDs(el.options))\n    }\n    return spec\n}\n\nexport const rootReducer = (state, action) => {\n    if (action.type === READ_STATE_FROM_BACKEND) {\n        return {\n            ...state,\n            external_references: addIDs(action.payload.external_references),\n            configuration_spec: reformatConfSpec(action.payload.configuration_spec),\n            properties: action.payload.properties || [],\n            capabilities: action.payload.capabilities || [],\n            other_inputs: {\n                // The API response contains additional fields that need to be excluded\n                title: action.payload.title,\n                short_description: action.payload.short_description,\n                tips: action.payload.tips,\n                description: action.payload.description,\n                flags: action.payload.flags,\n                logo: action.payload.logo,\n                default_name: action.payload.default_name\n            }\n        }\n    }\n    return appReducer(state, action)\n}\n","import {DELETE_LOGO, LOAD_FILE, UPDATE_FlAGS, UPDATE_SINGLE_INPUT}\nfrom \"globals/constants/types\"\nimport * as Constants from \"globals/constants/constants\";\n\n\nexport const additionalInputsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_SINGLE_INPUT:\n            return {...state, [action.payload.name]: action.payload.value}\n\n        case UPDATE_FlAGS:\n            return {...state, \"flags\": action.payload}\n\n        case LOAD_FILE:\n            return {...state, \"logo\": action.payload}\n        case DELETE_LOGO:\n            return Object.fromEntries(\n                Object.entries(state).filter(\n                    ([key, val]) => key !== Constants.LOGO\n                )\n            )\n        default:\n            return state\n    }\n}\n","import * as Constants from \"./globals/constants/constants\";\n\nexport async function authorize(values) {\n    const response =  await fetch(values.iroh_service_url + Constants.AUTH_ENDPOINT,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Authorization': 'Basic ' + btoa(values.client_id + ':' + values.password)\n            },\n            body: 'grant_type=client_credentials'\n        }\n    )\n    const data = await response.json();\n    if (!response.ok) {\n        throw response.statusText || data['error_description']\n    }\n    return data['access_token'];\n}\n\n\nexport async function pullModuleType(values, token) {\n    if (token) {\n        const response = await fetch(\n            values.iroh_service_url +\n            '/iroh/iroh-int/module-type/'\n            + values.module_type_id, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        })\n        const data = await response.json();\n        if (!response.ok) {\n            throw (response.statusText || data['error_description'])\n        }\n        else {\n            return data\n        }\n    }\n}\n\n\nexport async function pushModuleType(token, values) {\n    if (token) {\n        const response = await fetch(values.iroh_service_url\n            + Constants.MODULE_TYPE_ENDPOINT,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token\n                },\n                \"body\": JSON.stringify(values.json)\n            }\n        )\n        const data = await response.json();\n        if (!response.ok) {\n            throw(\n                response.statusText || data['errors']\n            )\n        }\n        else {\n            return data['id']\n        }\n    }\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\"\nimport {\n    PULL_MODULE_TYPE_ERROR,\n    PULL_MODULE_TYPE_REQUEST,\n    PULL_MODULE_TYPE_SUCCESS, PUSH_MODULE_TYPE_ERROR,\n    PUSH_MODULE_TYPE_REQUEST, PUSH_MODULE_TYPE_SUCCESS,\n} from \"./globals/constants/types\";\nimport * as Constants from \"globals/constants/constants\";\nimport {\n    hideLoader,\n    hideModalForPush,\n    hideModalForPull,\n    showAlert,\n    showLoader\n} from \"./container/Content/components/visibilityActions\";\nimport {authorize, pullModuleType, pushModuleType} from \"./services\";\nimport {\n    onPullModuleTypeSuccess,\n    onPullModuleTypeError,\n    onPushModuleTypeSuccess,\n    onPushModuleTypeError,\n    readStateFromBackend,\n} from \"./rootActions\"\n\n\nexport function* sagaWatcher()  {\n    yield takeLatest(PULL_MODULE_TYPE_REQUEST, pullSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_REQUEST, pushSagaWorker)\n    yield takeLatest(PULL_MODULE_TYPE_SUCCESS, onPullSuccessSagaWorker)\n    yield takeLatest(PULL_MODULE_TYPE_ERROR, onPullErrorSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_SUCCESS, onPushSuccessSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_ERROR, onPushErrorSagaWorker)\n}\n\nfunction* onPullSuccessSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(hideModalForPull())\n    yield put(readStateFromBackend(action.payload))\n}\n\nfunction* onPullErrorSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(showAlert(Constants.ALERT_TITLE_FAILURE, action.payload))\n}\n\nfunction* pullSagaWorker(action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload)\n        const payload = yield call(pullModuleType, action.payload, token)\n        yield put(onPullModuleTypeSuccess(payload))\n    }\n    catch (e){\n        yield put(onPullModuleTypeError(String(e).replace(/^\\w/, c => c.toUpperCase())))\n    }\n}\n\nfunction* onPushSuccessSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(hideModalForPush())\n    yield put(showAlert(Constants.ALERT_TITLE_SUCCESS, Constants.MESSAGE_SUCCESS + action.payload))\n}\n\nfunction* onPushErrorSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(showAlert(Constants.ALERT_TITLE_FAILURE, action.payload))\n}\n\nfunction* pushSagaWorker(action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload)\n        const id = yield call(pushModuleType, token, action.payload)\n        yield put(onPushModuleTypeSuccess(id))\n    }\n    catch (e){\n        yield put(onPushModuleTypeError(String(e).replace(/^\\w/, c => c.toUpperCase())))\n    }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'globals/styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\"\nimport { rootReducer } from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\"\nimport { sagaWatcher } from \"./sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(saga)\n)\n\nsaga.run(sagaWatcher);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}