{"version":3,"sources":["globals/icons/sprite.svg","container/Content/additionalInputsActions.js","globals/constants/types.js","container/Content/components/MarkdownEditor/MarkdownEditor.js","globals/constants/constants.js","container/Content/components/ExternalReferences/components/CustomInput/CustomInput.js","container/Content/components/ExternalReferences/externalReferencesActions.js","container/Content/components/ExternalReferences/ExternalReferences.js","container/Content/components/Properties/propertiesActions.js","container/Content/components/Properties/components/SupportedAPI/SupportedAPI.js","container/Content/components/Capabilities/capabilitiesActions.js","container/Content/components/Properties/components/AuthType/ConfTokenDetail.js","container/Content/components/Properties/components/AuthType/ConfToken.js","container/Content/components/Properties/components/AuthType/AuthType.js","container/Content/components/Properties/Properties.js","container/Content/components/ConfigurationSpec/configurationSpecActions.js","container/Content/components/ConfigurationSpec/components/Options/OptionItem.js","container/Content/components/ConfigurationSpec/components/Options/Options.js","container/Content/components/ConfigurationSpec/components/ConfigurationSpecItem/ConfigurationSpecItem.js","container/Content/components/ConfigurationSpec/ConfigurationSpec.js","container/Content/components/Capabilities/components/Capability.js","container/Content/components/Capabilities/Capabilities.js","container/Content/components/FileInput/FileInput.js","container/Content/Content.js","rootActions.js","container/Content/components/visibilityActions.js","container/Content/components/ModalForPush/ModalForPush.js","container/Content/components/CustomAlert/CustomAlert.js","globals/constants/schema.js","container/Content/components/ModalForPull/ModalForPull.js","utils/formattingUtils.js","container/Content/components/ModalForPatch/ModalForPatch.js","utils/saveUtils.js","container/Content/components/ConfirmBox/ConfirmBox.js","container/Content/components/Sidebar/Sidebar.js","container/Content/components/Header/Header.js","App.js","serviceWorker.js","container/Content/components/ExternalReferences/externalReferencesReducer.js","container/Content/components/ConfigurationSpec/configurationSpecReducer.js","container/Content/components/Properties/propertiesReducer.js","container/Content/components/Capabilities/capabilitiesReducer.js","container/Content/components/visibilityReducer.js","rootReducer.js","container/Content/additionalInputsReducer.js","container/Content/components/patchReducer.js","services.js","container/Content/components/patchActions.js","sagas.js","index.js"],"names":["module","exports","updateSingleInput","pair","type","payload","name","value","onFileLoaded","imageFile","MarkdownEditor","state","tab","props","handleValueChange","setState","handleTabChange","minEditorHeight","minPreviewHeight","maxEditorHeight","commands","headerCommand","boldCommand","italicCommand","strikeThroughCommand","linkCommand","quoteCommand","codeCommand","orderedListCommand","unorderedListCommand","checkedListCommand","onChange","this","onTabChange","syncContent","generateMarkdownPreview","markdown","Promise","resolve","source","selectedTab","React","Component","mapDispatchToProps","connect","other_inputs","IROH_SERVICES_URLS","URL_TO_REGION_MAPPING","JSON_ELEMENTS_ORDER","KEY_DATALIST","TYPE_OPTIONS","LABELS","AUTH_TYPE_OPTIONS","CONF_TOKEN_OPTIONS","ALERT_TITLE_FAILURE","PATCH_SKELETON","nam","id","patch","eu","apjc","CustomInput","trimInputValue","event","updateExternalReference","reference","target","trim","changeInputHandler","persist","onDeleteIconClick","deleteExternalReference","className","placeholder","autoComplete","list","label","onBlur","required","link","Constants","map","option","key","onClick","xlinkHref","Icons","ExternalReferences","onAddButtonClick","addExternalReference","syncExternalReferences","item","uuidv4","external_references","updateConfToken","SupportedAPI","title","api","class","onCheckboxToggle","updateSupportedAPI","checked","addCapability","syncSupportedAPIs","filter","elem","startsWith","length","deleteCapability","includes","properties","ConfTokenDetail","alg","syncProperties","ConfToken","onSelectUpdate","toggleAlgorithm","disabled","hidden","AuthType","toggleAuthType","onAuthSelection","updateAuthType","Object","keys","Properties","apis","addConfSpec","addOptions","options","conf_spec_id","OptionsItem","deleteOption","onInputUpdate","updateOption","option_id","Options","onButtonClick","ConfigurationSpecItem","showOptions","syncConfSpecItem","onSelectChange","onInputChange","role","deleteAllOptions","deleteConfSpec","updateConfSpec","prev","tooltip","subtype","syncConfSpec","configuration_spec","ConfigurationSpec","Capability","updateCapabilityDescription","description","onDescriptionChange","syncCapabilities","capabilities","deleteLogo","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onload","dataURL","result","readAsDataURL","useDropzone","multiple","accept","getRootProps","getInputProps","isDragActive","Boolean","src","alt","height","Content","trimFlags","updateFlags","split","changeFlagsHandler","handleLoadLocalFile","preventDefault","files","onloadend","default_name","short_description","flags","logo","readStateFromBackend","json","onPatchModuleTypeSuccess","data","url","onPullModuleTypeError","error","hideModalForPush","hideModalForPatch","hideModalForPull","showAlert","message","pushModuleTypeRequest","values","client_id","password","iroh_service_url","loader","elements_visibility","initialValues","validate","errors","onSubmit","a","setSubmitting","isSubmitting","loaded","htmlFor","component","as","CustomAlert","closeAlertHandler","validator","Validator","addSchema","VALIDATION_SCHEMA","pullModuleTypeRequest","module_type_id","formatState","extractErrorMessage","response","error_description","patchModuleTypeRequest","fromEntries","entries","constructValidJSON","JSON","parse","stringify","forEach","element","arrangedData","constants","property","arrangeJSON","savePatch","patch_base","current_state","deactivatePatch","base","object","transform","isEqual","difference","isEmpty","formattedData","fileData","blob","Blob","URL","createObjectURL","document","createElement","replace","download","href","click","ConfirmBox","closeClickHandler","okClickHandler","Sidebar","inputEl","createRef","onSaveButtonClick","isValidForm","syncJSON","onPushButtonClick","showModalForPush","onCreatePatchClick","isPatchActive","patchBase","showModalForPatch","handleFile","valResult","valid","join","String","onerror","readAsText","onOpenButtonClick","inputElement","current","addEventListener","getElementById","reportValidity","ref","showConfirmBox","showModalForPull","modalForPush","modalForPatch","customAlert","hideAlert","modalForPull","confirmBox","hideConfirmBox","Header","App","window","location","hostname","match","initialState","getIndexOfSpec","spec","indexOf","appReducer","combineReducers","action","concat","obj","elementIndex","index","el","addIDs","currentList","authorize","axios","baseURL","method","headers","btoa","then","catch","err","pullModuleType","token","pushModuleType","sagaWatcher","onPullSuccessSagaWorker","onPullErrorSagaWorker","pullSagaWorker","onPushSuccessSagaWorker","onPushErrorSagaWorker","pushSagaWorker","patchSagaWorker","onPatchSuccessSagaWorker","takeLatest","put","call","getState","select","saga","createSagaMiddleware","store","createStore","tips","applyMiddleware","run","app","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.5e2955f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.31710dea.svg\";","import { LOAD_FILE, UPDATE_FlAGS, UPDATE_SINGLE_INPUT, DELETE_LOGO }\nfrom \"globals/constants/types\";\n\nexport const updateSingleInput = (pair) => ({\n        type: UPDATE_SINGLE_INPUT,\n        payload: {name: pair.name, value: pair.value}\n})\n\nexport const updateFlags = (list) => ({\n        type: UPDATE_FlAGS,\n        payload: list\n})\n\nexport const onFileLoaded = (imageFile) => ({\n        type: LOAD_FILE,\n        payload: imageFile\n})\n\nexport const deleteLogo = () => ({\n        type: DELETE_LOGO\n})\n","// Capabilities\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const UPDATE_CAPABILITY_DESCR = 'UPDATE_CAPABILITY_DESCR';\nexport const DELETE_CAPABILITY = 'DELETE_CAPABILITY';\n\n// Properties\nexport const UPDATE_SUPPORTED_API = 'UPDATE_SUPPORTED_API';\nexport const TOGGLE_AUTH_TYPE = 'TOGGLE_AUTH_TYPE';\nexport const UPDATE_AUTH_TYPE = 'UPDATE_AUTH_TYPE';\nexport const UPDATE_CONF_TOKEN = 'UPDATE_CONF_TOKEN';\nexport const TOGGLE_ALGORITHM = 'TOGGLE_ALGORITHM';\n\n// Content\nexport const UPDATE_SINGLE_INPUT = 'UPDATE_SINGLE_INPUT';\nexport const UPDATE_FlAGS = 'UPDATE_FlAGS';\nexport const LOAD_FILE = 'LOAD_FILE';\nexport const DELETE_LOGO = 'DELETE_LOGO';\n\n// Configuration Spec\nexport const ADD_CONF_SPEC = 'ADD_CONF_SPEC';\nexport const ADD_OPTIONS = 'ADD_OPTIONS';\nexport const DELETE_CONF_SPEC = 'DELETE_CONF_SPEC';\nexport const DELETE_ALL_OPTIONS = 'DELETE_ALL_OPTIONS';\nexport const DELETE_OPTION = 'DELETE_OPTION';\nexport const UPDATE_CONF_SPEC = 'UPDATE_CONF_SPEC';\nexport const UPDATE_OPTION = 'UPDATE_OPTION';\n\n// External References\nexport const UPDATE_EXTERNAL_REFERENCE = 'UPDATE_EXTERNAL_REFERENCE';\nexport const ADD_EXTERNAL_REFERENCE = 'ADD_EXTERNAL_REFERENCE';\nexport const DELETE_EXTERNAL_REFERENCE = 'DELETE_EXTERNAL_REFERENCE';\n\n// Root\nexport const READ_STATE_FROM_BACKEND = 'READ_STATE_FROM_BACKEND';\nexport const SAVE_PATCH_BASE = 'SAVE_PATCH_BASE';\n\nexport const PULL_MODULE_TYPE_REQUEST = 'PULL_MODULE_TYPE_REQUEST';\nexport const PUSH_MODULE_TYPE_REQUEST = 'PUSH_MODULE_TYPE_REQUEST';\nexport const PATCH_MODULE_TYPE_REQUEST = 'PATCH_MODULE_TYPE_REQUEST';\n\nexport const PULL_MODULE_TYPE_SUCCESS = 'PULL_MODULE_TYPE_SUCCESS';\nexport const PUSH_MODULE_TYPE_SUCCESS = 'PUSH_MODULE_TYPE_SUCCESS';\nexport const PATCH_MODULE_TYPE_SUCCESS = 'PATCH_MODULE_TYPE_SUCCESS';\n\nexport const PULL_MODULE_TYPE_ERROR = 'PULL_MODULE_TYPE_ERROR';\nexport const PUSH_MODULE_TYPE_ERROR = 'PUSH_MODULE_TYPE_ERROR';\n\n// Visibility\nexport const SHOW_MODAL_FOR_PUSH = \"SHOW_MODAL_FOR_PUSH\";\nexport const HIDE_MODAL_FOR_PUSH = \"HIDE_MODAL_FOR_PUSH\";\n\nexport const SHOW_MODAL_FOR_PATCH = \"SHOW_MODAL_FOR_PATCH\";\nexport const HIDE_MODAL_FOR_PATCH = \"HIDE_MODAL_FOR_PATCH\";\n\nexport const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\n\nexport const SHOW_CONFIRM_BOX = \"SHOW_CONFIRM_BOX\";\nexport const HIDE_CONFIRM_BOX = \"HIDE_CONFIRM_BOX\";\n\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const HIDE_LOADER = \"HIDE_LOADER\";\n\nexport const SHOW_MODAL_FOR_PULL = \"SHOW_MODAL_FOR_PULL\";\nexport const HIDE_MODAL_FOR_PULL = \"HIDE_MODAL_FOR_PULL\";\n\nexport const ACTIVATE_PATCH = \"ACTIVATE_PATCH\";\nexport const DEACTIVATE_PATCH = \"DEACTIVATE_PATCH\";\n","import React from \"react\";\nimport ReactMde, { commands } from \"react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./MarkdownEditor.scss\";\nimport { updateSingleInput } from \"container/Content/additionalInputsActions\";\nimport { connect } from \"react-redux\";\n\n\nclass MarkdownEditor extends React.Component {\n    state = {\n            value: \"\",\n            tab: \"write\",\n            name: this.props.name\n    };\n\n    handleValueChange = value => {\n        this.setState({ value });\n        this.props.updateSingleInput({name: this.state.name, value: value})\n    };\n\n    handleTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    render() {\n        return  <ReactMde\n            minEditorHeight={323}\n            minPreviewHeight={323}\n            maxEditorHeight={646}\n            commands={[\n                {\n                    commands: [\n                        commands.headerCommand,\n                        commands.boldCommand,\n                        commands.italicCommand,\n                        commands.strikeThroughCommand,\n                        commands.linkCommand,\n                        commands.quoteCommand,\n                        commands.codeCommand,\n                        commands.orderedListCommand,\n                        commands.unorderedListCommand,\n                        commands.checkedListCommand\n                    ]\n                }\n            ]}\n            onChange={this.handleValueChange}\n            onTabChange={this.handleTabChange}\n            value={this.props.syncContent[`${this.props.name}`]}\n            generateMarkdownPreview={(markdown) =>\n                Promise.resolve(<ReactMarkdown source={markdown} />)\n            }\n            selectedTab={this.state.tab}\n        />\n    }\n}\n\n\nconst mapDispatchToProps = {\n    updateSingleInput\n}\n\nconst mapStateToProps = (state) => ({\n    syncContent: state.other_inputs\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);\n","export const SELECT_PLACEHOLDER = \"Select your option\";\nexport const SUPPORTED_APIS = \"supported-apis\";\nexport const IROH_SERVICES_URLS = {\n    \"Europe\": \"https://visibility.eu.amp.cisco.com\",\n    \"North America\": \"https://visibility.amp.cisco.com\",\n    \"Asia\": \"https://visibility.apjc.amp.cisco.com\"\n}\nexport const URL_TO_REGION_MAPPING = {\n    \"https://visibility.eu.amp.cisco.com\": \"eu\",\n    \"https://visibility.amp.cisco.com\": \"nam\",\n    \"https://visibility.apjc.amp.cisco.com\": \"apjc\"\n}\n\n// Content.js\nexport const MAIN_TITLE = \"Module\";\nexport const INPUT_TITLE_LABEL = \"Title\";\nexport const DEFAULT_NAME_LABEL = \"Default Name\";\nexport const SHORT_DESCRIPTION_LABEL = \"Short Description\";\nexport const DESCRIPTION_LABEL = \"Description\";\nexport const TIPS_LABEL = \"Tips\";\nexport const FLAGS_LABEL = \"Flags\";\nexport const FLAGS_PLACEHOLDER = \"Enter flags separated by commas\";\nexport const LOGO_LABEL = \"Logo\";\n\n// Capabilities.js\nexport const CAPABILITIES_TEXT = \"Select at least one of \" +\n    \"the Supported APIs to write a description\";\n\n// Sidebar.js\nexport const SIDEBAR_TITLE = \"Settings\";\nexport const OPEN_FROM_FILE = \"Open JSON from File\";\nexport const OPEN_FROM_API = \"Open JSON from TR API\";\nexport const SAVE_JSON = \"Save JSON\";\nexport const SAVE_PATCH_JSON = \"Save Patch JSON\";\nexport const PUSH_JSON = \"Push JSON to TR\";\nexport const CREATE_PATCH = \"Create Patch\";\nexport const VALIDATION_ERROR_MESSAGE = \"Wrong JSON structure: \";\nexport const FILE_LOADING_FAILURE = \"Error occurred reading file: \";\nexport const JSON_ELEMENTS_ORDER = [\n    \"title\", \"default_name\", \"short_description\",\n    \"description\", \"tips\", \"external_references\",\n    \"configuration_spec\", \"capabilities\",\n    \"properties\", \"flags\", \"logo\"\n];\n\n// ConfigurationSpec.js\nexport const ADD_BTN_TITLE = \"+ Add\";\n\n// ConfigurationSpecItem.js\nexport const KEY_DATALIST = [\n    \"basic-auth-password\", \"basic-auth-user\", \"token\", \"url\", \"user\"\n];\nexport const TYPE_OPTIONS = [\n    \"api_key\", \"boolean\", \"device\", \"integer\", \"options\", \"password\", \"string\"\n];\nexport const TOOLTIP_LABEL = \"tooltip\";\nexport const SUBTYPE_LABEL = \"subtype\";\nexport const GROUP_LABEL = \"group\";\nexport const REQUIRED_LABEL = \"required\";\nexport const LABEL = \"label\";\nexport const TYPE_LABEL = \"type\";\nexport const KEY_LABEL = \"key\";\n\n// OptionsItem.js\nexport const VALUE_FIELD_TEXT = \"value\";\nexport const LABEL_FIELD_TEXT = \"label\";\n\n// Options.js\nexport const OPTIONS_SECTION_LABEL = \"Options\";\nexport const OPTIONS_BTN_TITLE = \"+ Add\";\n\n// Header.js\nexport const HEADER_TITLE = \"Threat Response Module Maker\";\n\n// ExternalReferences.js\nexport const LABELS = [\"Sign Up\", \"Free Trial\", \"Contact Us\"];\nexport const SECTION_TITLE = \"External References\";\n\n// ModalForPush.js\nexport const AUTH_ENDPOINT = \"/iroh/oauth2/token\";\nexport const MODULE_TYPE_ENDPOINT = \"/iroh/iroh-int/module-type\";\nexport const MESSAGE_SUCCESS = \"The module type was successfully created with id: \"\nexport const PUSH_MODAL_TEXT = \"Create a new module type in your Threat Response organization\";\nexport const CLIENT_ID_LABEL = \"Client ID\";\nexport const CLIENT_PASSWORD_LABEL = \"Client Password\";\nexport const PUSH_BTN_TITLE = \"Push\";\nexport const CANCEL_BTN_TITLE = \"Cancel\";\n\n// ModalForPull.js\nexport const PULL_BTN_TITLE = \"Pull\";\nexport const PULL_MODAL_TEXT = \"Pull module type from your Threat Response organization\";\nexport const MODULE_TYPE_ID = \"Module Type ID\";\nexport const REGION_LABEL = \"Region\";\n\n// ModalForPatch.js\nexport const PATCH_MODAL_TEXT = \"Pull module type JSON to create Patch file\";\nexport const EUROPE = \"Europe\";\nexport const NORTH_AMERICA = \"North America\";\nexport const ASIA = \"Asia\";\n\n// AuthType.js\nexport const AUTH_LABEL = \"authorization\";\nexport const AUTH_TYPE_OPTIONS = [\"authorization-header\", \"basic\", \"bearer\", \"configuration-token\"];\n\n// ConfToken.js\nexport const CONF_TOKEN_OPTIONS = [\"RS256\", \"HS256\"];\nexport const CONFIGURATION_TOKEN = \"configuration-token\";\nexport const CONFIGURATION_TOKEN_ALG = \"configuration-token-alg\";\nexport const CONFIGURATION_TOKEN_AUDIENCE = \"configuration-token-audience\";\n\n// ConfTokenDetail.js\nexport const CUSTOM_JWKS_HOST = \"custom_jwks_host\";\nexport const CONFIGURATION_TOKEN_KEY = \"configuration-token-key\";\n\n// CustomAlert.js\nexport const CLOSE_BTN_LABEL = \"Close\";\nexport const ALERT_TITLE_FAILURE = \"Failure: an error occurred\";\nexport const ALERT_TITLE_SUCCESS = \"Success\";\nexport const ALERT_FOR_EMPTY_PATCH = \"Please, make your changes to save a patch json!\";\nexport const ALERT_TITLE_FOR_EMPTY_PATCH = \"Please, make your changes\";\n\n// ConfirmBox.js\nexport const OK_BTN_LABEL = \"Discard patch\";\nexport const CONFIRM_BOX_PATCH_TEXT = \"If you discard this patch you will have \" +\n    \"to start a new Create patch flow. Are you sure you want to discard this patch?\";\nexport const CONFIRM_BOX_PATCH_TITLE = \"Discard patch\";\n\n// SaveUtils.js\nexport const PATCH_SKELETON = {\n    nam: [\n        {\n            id: \"\",\n            name: \"\",\n            patch: \"\"\n        }\n    ],\n    eu: [\n        {\n            id: \"\",\n            name: \"\",\n            patch: \"\"\n        }\n    ],\n    apjc: [\n        {\n            id: \"\",\n            name: \"\",\n            patch: \"\"\n        }\n    ]\n};\n","import \"./CustomInput.scss\";\nimport React from \"react\";\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport { deleteExternalReference, updateExternalReference }\nfrom \"container/Content/components/ExternalReferences/externalReferencesActions\";\n\n\nclass CustomInput extends React.Component {\n    trimInputValue = event => {\n        this.props.updateExternalReference(\n            this.props.reference.id,\n            {\n                name: event.target.name,\n                value: event.target.value.trim()\n            })\n    }\n\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateExternalReference(\n            this.props.reference.id,\n            {\n            name: event.target.name,\n            value: event.target.value\n            }\n            )\n    }\n\n    onDeleteIconClick = () => {\n        this.props.deleteExternalReference(this.props.reference.id);\n    }\n\n    render() {\n        return(\n            <div className=\"reference_wrapper\">\n                <input type=\"text\"\n                       name=\"label\"\n                       placeholder=\"Enter label\"\n                       className=\"custom_input\"\n                       autoComplete=\"off\"\n                       list=\"ext-ref\"\n                       value={this.props.reference.label}\n                       onChange={this.changeInputHandler}\n                       onBlur={this.trimInputValue}\n                       required\n                />\n                <input type=\"text\"\n                       name=\"link\"\n                       placeholder=\"Enter link\"\n                       className=\"custom_input\"\n                       autoComplete=\"off\"\n                       value={this.props.reference.link}\n                       onChange={this.changeInputHandler}\n                       onBlur={this.trimInputValue}\n                       required\n                />\n                <datalist id=\"ext-ref\">\n                    {\n                        Constants.LABELS.map(\n                            option => {\n                                return (\n                                    <option key={`${option} ${this.props.reference.id}`}>\n                                        {option}\n                                    </option>\n                                )\n                            }\n                        )\n                    }\n                </datalist>\n                <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    deleteExternalReference,\n    updateExternalReference\n}\n\nexport default connect(null, mapDispatchToProps)(CustomInput);\n","import { ADD_EXTERNAL_REFERENCE, DELETE_EXTERNAL_REFERENCE, UPDATE_EXTERNAL_REFERENCE }\nfrom \"globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport const updateExternalReference = (id, pair) => ({\n        type: UPDATE_EXTERNAL_REFERENCE,\n        payload: {id: id, pair: pair}\n})\n\nexport const addExternalReference = () => ({\n        type: ADD_EXTERNAL_REFERENCE,\n        payload: {\n            id: uuidv4()\n        }\n})\n\nexport const deleteExternalReference = (id) => ({\n        type: DELETE_EXTERNAL_REFERENCE,\n        payload: id\n})\n","import React from \"react\";\nimport CustomInput from \"./components/CustomInput/CustomInput\";\nimport * as Constants from \"globals/constants/constants\";\nimport \"container/Content/components/ExternalReferences/ExternalReferences.scss\"\nimport { connect } from \"react-redux\";\nimport { addExternalReference } from \"./externalReferencesActions\";\n\n\nclass ExternalReferences extends React.Component {\n\n    onAddButtonClick = () => {\n        this.props.addExternalReference()\n    }\n\n    render() {\n        return (\n            <div className=\"reference-section\">\n                <div>\n                    <label className='input-label'> {Constants.SECTION_TITLE}</label>\n                    <button onClick={this.onAddButtonClick} type=\"button\">\n                        {Constants.ADD_BTN_TITLE}\n                    </button>\n                </div>\n                    {\n                        this.props.syncExternalReferences.map(\n                            item => (<CustomInput reference={item} key={item.id}/>)\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    addExternalReference\n}\n\nconst mapStateToProps = (state) => ({\n        syncExternalReferences: state.external_references\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExternalReferences);\n","import { TOGGLE_AUTH_TYPE,\n        UPDATE_AUTH_TYPE,\n        UPDATE_SUPPORTED_API,\n        UPDATE_CONF_TOKEN,\n        TOGGLE_ALGORITHM\n}\nfrom \"globals/constants/types\";\n\nexport const updateSupportedAPI = (api) => ({\n        type: UPDATE_SUPPORTED_API,\n        payload: api\n})\n\nexport const toggleAuthType = () => ({\n        type: TOGGLE_AUTH_TYPE\n})\n\nexport const updateAuthType = (type) => ({\n        type: UPDATE_AUTH_TYPE,\n        payload: type\n})\n\nexport const updateConfToken = (pair) => ({\n        type: UPDATE_CONF_TOKEN,\n        payload: pair\n})\n\nexport const toggleAlgorithm = (alg) => ({\n        type: TOGGLE_ALGORITHM,\n        payload: alg\n})\n","import React from \"react\";\nimport \"./SupportedAPI.scss\";\nimport { connect } from \"react-redux\";\nimport { updateSupportedAPI } from \"../../propertiesActions\";\nimport { addCapability, deleteCapability }\nfrom \"container/Content/components/Capabilities/capabilitiesActions\";\n\n\nclass SupportedAPI extends React.Component {\n    state = {\n            title: this.props.api.title,\n            class: this.props.api.class\n        }\n\n    onCheckboxToggle = (event) => {\n\n        this.props.updateSupportedAPI(this.state.title);\n\n        if (event.target.checked) {\n            this.props.addCapability(this.state.class);\n        }\n\n        else {\n            if (this.props.syncSupportedAPIs.filter(\n                elem => elem.startsWith(this.state.class)).length === 1) {\n                this.props.deleteCapability(this.state.class);\n            }\n          }\n        }\n\n    render() {\n        return (\n            <div className=\"supportedAPI\">\n                <input type=\"checkbox\"\n                       autoComplete=\"off\"\n                       onChange={this.onCheckboxToggle}\n                       checked={this.props.syncSupportedAPIs.includes(this.state.title)}\n                />\n                <label>{this.state.title}</label>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addCapability,\n    deleteCapability,\n    updateSupportedAPI\n}\n\nconst mapStateToProps = (state) => ({\n      syncSupportedAPIs: state.properties[\"supported-apis\"] || []\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupportedAPI);\n","import {\n    ADD_CAPABILITY,\n    DELETE_CAPABILITY,\n    UPDATE_CAPABILITY_DESCR\n} from \"globals/constants/types\";\n\nexport const addCapability = (api) => ({\n        type: ADD_CAPABILITY,\n        payload: {id: api}\n})\n\nexport const updateCapabilityDescription = (api) => ({\n        type: UPDATE_CAPABILITY_DESCR,\n        payload: {id: api.id, \"description\": api.description}\n})\n\nexport const deleteCapability = (api) => ({\n    type: DELETE_CAPABILITY,\n    payload: api\n})\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateConfToken } from \"../../propertiesActions\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass ConfTokenDetail extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateConfToken({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    render() {\n        if (this.props.alg === 'RS256') {\n            return (\n                <div className='conf-token-input'>\n                    <label>{Constants.CUSTOM_JWKS_HOST}</label>\n                    <input value={this.props.syncProperties[Constants.CUSTOM_JWKS_HOST] || \"\"}\n                           name='custom_jwks_host'\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <div className='conf-token-input'>\n                    <label>{Constants.CONFIGURATION_TOKEN_KEY}</label>\n                    <input value={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_KEY] || \"\"}\n                           name='configuration-token-key'\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n            )\n        }\n    }\n}\n\nconst mapDispatchToProps = {\n    updateConfToken\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfTokenDetail);\n","import React from \"react\";\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport { toggleAlgorithm, updateConfToken } from \"../../propertiesActions\";\nimport ConfTokenDetail from \"./ConfTokenDetail\";\nimport \"./ConfToken.scss\";\n\n\nclass ConfToken extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateConfToken({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    onSelectUpdate = event => {\n        this.changeInputHandler(event);\n        this.props.toggleAlgorithm(event.target.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='conf-token-input'>\n                    <label>{Constants.CONFIGURATION_TOKEN_ALG}</label>\n                    <select value={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_ALG] || \"\"}\n                            name={Constants.CONFIGURATION_TOKEN_ALG}\n                            onChange={this.onSelectUpdate}\n                    >\n                        <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                        {\n                            Constants.CONF_TOKEN_OPTIONS.map(\n                                option => {\n                                    return <option value={option} key={option}>{option}</option>\n                                }\n                            )\n                        }\n                    </select>\n                </div>\n                {\n                    this.props.syncProperties[Constants.CONFIGURATION_TOKEN_ALG]\n                        ? <ConfTokenDetail  alg={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_ALG]}/>\n                        : ''\n                }\n                <div className='conf-token-input'>\n                    <label>{Constants.CONFIGURATION_TOKEN_AUDIENCE}</label>\n                    <input value={this.props.syncProperties[Constants.CONFIGURATION_TOKEN_AUDIENCE] || \"\"}\n                           name={Constants.CONFIGURATION_TOKEN_AUDIENCE}\n                           onChange={this.changeInputHandler}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    updateConfToken,\n    toggleAlgorithm\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfToken);\n","import React from \"react\";\nimport \"./AuthType.scss\";\nimport * as Constants from \"globals/constants/constants\";\nimport { toggleAuthType, updateAuthType } from \"../../propertiesActions\";\nimport { connect } from \"react-redux\";\nimport ConfToken from \"./ConfToken\";\n\n\nclass AuthType extends React.Component {\n    onCheckboxToggle = () => {\n        this.props.toggleAuthType();\n    }\n\n    onAuthSelection = event => {\n       event.persist();\n       this.props.updateAuthType(event.target.value)\n    }\n\nrender() {\n    return (\n      <div>\n        <div className=\"divAuth\">\n\n            <input type=\"checkbox\"\n                   autoComplete=\"off\"\n                   onChange={this.onCheckboxToggle}\n                   checked={Object.keys(this.props.syncProperties).includes(\"auth-type\")}\n            />\n\n            <label> { Constants.AUTH_LABEL } </label>\n            <select className=\"selectAuth\"\n                    value={this.props.syncProperties[\"auth-type\"] || \"\"}\n                    onChange={this.onAuthSelection}\n                    disabled={!Object.keys(this.props.syncProperties).includes(\"auth-type\")}\n                    required={Object.keys(this.props.syncProperties).includes(\"auth-type\")&&\"required\"}\n\n            >\n                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                {\n                   Constants.AUTH_TYPE_OPTIONS.map(\n                        option => {\n                            return <option value={option} key={option}>{option}</option>\n                        }\n                    )\n                }\n            </select>\n        </div>\n            {\n                Object.keys(this.props.syncProperties).includes(\"auth-type\")\n                && this.props.syncProperties[\"auth-type\"] === Constants.CONFIGURATION_TOKEN\n                    ? <ConfToken/>\n                    : \"\"\n            }\n      </div>\n    )\n}\n}\n\nconst mapDispatchToProps = {\n    toggleAuthType,\n    updateAuthType\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthType);\n","import React from \"react\";\nimport SupportedAPI from \"./components/SupportedAPI/SupportedAPI\";\nimport AuthType from \"./components/AuthType/AuthType\";\nimport \"./Properties.scss\"\n\n\nclass Properties extends React.Component {\n    state = {\n            apis: [\n                {title: 'health', class: 'health'},\n                {title: 'deliberate/observables', class: 'deliberate'},\n                {title: 'refer/observables', class: 'refer'},\n                {title: 'observe/observables', class: 'observe'},\n                {title: 'respond/observables', class: 'respond'},\n                {title: 'respond/trigger', class: 'respond'},\n                {title: 'tiles', class: 'tiles'},\n                {title: 'tiles/tile', class: 'tiles'},\n                {title: 'tiles/tile-data', class: 'tiles'},\n            ]\n        }\n\n    render() {\n        return (\n            <div>\n                <p>Properties</p>\n                <fieldset>\n                    <p>Supported APIs</p>\n                    <fieldset>\n                        {\n                            this.state.apis.map(\n                                api => {\n                                    return <SupportedAPI api={api} key={api.title}/>\n                                }\n                            )\n                        }\n                    </fieldset>\n                    <p>Auth-type</p>\n                    <fieldset>\n                        <AuthType/>\n                    </fieldset>\n                </fieldset>\n            </div>\n        )\n    }\n}\n\nexport default Properties;\n","import {\n    ADD_CONF_SPEC, ADD_OPTIONS,\n    DELETE_ALL_OPTIONS,\n    DELETE_CONF_SPEC,\n    DELETE_OPTION,\n    UPDATE_CONF_SPEC, UPDATE_OPTION\n} from \"globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport const addConfSpec = () => ({\n        type: ADD_CONF_SPEC,\n        payload:   {\n            \"key\": \"\",\n            \"type\": \"\",\n            \"label\": \"\",\n            \"tooltip\": \"\",\n            \"subtype\": \"\",\n            \"required\": false,\n            \"group\": \"\",\n            \"options\": [],\n            \"id\": uuidv4()\n        }\n})\n\nexport const deleteConfSpec = (id) => ({\n        type: DELETE_CONF_SPEC,\n        payload: {conf_spec_id: id}\n})\n\nexport const updateConfSpec = (id, pair) => ({\n        type: UPDATE_CONF_SPEC,\n        payload: {\n            conf_spec_id: id,\n            pair: pair\n        }\n})\n\nexport const addOptions = (id) => {\n    return {\n        type: ADD_OPTIONS,\n        payload:\n            {\n                options: {\n                    value: \"\", label: \"\",\n                    id: uuidv4()\n                },\n                conf_spec_id: id\n            }\n    }\n}\n\nexport const deleteAllOptions = (id) => ({\n        type: DELETE_ALL_OPTIONS,\n        payload: {conf_spec_id: id}\n})\n\nexport const deleteOption = (option_id, conf_spec_id) => ({\n        type: DELETE_OPTION,\n        payload: {option_id: option_id, conf_spec_id: conf_spec_id}\n})\n\nexport const updateOption = (option_id, conf_spec_id, pair) => ({\n        type: UPDATE_OPTION,\n        payload: {option_id: option_id, conf_spec_id: conf_spec_id, pair: pair}\n})\n","import React from \"react\";\nimport  \"./Options.scss\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport { connect } from \"react-redux\";\nimport { deleteOption, updateOption } from \"../../configurationSpecActions\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass OptionsItem extends React.Component {\n    state = {\n            value: \"\",\n            label: \"\"\n        }\n\n    onDeleteIconClick = () => {\n        this.props.deleteOption(this.props.option.id, this.props.conf_spec_id)\n    }\n\n    onInputUpdate = event => {\n        event.persist()\n        this.props.updateOption(this.props.option.id, this.props.conf_spec_id,\n            {name: event.target.name, value: event.target.value.trim()})\n    }\n\n    render() {\n        return (\n            <div className=\"optionsWrapper\">\n                <div className=\"column\">\n                    <div className=\"inputDiv\">\n                        {Constants.VALUE_FIELD_TEXT}\n                        <span className=\"required-field\">*</span>\n                        <input type=\"text\"\n                               name=\"value\"\n                               className=\"customInput\"\n                               value={this.props.option.value}\n                               onChange={this.onInputUpdate}\n                               required\n                        />\n                    </div>\n                    <div className=\"inputDiv\">\n                        {Constants.LABEL_FIELD_TEXT}\n                        <span className=\"required-field\">*</span>\n                        <input type=\"text\"\n                               name=\"label\"\n                               className=\"customInput\"\n                               value={this.props.option.label}\n                               onChange={this.onInputUpdate}\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"optionsIconWrapper\">\n                    <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteOption,\n    updateOption\n}\n\nexport default connect(null, mapDispatchToProps)(OptionsItem);\n","import React from \"react\";\nimport \"./Options.scss\";\nimport OptionsItem from \"./OptionItem\";\nimport { addOptions } from \"../../configurationSpecActions\";\nimport { connect } from \"react-redux\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass Options extends React.Component {\n    onButtonClick = () => {\n        this.props.addOptions(this.props.conf_spec_id)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"confSpecRow\">\n                    <div className=\"options-title\">\n                        { Constants.OPTIONS_SECTION_LABEL }\n                        <button type=\"button\" className=\"addNewButton\" onClick={this.onButtonClick}>\n                            { Constants.OPTIONS_BTN_TITLE }\n                        </button>\n                    </div>\n                </div>\n                {this.props.options.map(\n                    elem => <OptionsItem key={elem.id}\n                                         option={elem}\n                                         conf_spec_id={this.props.conf_spec_id}\n                    />\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addOptions\n}\n\nexport default connect(null, mapDispatchToProps)(Options)\n","import React from \"react\";\nimport \"./ConfigurationSpecItem.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport Options from \"../Options/Options\";\nimport { connect } from \"react-redux\";\nimport { addOptions, deleteAllOptions, deleteConfSpec, updateConfSpec }\nfrom \"../../configurationSpecActions\";\n\n\nclass ConfigurationSpecItem extends React.Component {\n    state = {\n        showOptions: this.props.syncConfSpecItem.options.length > 0\n    }\n\n    onSelectChange = (event) => {\n        this.onInputChange(event);\n        if (event.target.value === 'options') {\n            this.props.addOptions(this.props.role);\n            this.setState({showOptions: true})\n        }\n        else {\n            this.props.deleteAllOptions(this.props.role);\n            this.setState({showOptions: false});\n        }\n    }\n    onDeleteIconClick = () => {\n        this.props.deleteConfSpec(this.props.role);\n    }\n\n    trimInputValue = event => {\n        this.props.updateConfSpec(\n            this.props.role,\n            {name: event.target.name, value: event.target.value.trim()}\n        )\n    }\n\n    onInputChange = (event) => {\n        event.persist()\n        let value = '';\n        if (event.target.type === \"checkbox\"){\n            value = event.target.checked;\n        }\n        else {\n            value = event.target.value;\n        }\n        this.setState(prev => ({\n            ...prev, ...{\n                [event.target.name]: value\n            }\n        }))\n\n        this.props.updateConfSpec(\n            this.props.role,\n            {name: event.target.name, value: value}\n            )\n\n    }\n\n    render() {\n        return (\n            <div className=\"confSpecWrapper\">\n                <div className='column'>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.KEY_LABEL}</label>\n                            <span className=\"required-field\">*</span>\n                            <input\n                                type=\"text\"\n                                name=\"key\"\n                                className=\"customInput\"\n                                required\n                                value={this.props.syncConfSpecItem.key}\n                                onChange={this.onInputChange}\n                                onBlur={this.trimInputValue}\n                                list=\"key-input-list\"\n                            />\n                        </div>\n                        <datalist id=\"key-input-list\">\n                            {\n                                Constants.KEY_DATALIST.map(\n                                    option => {\n                                        return <option key={`${option} ${this.props.role}`}>{option}</option>\n                                    }\n                                )\n                            }\n                        </datalist>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.TYPE_LABEL}</label>\n                            <span className=\"required-field\">*</span>\n                            <select name=\"type\"\n                                    className=\"customInput\"\n                                    required\n                                    value={this.props.syncConfSpecItem.type || ''}\n                                    onChange={this.onSelectChange}>\n                                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                                {\n                                    Constants.TYPE_OPTIONS.map(\n                                        option => {\n                                            return <option key={option}>{option}</option>\n                                        }\n                                    )\n                                }\n                            </select>\n                        </div>\n                    {  this.state.showOptions\n                        ?\n                        <Options\n                            conf_spec_id={this.props.role}\n                            options={this.props.syncConfSpecItem.options}\n                        />\n                        : null\n                    }\n                        <div className=\"inputDiv\">\n                            <label>{Constants.LABEL}</label>\n                            <span className=\"required-field\">*</span>\n                            <input type=\"text\"\n                                   name=\"label\"\n                                   className=\"customInput\"\n                                   required\n                                   value={this.props.syncConfSpecItem.label}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.TOOLTIP_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"tooltip\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem.tooltip}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.SUBTYPE_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"subtype\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem.subtype}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            <label>{Constants.GROUP_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"group\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem['group']}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"checkboxDiv\">\n                            <label>{Constants.REQUIRED_LABEL}</label>\n                            <input type=\"checkbox\" name=\"required\"\n                                   checked={this.props.syncConfSpecItem.required} onChange={this.onInputChange}/>\n                        </div>\n                </div>\n                <div>\n                    <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    addOptions,\n    deleteAllOptions,\n    deleteConfSpec,\n    updateConfSpec\n}\n\nconst mapStateToProps = (state) => ({\n        syncConfSpec: state.configuration_spec\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationSpecItem);\n","import React from \"react\";\nimport \"./ConfigurationSpec.scss\"\nimport ConfigurationSpecItem from \"./components/ConfigurationSpecItem/ConfigurationSpecItem\"\nimport { addConfSpec } from \"./configurationSpecActions\";\nimport { connect } from \"react-redux\";\nimport * as Constants from \"globals/constants/constants\";\n\nclass ConfigurationSpec extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"confSpecRow\">\n                    <div>\n                        <label>Configuration Spec</label>\n                        <button type=\"button\" onClick={this.props.addConfSpec}>\n                            { Constants.ADD_BTN_TITLE }\n                        </button>\n                    </div>\n                </div>\n                {\n                    this.props.syncConfSpec.map(\n                        elem => (\n                            <ConfigurationSpecItem\n                                role={elem.id}\n                                key={elem.id}\n                                syncConfSpecItem={elem}\n                            />\n                            )\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addConfSpec,\n}\n\nconst mapStateToProps = (state) => ({\n        syncConfSpec: state.configuration_spec\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationSpec);\n","import React from \"react\";\nimport \"./Capability.scss\"\nimport { updateCapabilityDescription } from \"../capabilitiesActions\";\nimport { connect } from \"react-redux\";\n\n\nclass Capability extends React.Component {\n    trimInputValue = event => {\n        this.props.updateCapabilityDescription({\n            id: this.props.api.id, description: event.target.value.trim()\n        })\n    }\n\n    onDescriptionChange = event => {\n        event.persist()\n        this.props.updateCapabilityDescription({\n            id: this.props.api.id, description: event.target.value\n        }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"capabilitiesWrapper\">\n                <p>{this.props.api.id}\n                    <span className=\"required-field\">*</span>\n                </p>\n                <input\n                    type=\"text\"\n                    value={this.props.api.description || \"\"}\n                    name={this.props.api.id}\n                    placeholder=\"Enter description\"\n                    autoComplete=\"off\"\n                    onChange={this.onDescriptionChange}\n                    onBlur={this.trimInputValue}\n                    required\n                />\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    updateCapabilityDescription\n}\n\nexport default connect(null, mapDispatchToProps)(Capability);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Capability from \"./components/Capability\";\nimport * as Constants from \"globals/constants/constants\";\nimport \"./Capabilities.scss\"\n\n\nconst Capabilities = ({syncCapabilities}) => {\n            return (\n                <div>\n                    <p>Capabilities</p>\n                    <fieldset>\n                        <p className=\"capabilitiesTip\">{Constants.CAPABILITIES_TEXT}</p>\n                        {syncCapabilities.map(api => {\n                            return <Capability api={api} key={api.id}/>\n                        })}\n                    </fieldset>\n                </div>\n            )\n        }\n\nconst mapStateToProps = (state) => ({\n        syncCapabilities: state.capabilities\n})\n\nexport default connect(mapStateToProps)(Capabilities);\n","import React, { useCallback } from \"react\";\nimport \"./FileInput.scss\"\nimport Icons from \"globals/icons/sprite.svg\";\nimport { deleteLogo, onFileLoaded } from \"../../additionalInputsActions\";\nimport { connect } from \"react-redux\";\nimport { useDropzone } from 'react-dropzone'\n\n\nconst FileInput = ({ value, deleteLogo, onFileLoaded }) => {\n    const onDrop = useCallback((acceptedFiles) => {\n        const file = acceptedFiles[0]\n        if (file) {\n            const reader = new FileReader()\n            reader.onload = () => {\n                const dataURL = reader.result\n                onFileLoaded(dataURL)\n            }\n            reader.readAsDataURL(file)\n        }\n\n    }, [onFileLoaded])\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\n        onDrop, multiple: false, accept: \"image/*\"\n    })\n\n    return (\n        <div className=\"dropzone-wrapper\">\n            <div {...getRootProps({className: `dropzone${isDragActive ? '-active' : ''}`})}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop your logo here, or click to select logo</p>\n            </div>\n            {Boolean(value) &&\n            (<div>\n                <img src={value} alt=\"\" height=\"60\" className=\"img\"/>\n                <svg className=\"closeIcon\" onClick={deleteLogo}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>)\n            }\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = {\n    deleteLogo,\n    onFileLoaded\n}\n\nexport default connect(null, mapDispatchToProps)(FileInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Content.scss\";\nimport MarkdownEditor from \"./components/MarkdownEditor/MarkdownEditor\";\nimport ExternalReferences from \"./components/ExternalReferences/ExternalReferences\";\nimport Properties from \"./components/Properties/Properties\";\nimport ConfigurationSpec from \"./components/ConfigurationSpec/ConfigurationSpec\";\nimport Capabilities from \"./components/Capabilities/Capabilities\";\nimport * as Constants from \"globals/constants/constants\";\nimport { onFileLoaded, updateFlags, updateSingleInput } from \"./additionalInputsActions\";\nimport FileInput from \"./components/FileInput/FileInput\";\nimport { addConfSpec } from \"./components/ConfigurationSpec/configurationSpecActions\";\n\n\nclass Content extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateSingleInput({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    trimInputValue = event => {\n        this.props.updateSingleInput({\n            name: event.target.name, value: event.target.value.trim()\n        })\n    }\n\n    trimFlags = event => {\n        this.props.updateFlags(event.target.value.split(',').map(item=>item.trim()))\n    }\n\n    changeFlagsHandler = event => {\n        event.persist()\n        this.props.updateFlags(event.target.value.split(','))\n    }\n\n    handleLoadLocalFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => this.props.onFileLoaded(reader.result);\n            reader.readAsDataURL(file);\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"row\">\n                    <h1 className=\"title\">{Constants.MAIN_TITLE}</h1>\n                </div>\n                <form id=\"mainForm\">\n                    <div className=\"row\">\n                        <div className=\"column\">\n                            <label className=\"input-label\">{Constants.INPUT_TITLE_LABEL}\n                                <span className=\"required-field\">*</span>\n                            </label>\n                            <textarea\n                                required\n                                autoComplete=\"off\"\n                                value={this.props.syncContent.title || '' }\n                                name=\"title\"\n                                onChange={this.changeInputHandler}\n                                onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.DEFAULT_NAME_LABEL}\n                                <span className=\"required-field\">*</span>\n                            </label>\n                            <textarea required\n                                      autoComplete=\"off\"\n                                      value={this.props.syncContent.default_name || ''}\n                                      name=\"default_name\"\n                                      onChange={this.changeInputHandler}\n                                      onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.SHORT_DESCRIPTION_LABEL}</label>\n                            <textarea autoComplete=\"off\"\n                                      value={this.props.syncContent.short_description || ''}\n                                      name=\"short_description\"\n                                      onChange={this.changeInputHandler}\n                                      onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.FLAGS_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"flags\"\n                                   placeholder={Constants.FLAGS_PLACEHOLDER}\n                                   autoComplete=\"off\"\n                                   value={this.props.syncContent.flags || ''}\n                                   onChange={this.changeFlagsHandler}\n                                   onBlur={this.trimFlags}\n                            />\n                            <label className=\"input-label\">{Constants.LOGO_LABEL}</label>\n                            <FileInput\n                                value={this.props.syncContent.logo}\n                                onChange={this.handleLoadLocalFile}\n                            />\n                            <Properties/>\n                            <Capabilities/>\n                            <ExternalReferences/>\n                            <ConfigurationSpec/>\n                        </div>\n                        <div className=\"column\">\n                            <label className=\"input-label\">{Constants.DESCRIPTION_LABEL}</label>\n                            <MarkdownEditor name=\"description\"/>\n                            <label className=\"input-label\">{Constants.TIPS_LABEL}</label>\n                            <MarkdownEditor name=\"tips\"/>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    syncContent: state.other_inputs\n})\n\nconst mapDispatchToProps = {\n    updateSingleInput,\n    updateFlags,\n    onFileLoaded,\n    addConfSpec\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","import {\n    READ_STATE_FROM_BACKEND,\n    PULL_MODULE_TYPE_REQUEST,\n    PUSH_MODULE_TYPE_REQUEST,\n    PATCH_MODULE_TYPE_REQUEST,\n    PULL_MODULE_TYPE_SUCCESS,\n    PULL_MODULE_TYPE_ERROR,\n    PUSH_MODULE_TYPE_SUCCESS,\n    PUSH_MODULE_TYPE_ERROR,\n    PATCH_MODULE_TYPE_SUCCESS\n}\nfrom \"globals/constants/types\";\n\n\nexport const readStateFromBackend = (json) => ({\n    type: READ_STATE_FROM_BACKEND,\n    payload: json\n})\n\nexport const pullModuleTypeRequest = (\n    module_type_id, client_id, password, iroh_service_url\n    ) => ({\n    type: PULL_MODULE_TYPE_REQUEST,\n    payload: {\n        module_type_id: module_type_id,\n        client_id: client_id,\n        password: password,\n        iroh_service_url: iroh_service_url\n    }\n})\n\nexport const patchModuleTypeRequest = (\n    module_type_id, client_id, password, iroh_service_url\n    ) => ({\n    type: PATCH_MODULE_TYPE_REQUEST,\n    payload: {\n        module_type_id: module_type_id,\n        client_id: client_id,\n        password: password,\n        iroh_service_url: iroh_service_url\n    }\n})\n\nexport const onPatchModuleTypeSuccess = (data, url) => ({\n    type: PATCH_MODULE_TYPE_SUCCESS,\n    payload: {data: data, url: url}\n})\n\nexport const onPullModuleTypeSuccess = (data) => ({\n    type: PULL_MODULE_TYPE_SUCCESS,\n    payload: data\n})\n\nexport const onPullModuleTypeError = (error) => ({\n    type: PULL_MODULE_TYPE_ERROR,\n    payload: error\n})\n\nexport const pushModuleTypeRequest = (json, values) => ({\n    type: PUSH_MODULE_TYPE_REQUEST,\n    payload: {\n        json: json,\n        client_id: values.client_id,\n        password: values.password,\n        iroh_service_url: values.iroh_service_url\n    }\n})\n\nexport const onPushModuleTypeSuccess = (data) => ({\n    type: PUSH_MODULE_TYPE_SUCCESS,\n    payload: data\n})\n\nexport const onPushModuleTypeError = (error) => ({\n    type: PUSH_MODULE_TYPE_ERROR,\n    payload: error\n})\n","import {\n    HIDE_MODAL_FOR_PUSH,\n    SHOW_MODAL_FOR_PUSH,\n    HIDE_ALERT,\n    HIDE_LOADER,\n    HIDE_MODAL_FOR_PULL,\n    SHOW_ALERT,\n    SHOW_LOADER,\n    SHOW_MODAL_FOR_PULL,\n    HIDE_MODAL_FOR_PATCH,\n    SHOW_MODAL_FOR_PATCH,\n    ACTIVATE_PATCH,\n    DEACTIVATE_PATCH,\n    HIDE_CONFIRM_BOX,\n    SHOW_CONFIRM_BOX\n} from \"globals/constants/types\";\n\n\nexport const showModalForPush = () => ({\n    type: SHOW_MODAL_FOR_PUSH\n})\n\nexport const hideModalForPush = () => ({\n    type: HIDE_MODAL_FOR_PUSH\n})\n\nexport const showModalForPatch = () => ({\n    type: SHOW_MODAL_FOR_PATCH\n})\n\nexport const hideModalForPatch = () => ({\n    type: HIDE_MODAL_FOR_PATCH\n})\n\nexport const showLoader = () => ({\n    type: SHOW_LOADER\n})\n\nexport const hideLoader = () => ({\n    type: HIDE_LOADER\n})\n\nexport const showModalForPull = () => ({\n    type: SHOW_MODAL_FOR_PULL\n})\n\nexport const hideModalForPull = () => ({\n    type: HIDE_MODAL_FOR_PULL\n})\n\nexport const showAlert = (title, message) => ({\n    type: SHOW_ALERT,\n    payload: {\n        title,\n        message\n    }\n})\n\nexport const hideAlert = () => ({\n    type: HIDE_ALERT\n})\n\nexport const activatePatch = () => ({\n    type: ACTIVATE_PATCH\n})\n\nexport const deactivatePatch = () => ({\n    type: DEACTIVATE_PATCH\n})\n\nexport const  showConfirmBox =  (title, message) => ({\n    type: SHOW_CONFIRM_BOX,\n    payload: {\n        title,\n        message\n    }\n})\n\nexport const  hideConfirmBox =  () => ({\n    type: HIDE_CONFIRM_BOX\n})\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport './ModalForPush.scss';\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\";\nimport { pushModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPush, showAlert } from \"../visibilityActions\";\nimport { connect } from \"react-redux\";\n\n\nconst ModalForPush = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '', iroh_service_url: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.client_id) {\n                    errors.client_id = 'is required';\n                }\n                if (!values.password) {\n                    errors.password = 'is required';\n                }\n                if (!values.iroh_service_url) {\n                    errors.iroh_service_url = 'is required';\n                }\n                return errors;\n            }}\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.pushModuleTypeRequest(props.json, values)\n                setSubmitting(false);\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader?\n                    <Loader loaded={false} className=\"spinner\" />\n                : <Form className=\"modal-content\">\n                    <svg className=\"closeIcon\" onClick={props.hideModalForPush}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n\n                    <p className=\"push-modal-text\">\n                        { Constants.PUSH_MODAL_TEXT }\n                    </p>\n                    <label htmlFor=\"client_id\" className=\"centered\">\n                        { Constants.CLIENT_ID_LABEL }\n                    </label>\n                    <div>\n                        <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                        <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                    </div>\n                    <label htmlFor=\"password\" className=\"centered\">\n                        { Constants.CLIENT_PASSWORD_LABEL }\n                    </label>\n                    <div>\n                        <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                        <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                    </div>\n                    <label htmlFor=\"iroh_service_url\" className=\"centered\">\n                        { Constants.REGION_LABEL }\n                    </label>\n                    <div>\n                        <Field as=\"select\" name=\"iroh_service_url\" required>\n                          <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                          <option value={ Constants.IROH_SERVICES_URLS.Europe }>Europe</option>\n                          <option value={ Constants.IROH_SERVICES_URLS[\"North America\"] }>North America</option>\n                          <option value={ Constants.IROH_SERVICES_URLS.Asia }>Asia</option>\n                        </Field>\n                      <ErrorMessage name=\"iroh_service_url\" component=\"div\" className='error'/>\n                    </div>\n                    <div className=\"controls\">\n                        <button type=\"button\" onClick={props.hideModalForPush} className=\"cancel\">\n                            { Constants.CANCEL_BTN_TITLE }\n                        </button>\n                        <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                            { Constants.PUSH_BTN_TITLE }\n                        </button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    hideModalForPush,\n    showAlert,\n    pushModuleTypeRequest\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPush);\n","import React from \"react\";\nimport \"./CustomAlert.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\nexport const CustomAlert = ({title, message, closeAlertHandler}) => (\n    <div className=\"alert\">\n        <div className=\"alertContent\">\n            <div className=\"alertHeader\">\n                {title}\n                <svg className=\"closeIcon\" onClick={closeAlertHandler}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n            <div className=\"alertBody\">\n                {message}\n            </div>\n            <div className=\"alertFooter\">\n                <button type=\"button\"\n                        className=\"closeButton\"\n                        onClick={closeAlertHandler}>\n                    {Constants.CLOSE_BTN_LABEL}\n                </button>\n            </div>\n        </div>\n    </div>\n)\n","import { Validator } from \"jsonschema\";\n\nexport const validator = new Validator();\n\nconst Properties = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"supported-apis\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"auth-type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\nconst Capability = {\n    \"id\": \"/Capability\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n                \"enum\": [\n                \"respond\",\n                \"observe\",\n                \"health\",\n                \"tiles\",\n                \"refer\",\n                \"deliberate\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"id\",\n        \"description\"\n    ]\n}\n\nconst ExternalReference =  {\n    \"id\": \"/ExternalReference\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"link\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"label\",\n        \"link\"\n    ]\n}\n\nconst ConfigurationSpecOptions = {\n    \"id\": \"/ConfigurationSpecOptions\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"value\": {\n            \"type\": \"string\"\n        },\n        \"label\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"value\",\n        \"label\"\n    ]\n}\n\nconst ConfigurationSpecField = {\n    \"id\": \"/ConfigurationSpecField\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"key\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\",\n                \"enum\": [\n                \"password\",\n                \"string\",\n                \"api_key\",\n                \"integer\",\n                \"device\",\n                \"options\",\n                \"boolean\"\n            ]\n        },\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"tooltip\": {\n            \"type\": \"string\"\n        },\n        \"subtype\": {\n            \"type\": \"string\"\n        },\n        \"required\": {\n            \"type\": \"boolean\"\n        },\n        \"options\": {\n            \"type\": \"array\",\n                \"items\": {\n                \"$ref\": \"/ConfigurationSpecOptions\"\n            }\n        },\n        \"group\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"key\",\n        \"type\",\n        \"label\"\n    ]\n}\n\nvalidator.addSchema(Capability, '/Capability');\nvalidator.addSchema(ExternalReference, '/ExternalReference');\nvalidator.addSchema(Properties, '/Properties');\nvalidator.addSchema(ConfigurationSpecOptions, '/ConfigurationSpecOptions');\nvalidator.addSchema(ConfigurationSpecField, '/ConfigurationSpecField');\n\nexport const VALIDATION_SCHEMA = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"description\": {\"type\": \"string\"},\n        \"tips\": {\"type\": \"string\"},\n        \"logo\": {\"type\": \"string\"},\n        \"short_description\": {\"type\": \"string\"},\n        \"title\": {\"type\": \"string\"},\n        \"flags\": {\"type\": \"array\"},\n        \"external_references\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/ExternalReference\"\n            }\n        },\n        \"configuration_spec\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/ConfigurationSpecField\"\n            }\n        },\n        \"capabilities\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/Capability\"\n            }\n        },\n        \"properties\": {\n            \"$ref\": \"/Properties\"\n        },\n    },\n    \"required\": [\"title\", \"default_name\"]\n};\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport './ModalForPull.scss';\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\"\nimport { connect } from \"react-redux\";\nimport { pullModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPull } from \"../visibilityActions\";\n\n\nconst ModalForPull = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '', module_type_id: '', iroh_service_url: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.client_id) {\n                    errors.client_id = 'is required';\n                }\n                if (!values.password) {\n                    errors.password = 'is required';\n                }\n                if (!values.module_type_id) {\n                    errors.module_type_id = 'is required';\n                }\n                if (!values.iroh_service_url) {\n                    errors.iroh_service_url = 'is required';\n                }\n                return errors;\n            }}\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.pullModuleTypeRequest(\n                    values.module_type_id,\n                    values.client_id,\n                    values.password,\n                    values.iroh_service_url\n                )\n                setSubmitting(false)\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader ?\n                    <Loader loaded={false} className=\"spinner\" />\n                   : <Form className=\"modal-content\">\n                        <svg className=\"closeIcon\" onClick={props.hideModalForPull}>\n                            <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                        </svg>\n\n                        <p className=\"push-modal-text\">\n                            { Constants.PULL_MODAL_TEXT }\n                        </p>\n                        <label htmlFor=\"client_id\" className=\"centered\">\n                            { Constants.CLIENT_ID_LABEL }\n                        </label>\n                        <div>\n                            <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                            <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"password\" className=\"centered\">\n                            { Constants.CLIENT_PASSWORD_LABEL }\n                        </label>\n                        <div>\n                            <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                            <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"module_type_id\" className=\"centered\">\n                            { Constants.MODULE_TYPE_ID }\n                        </label>\n                        <div>\n                            <Field name=\"module_type_id\" type=\"module_type_id\" id=\"module_type_id\" required/>\n                            <ErrorMessage name=\"module_type_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"iroh_service_url\" className=\"centered\">\n                            { Constants.REGION_LABEL }\n                        </label>\n                        <div>\n                            <Field as=\"select\" name=\"iroh_service_url\" required>\n                                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                                <option value={ Constants.IROH_SERVICES_URLS.Europe }>Europe</option>\n                                <option value={ Constants.IROH_SERVICES_URLS[\"North America\"] }>North America</option>\n                                <option value={ Constants.IROH_SERVICES_URLS.Asia }>Asia</option>\n                            </Field>\n                            <ErrorMessage name=\"iroh_service_url\" component=\"div\" className='error'/>\n                        </div>\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={props.hideModalForPull} className=\"cancel\">\n                                { Constants.CANCEL_BTN_TITLE }\n                            </button>\n                            <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                                { Constants.PULL_BTN_TITLE }\n                            </button>\n                        </div>\n                    </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    pullModuleTypeRequest,\n    hideModalForPull\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPull);\n","import * as constants from 'globals/constants/constants'\n\nexport function arrangeJSON(data) {\n    let arrangedData = {}\n    for (const property of constants.JSON_ELEMENTS_ORDER) {\n        if (property in data) {\n            arrangedData[property] = data[property];\n        }\n    }\n    return arrangedData;\n}\n\nexport const formatState = (state) => {\n    const {\n        external_references,\n        configuration_spec,\n        properties,\n        capabilities,\n        other_inputs\n    } = state;\n    return {\n        external_references,\n        configuration_spec,\n        properties,\n        capabilities,\n        ...other_inputs\n    }\n};\n\nexport const extractErrorMessage = (error) => {\n    if (error.response) {\n        return error.response.data.error_description || error.response.message\n    }\n    else {\n        return error.message\n    }\n}\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\";\nimport { patchModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPatch, showAlert } from \"../visibilityActions\";\nimport { connect } from \"react-redux\";\n\n\nconst ModalForPatch = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '', module_type_id: '', iroh_service_url: '' }}\n            validate={ values =>\n                Object.fromEntries(\n                    Object.entries(values)\n                        .filter(([ key, val ]) => !val)\n                        .map(([ key, val ]) => [key, 'is required'])\n                )\n            }\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.patchModuleTypeRequest(\n                    values.module_type_id,\n                    values.client_id,\n                    values.password,\n                    values.iroh_service_url\n                )\n                setSubmitting(false)\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader ?\n                    <Loader loaded={false} className=\"spinner\" />\n                    : <Form className=\"modal-content\">\n                        <svg className=\"closeIcon\" onClick={props.hideModalForPatch}>\n                            <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                        </svg>\n\n                        <p className=\"push-modal-text\">\n                            { Constants.PATCH_MODAL_TEXT }\n                        </p>\n                        <label htmlFor=\"client_id\" className=\"centered\">\n                            { Constants.CLIENT_ID_LABEL }\n                        </label>\n                        <div>\n                            <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                            <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"password\" className=\"centered\">\n                            { Constants.CLIENT_PASSWORD_LABEL }\n                        </label>\n                        <div>\n                            <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                            <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"module_type_id\" className=\"centered\">\n                            { Constants.MODULE_TYPE_ID }\n                        </label>\n                        <div>\n                            <Field name=\"module_type_id\" type=\"module_type_id\" id=\"module_type_id\" required/>\n                            <ErrorMessage name=\"module_type_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"iroh_service_url\" className=\"centered\">\n                            { Constants.REGION_LABEL }\n                        </label>\n                        <div>\n                            <Field as=\"select\" name=\"iroh_service_url\" required>\n                                <option value=\"\" disabled hidden>\n                                    { Constants.SELECT_PLACEHOLDER }\n                                </option>\n                                <option value={ Constants.IROH_SERVICES_URLS.Europe }>\n                                    { Constants.EUROPE }\n                                </option>\n                                <option value={ Constants.IROH_SERVICES_URLS[\"North America\"] }>\n                                    { Constants.NORTH_AMERICA }\n                                </option>\n                                <option value={ Constants.IROH_SERVICES_URLS.Asia }>\n                                    { Constants.ASIA }\n                                </option>\n                            </Field>\n                            <ErrorMessage name=\"iroh_service_url\" component=\"div\" className='error'/>\n                        </div>\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={props.hideModalForPatch} className=\"cancel\">\n                                { Constants.CANCEL_BTN_TITLE }\n                            </button>\n                            <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                                { Constants.PULL_BTN_TITLE }\n                            </button>\n                        </div>\n                    </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    hideModalForPatch,\n    showAlert,\n    patchModuleTypeRequest\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPatch);\n","import { isEqual, transform, isEmpty } from 'lodash';\nimport { arrangeJSON, formatState } from \"./formattingUtils\";\nimport * as Constants from \"globals/constants/constants\"\n\n\nexport function constructValidJSON(json) {\n    const data = JSON.parse(JSON.stringify(json));\n    for (const elem of data.configuration_spec) {\n        if (elem.options) {\n            elem.options.map(\n                option => delete option[\"id\"]\n            )\n        }\n        delete elem[\"id\"]\n        Object.keys(elem).forEach(\n            key => (elem[key].length === 0) && delete elem[key]\n        );\n    }\n    data.external_references.map(\n        element => delete element[\"id\"]\n    )\n    return arrangeJSON(data)\n}\n\nfunction difference(object, base) {\n    return  transform(object, (result, value, key) => {\n        if (!isEqual(value, base[key])) {\n            result[key] = value;\n        }\n    })\n}\n\nexport function savePatch(patch_base, current_state, deactivatePatch, showAlert){\n    const base = formatState(patch_base['json']);\n    const id = patch_base.id;\n\n    const patch = difference(\n        constructValidJSON(current_state),\n        constructValidJSON(base)\n    );\n\n    if (!isEmpty(patch)){\n        const formattedData = Constants.PATCH_SKELETON\n        Object.values(formattedData).forEach(value => {\n            value[0].name=current_state.title\n            value[0].patch=patch\n        })\n        const region = Constants.URL_TO_REGION_MAPPING[patch_base.url]\n        formattedData[region][0].id = id\n        const fileData = JSON.stringify(formattedData, null, 4);\n        const blob = new Blob([fileData], {type: \"text/plain\"});\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        const title = current_state.title.replace(/ /g, '_');\n        link.download = `${title}_module_type_patch.json`;\n        link.href = url;\n        link.click();\n        deactivatePatch();\n    }\n    else {\n        showAlert(\n            Constants.ALERT_TITLE_FOR_EMPTY_PATCH,\n            Constants.ALERT_FOR_EMPTY_PATCH\n        )\n    }\n}\n","import React from \"react\";\nimport \"./ConfirmBox.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\nexport const ConfirmBox = ({title, message, closeClickHandler, okClickHandler}) => (\n    <div className=\"alert\">\n        <div className=\"alertContent\">\n            <div className=\"alertHeader\">\n                {title}\n                <svg className=\"closeIcon\" onClick={closeClickHandler}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n            <div className=\"alertBody\">\n                {message}\n            </div>\n            <div className=\"alertFooter\">\n                <button type=\"button\"\n                        className=\"cancelButton\"\n                        onClick={closeClickHandler}>\n                    {Constants.CANCEL_BTN_TITLE}\n                </button>\n                <button type=\"button\"\n                        className=\"okButton\"\n                        onClick={okClickHandler}>\n                    {Constants.OK_BTN_LABEL}\n                </button>\n            </div>\n        </div>\n    </div>\n)\n","import React, { createRef } from \"react\";\nimport \"./Sidebar.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport ModalForPush from \"../ModalForPush/ModalForPush\";\nimport { CustomAlert } from \"../CustomAlert/CustomAlert\";\nimport { validator, VALIDATION_SCHEMA } from \"globals/constants/schema\";\nimport { readStateFromBackend } from \"rootActions\";\nimport ModalForPull from \"../ModalForPull/ModalForPull\";\nimport {\n    hideAlert, hideModalForPush, hideModalForPull,\n    showAlert, showModalForPush, showModalForPull,\n    showModalForPatch, showConfirmBox, hideConfirmBox, deactivatePatch\n} from \"../visibilityActions\";\nimport { formatState } from \"utils/formattingUtils\"\nimport ModalForPatch from \"../ModalForPatch/ModalForPatch\";\nimport { constructValidJSON, savePatch } from \"utils/saveUtils\";\nimport { ConfirmBox } from \"../ConfirmBox/ConfirmBox\";\n\n\nclass Sidebar extends React.Component {\n    state = {\n        inputEl: createRef()\n    }\n\n    isValidForm() {\n        const form = document.getElementById(\"mainForm\");\n        return form.reportValidity();\n    }\n\n    onSaveButtonClick = () => {\n        if (this.isValidForm()) {\n            const formattedData = constructValidJSON(this.props.syncJSON);\n            const fileData = JSON.stringify(formattedData, null, 4);\n            const blob = new Blob([fileData], {type: \"text/plain\"});\n            const url = URL.createObjectURL(blob);\n            const link = document.createElement(\"a\");\n            const title = formattedData.title.replace(/ /g, '_');\n            link.download = `${title}_module_type.json`;\n            link.href = url;\n            link.click();\n        }\n    }\n\n    onPushButtonClick = () => {\n        if (this.isValidForm()) {\n            this.props.showModalForPush();\n        }\n    }\n\n    onCreatePatchClick = () => {\n        if (this.props.isPatchActive){\n            if (this.isValidForm()) {\n                savePatch(\n                    this.props.patchBase,\n                    this.props.syncJSON,\n                    this.props.deactivatePatch,\n                    this.props.showAlert\n                );\n            }\n        }\n        else {\n            this.props.showModalForPatch();\n        }\n    }\n\n    handleFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                try {\n                    const json = JSON.parse(reader.result);\n                    const valResult = validator.validate(json, VALIDATION_SCHEMA)\n                    if (!valResult.valid) {\n                        this.props.showAlert(\n                            Constants.ALERT_TITLE_FAILURE,\n                            Constants.VALIDATION_ERROR_MESSAGE\n                            + valResult.errors.join(\", \")\n                        )\n                    } else {\n                        this.props.readStateFromBackend(json)\n                    }\n                }\n                catch (error) {\n                    this.props.showAlert(\n                        Constants.ALERT_TITLE_FAILURE,\n                        String(error)\n                    )\n                }\n            };\n            reader.onerror = () => {\n                this.props.showAlert(\n                    Constants.ALERT_TITLE_FAILURE,\n                    Constants.FILE_LOADING_FAILURE\n                    + file.name\n                );\n            };\n            reader.readAsText(file, 'UTF-8');\n        }\n    }\n\n    onOpenButtonClick = () => {\n        const inputElement = this.state.inputEl.current;\n        inputElement.click();\n        inputElement.addEventListener('change', this.handleFile, false);\n    }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <p>{ Constants.SIDEBAR_TITLE }</p>\n                <ul>\n                    <input type=\"file\" ref={this.state.inputEl} accept=\"application/JSON\"/>\n                    <li onClick={\n                        this.props.isPatchActive\n                            ?this.props.showConfirmBox\n                            :this.onOpenButtonClick\n                    }>\n                        { Constants.OPEN_FROM_FILE }\n                    </li>\n                    <li onClick={\n                        this.props.isPatchActive\n                            ?this.props.showConfirmBox\n                            :this.props.showModalForPull\n                    }>\n                        { Constants.OPEN_FROM_API }\n                    </li>\n                    <li onClick={\n                        this.props.isPatchActive\n                            ?this.props.showConfirmBox\n                            :this.onSaveButtonClick\n                    }>\n                        { Constants.SAVE_JSON }\n                    </li>\n                    <li onClick={\n                        this.props.isPatchActive\n                            ?this.props.showConfirmBox\n                            :this.onPushButtonClick\n                    }>\n                        { Constants.PUSH_JSON }\n                    </li>\n                    <li onClick={this.onCreatePatchClick}>\n                        { this.props.isPatchActive\n                            ?Constants.SAVE_PATCH_JSON\n                            :Constants.CREATE_PATCH\n                        }\n                    </li>\n                </ul>\n                {\n                   this.props.modalForPush &&\n                   <ModalForPush\n                       json={constructValidJSON(this.props.syncJSON)}\n                   />\n                }\n                {\n                    this.props.modalForPatch &&\n                    <ModalForPatch/>\n                }\n                {\n                    this.props.customAlert &&\n                        <CustomAlert\n                            title={this.props.customAlert.title}\n                            message={this.props.customAlert.message}\n                            closeAlertHandler={this.props.hideAlert}\n                        />\n                }\n                {\n                    this.props.modalForPull &&\n                    <ModalForPull/>\n                }\n                {\n                    this.props.confirmBox &&\n                    <ConfirmBox message={Constants.CONFIRM_BOX_PATCH_TEXT}\n                                title={Constants.CONFIRM_BOX_PATCH_TITLE}\n                                closeClickHandler={this.props.hideConfirmBox}\n                                okClickHandler={this.props.deactivatePatch}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    syncJSON: formatState(state),\n    patchBase: state.patch_base,\n    modalForPush: state.elements_visibility.modalForPush,\n    modalForPatch: state.elements_visibility.modalForPatch,\n    modalForPull: state.elements_visibility.modalForPull,\n    customAlert: state.elements_visibility.customAlert,\n    confirmBox: state.elements_visibility.confirmBox,\n    isPatchActive: state.elements_visibility.isPatchActive,\n})\n\nconst mapDispatchToProps = {\n    readStateFromBackend,\n    showModalForPush,\n    showModalForPatch,\n    hideModalForPush,\n    showModalForPull,\n    hideModalForPull,\n    showConfirmBox,\n    hideConfirmBox,\n    deactivatePatch,\n    showAlert,\n    hideAlert\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n\n","import React from \"react\";\nimport './Header.scss';\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div>\n                    <svg className=\"iconCiscoLogo\">\n                        <use xlinkHref={`${Icons}#icon-cisco-logo`}/>\n                    </svg>\n                </div>\n                <div>\n                    <p className=\"headerTitle\">{Constants.HEADER_TITLE}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.scss';\nimport Content from \"./container/Content/Content\";\nimport Sidebar from \"./container/Content/components/Sidebar/Sidebar\";\nimport Header from \"./container/Content/components/Header/Header\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"site\">\n                <Sidebar/>\n                <Content/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"container is cached for offline use.\" message.\n              console.log('container is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    ADD_EXTERNAL_REFERENCE,\n    DELETE_EXTERNAL_REFERENCE,\n    UPDATE_EXTERNAL_REFERENCE,\n} from \"globals/constants/types\"\n\nconst initialState = []\n\nexport const externalReferencesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_EXTERNAL_REFERENCE:\n            return state.concat(\n                {\n                    \"label\": \"\",\n                    \"link\": \"\",\n                    \"id\": action.payload.id\n                }\n            )\n\n        case DELETE_EXTERNAL_REFERENCE:\n            return state.filter(\n                el => !Object.values(el).includes(action.payload)\n            )\n\n        case UPDATE_EXTERNAL_REFERENCE:\n            return state.map(\n                    item => {\n                        if (item.id !== action.payload.id) {\n                            return item\n                        }\n                        return {\n                            ...item,\n                            [action.payload.pair.name]: action.payload.pair.value\n                        }\n                    }\n                )\n\n        default:\n            return state\n    }\n}\n","import {\n    ADD_CONF_SPEC,\n    ADD_OPTIONS,\n    DELETE_ALL_OPTIONS,\n    DELETE_CONF_SPEC,\n    DELETE_OPTION,\n    UPDATE_CONF_SPEC,\n    UPDATE_OPTION\n} from \"globals/constants/types\"\n\nfunction getIndexOfSpec(state, payload) {\n    let spec = state.filter((spec) => spec.id === payload.conf_spec_id);\n    return state.indexOf(spec[0])\n}\n\nexport const configurationSpecReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_CONF_SPEC:\n            return state.concat([action.payload])\n        case ADD_OPTIONS:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.concat(action.payload.options)\n                    }\n                }\n            )\n\n        case DELETE_CONF_SPEC:\n            return state.filter(\n                (spec) => spec.id !== action.payload.conf_spec_id\n            );\n\n        case DELETE_ALL_OPTIONS:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": []\n                    }\n                }\n            )\n        case DELETE_OPTION:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.filter(\n                            el => el.id !== action.payload.option_id\n                        )\n                    }\n                }\n            )\n\n        case UPDATE_CONF_SPEC:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        [action.payload.pair.name]: action.payload.pair.value\n                    }\n                }\n            )\n\n        case UPDATE_OPTION:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.map((option) => {\n                                if (option.id !== action.payload.option_id) {\n                                    return option\n                                }\n                                return {\n                                    ...option,\n                                    [action.payload.pair.name]: action.payload.pair.value\n                                }\n                            }\n                        )\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\n","import {\n    TOGGLE_AUTH_TYPE, UPDATE_AUTH_TYPE, UPDATE_CONF_TOKEN,\n    UPDATE_SUPPORTED_API\n} from \"globals/constants/types\"\nimport { TOGGLE_ALGORITHM } from \"globals/constants/types\";\nimport * as Constants from \"globals/constants/constants\";\n\nconst initialState = {\n \"supported-apis\": []\n}\n\nexport const propertiesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_SUPPORTED_API:\n            if (!state[\"supported-apis\"].includes(action.payload)) {\n                return {\n                    ...state,\n                        \"supported-apis\": state[\"supported-apis\"].concat([action.payload])\n                    }\n            } else {\n                return {\n                    ...state,\n                        \"supported-apis\": state[\"supported-apis\"].filter(\n                            (api) => api !== action.payload\n                        )\n                }\n            }\n        case TOGGLE_AUTH_TYPE:\n            if (Object.keys(state).includes(\"auth-type\")) {\n                return Object.fromEntries(\n                        Object.entries(state).filter(\n                            ([key, val]) => key === Constants.SUPPORTED_APIS\n                        )\n                )\n            } else {\n                return {\n                    ...state,\n                        \"auth-type\": \"\"\n                }\n            }\n\n        case UPDATE_AUTH_TYPE:\n            return {\n                ...state,\n                \"auth-type\": action.payload\n            }\n        case UPDATE_CONF_TOKEN:\n            return {...state,\n                [action.payload.name]: action.payload.value\n            }\n\n        case TOGGLE_ALGORITHM:\n            if (action.payload === 'RS256'){\n                return Object.fromEntries(\n                    Object.entries(state).filter(\n                        ([key, val]) => key !== Constants.CONFIGURATION_TOKEN_KEY\n                    )\n                )\n            }\n            else {\n                return Object.fromEntries(\n                    Object.entries(state).filter(\n                        ([key, val]) => key !== Constants.CUSTOM_JWKS_HOST\n                    )\n                )\n            }\n\n        default:\n            return state\n    }\n}\n","import {\n    ADD_CAPABILITY,\n    DELETE_CAPABILITY,\n    UPDATE_CAPABILITY_DESCR\n} from \"globals/constants/types\"\n\nconst initialState = [];\n\nexport const capabilitiesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CAPABILITY:\n            if (state.filter(\n                obj => Object.values(obj).includes(action.payload.id)).length === 0\n            ) {\n                return state.concat([action.payload])\n            } else {\n                return state\n            }\n        case DELETE_CAPABILITY:\n            return state.filter((api) => api.id !== action.payload)\n\n        case UPDATE_CAPABILITY_DESCR:\n            let item = state.filter((api) => api.id === action.payload.id);\n            let elementIndex = state.indexOf(item[0]);\n            return state.map((item, index) => {\n                    if (index !== elementIndex) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        ...action.payload\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\n","import {\n    HIDE_ALERT, HIDE_MODAL_FOR_PUSH, SHOW_ALERT, SHOW_LOADER,\n    SHOW_MODAL_FOR_PUSH, SHOW_MODAL_FOR_PULL,\n    HIDE_LOADER, HIDE_MODAL_FOR_PULL, HIDE_MODAL_FOR_PATCH,\n    SHOW_MODAL_FOR_PATCH, SHOW_CONFIRM_BOX, HIDE_CONFIRM_BOX,\n    ACTIVATE_PATCH, DEACTIVATE_PATCH\n}\nfrom \"globals/constants/types\";\n\n\nconst initialState = {\n    modalForPush: false,\n    modalForPatch: false,\n    modalForPull: false,\n    loader: false,\n    customAlert: null,\n    confirmBox: null,\n    isPatchActive: false\n};\n\nexport const visibilityReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case SHOW_MODAL_FOR_PUSH:\n            return {...state, modalForPush: true}\n        case HIDE_MODAL_FOR_PUSH:\n            return {...state, modalForPush: false}\n        case SHOW_MODAL_FOR_PATCH:\n            return {...state, modalForPatch: true}\n        case HIDE_MODAL_FOR_PATCH:\n            return {...state, modalForPatch: false}\n        case SHOW_LOADER:\n            return {...state, loader: true}\n        case HIDE_LOADER:\n            return {...state, loader: false}\n        case SHOW_MODAL_FOR_PULL:\n            return {...state, modalForPull: true}\n        case HIDE_MODAL_FOR_PULL:\n            return {...state, modalForPull: false}\n        case SHOW_ALERT:\n            return {...state, customAlert: {\n                ...state.customAlert,\n                    ...action.payload\n                }\n            }\n        case HIDE_ALERT:\n            return {...state, customAlert: null}\n        case SHOW_CONFIRM_BOX:\n            return {...state, confirmBox: {\n                    ...state.confirmBox,\n                    ...action.payload\n                }\n            }\n        case HIDE_CONFIRM_BOX:\n            return {...state, confirmBox: null}\n        case ACTIVATE_PATCH:\n            return {...state, isPatchActive: true}\n        case DEACTIVATE_PATCH:\n            return {...state, isPatchActive: false, confirmBox: null}\n        default: return state\n    }\n}\n","import { additionalInputsReducer } from \"./container/Content/additionalInputsReducer\";\nimport { externalReferencesReducer } from \"./container/Content/components/ExternalReferences/externalReferencesReducer\";\nimport { configurationSpecReducer } from \"./container/Content/components/ConfigurationSpec/configurationSpecReducer\";\nimport { propertiesReducer } from \"./container/Content/components/Properties/propertiesReducer\";\nimport { capabilitiesReducer } from \"./container/Content/components/Capabilities/capabilitiesReducer\";\nimport { combineReducers } from \"redux\";\nimport { READ_STATE_FROM_BACKEND } from \"./globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { visibilityReducer } from \"./container/Content/components/visibilityReducer\";\nimport { patchReducer } from \"./container/Content/components/patchReducer\";\n\n\nconst appReducer = combineReducers({\n            other_inputs: additionalInputsReducer,\n            properties: propertiesReducer,\n            capabilities: capabilitiesReducer,\n            external_references: externalReferencesReducer,\n            configuration_spec: configurationSpecReducer,\n            elements_visibility: visibilityReducer,\n            patch_base: patchReducer\n    }\n)\n\nfunction addIDs (currentList) {\n    if (currentList) {\n        currentList.map(\n            el => el.id = uuidv4()\n        )\n    }\n    return currentList || []\n}\n\nfunction reformatConfSpec (spec) {\n    spec = addIDs(spec);\n    if (spec) {\n        spec.map(el => el.options = addIDs(el.options))\n    }\n    return spec\n}\n\nexport const rootReducer = (state, action) => {\n    if (action.type === READ_STATE_FROM_BACKEND) {\n        return {\n            ...state,\n            external_references: addIDs(action.payload.external_references),\n            configuration_spec: reformatConfSpec(action.payload.configuration_spec),\n            properties: action.payload.properties || {\"supported-apis\": []},\n            capabilities: action.payload.capabilities || [],\n            other_inputs: {\n                // The API response contains additional fields that need to be excluded\n                title: action.payload.title,\n                short_description: action.payload.short_description,\n                tips: action.payload.tips,\n                description: action.payload.description,\n                flags: action.payload.flags,\n                logo: action.payload.logo,\n                default_name: action.payload.default_name\n            }\n        }\n    }\n    return appReducer(state, action)\n}\n","import {DELETE_LOGO, LOAD_FILE, UPDATE_FlAGS, UPDATE_SINGLE_INPUT}\nfrom \"globals/constants/types\"\n\n\nexport const additionalInputsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_SINGLE_INPUT:\n            return {...state, [action.payload.name]: action.payload.value}\n\n        case UPDATE_FlAGS:\n            return {...state, \"flags\": action.payload}\n\n        case LOAD_FILE:\n            return {...state, \"logo\": action.payload}\n        case DELETE_LOGO:\n            return {...state, \"logo\": \"\"}\n        default:\n            return state\n    }\n}\n","import { SAVE_PATCH_BASE } from \"globals/constants/types\";\n\n\nexport const patchReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SAVE_PATCH_BASE:\n            const json = action.payload.json;\n            return {\n                ...state,\n                json: (({elements_visibility, ...json}) => json)(json),\n                id: action.payload.id,\n                url: action.payload.url\n            }\n        default: return state\n    }\n}\n","import * as Constants from \"./globals/constants/constants\";\nimport axios from \"axios\";\n\nexport async function authorize(values) {\n    return axios({\n        baseURL: values.iroh_service_url,\n        url: Constants.AUTH_ENDPOINT,\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json',\n            'Authorization': 'Basic ' + btoa(values.client_id + ':' + values.password)\n        },\n        data: 'grant_type=client_credentials'\n    })\n        .then((response) => {\n            return response.data['access_token'];\n        })\n        .catch(err => {\n            throw err\n        })\n}\n\n\nexport async function pullModuleType(values, token) {\n    return axios({\n        baseURL: values.iroh_service_url,\n        url: '/iroh/iroh-int/module-type/'\n            + values.module_type_id,\n        method: 'get',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n        .then((response) => {\n            return response.data;\n        })\n        .catch(err => {\n            throw err\n        })\n}\n\n\nexport async function pushModuleType(token, values) {\n    return axios({\n        baseURL: values.iroh_service_url,\n        url: Constants.MODULE_TYPE_ENDPOINT,\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + token\n        },\n        data: values.json\n    })\n        .then((response) => {\n            return response.data.id;\n        })\n        .catch(err => {\n            throw err\n        })\n}\n","import { SAVE_PATCH_BASE } from \"globals/constants/types\";\n\nexport const savePatchBase = (id, json, url) => ({\n    type: SAVE_PATCH_BASE,\n    payload: {id: id, json: json, url: url}\n})\n","import { call, put, takeLatest, select } from \"redux-saga/effects\"\nimport {\n    PULL_MODULE_TYPE_ERROR,\n    PULL_MODULE_TYPE_REQUEST,\n    PULL_MODULE_TYPE_SUCCESS, PUSH_MODULE_TYPE_ERROR,\n    PUSH_MODULE_TYPE_REQUEST, PUSH_MODULE_TYPE_SUCCESS,\n    PATCH_MODULE_TYPE_REQUEST, PATCH_MODULE_TYPE_SUCCESS\n} from \"./globals/constants/types\";\nimport * as Constants from \"globals/constants/constants\";\nimport {\n    hideLoader,\n    hideModalForPush,\n    hideModalForPull,\n    showAlert,\n    showLoader, activatePatch, hideModalForPatch\n} from \"./container/Content/components/visibilityActions\";\nimport {authorize, pullModuleType, pushModuleType} from \"./services\";\nimport {\n    onPullModuleTypeSuccess,\n    onPullModuleTypeError,\n    onPushModuleTypeSuccess,\n    onPushModuleTypeError,\n    onPatchModuleTypeSuccess,\n    readStateFromBackend\n} from \"./rootActions\"\nimport { savePatchBase } from \"./container/Content/components/patchActions\";\nimport { extractErrorMessage } from \"./utils/formattingUtils\";\n\n\nexport function* sagaWatcher()  {\n    yield takeLatest(PULL_MODULE_TYPE_REQUEST, pullSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_REQUEST, pushSagaWorker)\n    yield takeLatest(PULL_MODULE_TYPE_SUCCESS, onPullSuccessSagaWorker)\n    yield takeLatest(PULL_MODULE_TYPE_ERROR, onPullErrorSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_SUCCESS, onPushSuccessSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_ERROR, onPushErrorSagaWorker)\n    yield takeLatest(PATCH_MODULE_TYPE_REQUEST, patchSagaWorker)\n    yield takeLatest(PATCH_MODULE_TYPE_SUCCESS, onPatchSuccessSagaWorker)\n}\n\nfunction* onPullSuccessSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(hideModalForPull())\n    yield put(readStateFromBackend(action.payload))\n}\n\nfunction* onPullErrorSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(showAlert(Constants.ALERT_TITLE_FAILURE, action.payload))\n}\n\nfunction* pullSagaWorker(action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload)\n        const payload = yield call(pullModuleType, action.payload, token)\n        yield put(onPullModuleTypeSuccess(payload))\n    }\n    catch (e){\n        yield put(onPullModuleTypeError(extractErrorMessage(e)))\n    }\n}\n\nfunction* onPushSuccessSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(hideModalForPush())\n    yield put(showAlert(Constants.ALERT_TITLE_SUCCESS, Constants.MESSAGE_SUCCESS + action.payload))\n}\n\nfunction* onPushErrorSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(showAlert(Constants.ALERT_TITLE_FAILURE, action.payload))\n}\n\nfunction* pushSagaWorker(action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload)\n        const id = yield call(pushModuleType, token, action.payload)\n        yield put(onPushModuleTypeSuccess(id))\n    }\n    catch (e){\n        yield put(onPushModuleTypeError(extractErrorMessage(e)))\n    }\n}\n\nfunction* patchSagaWorker (action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload);\n        const url = action.payload.iroh_service_url;\n        const json = yield call(pullModuleType, action.payload, token);\n        yield put(onPatchModuleTypeSuccess(json, url))\n    } catch(e){\n        yield put(onPullModuleTypeError(extractErrorMessage(e)))\n    }\n}\n\nexport const getState = (state) => state\n\nfunction* onPatchSuccessSagaWorker (action) {\n    yield put(hideLoader())\n    yield put(hideModalForPatch())\n    yield put(readStateFromBackend(action.payload.data))\n    yield put(activatePatch())\n    let data = yield select(getState);\n    yield put(savePatchBase(action.payload.data.id, data, action.payload.url))\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'globals/styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\"\nimport { rootReducer } from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\"\nimport { sagaWatcher } from \"./sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(saga)\n)\n\nsaga.run(sagaWatcher);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}