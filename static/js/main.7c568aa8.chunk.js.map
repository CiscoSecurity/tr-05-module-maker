{"version":3,"sources":["globals/icons/sprite.svg","container/Content/additionalInputsActions.js","globals/constants/types.js","container/Content/components/MarkdownEditor.js","globals/constants/constants.js","container/Content/components/ExternalReferences/components/CustomInput/CustomInput.js","container/Content/components/ExternalReferences/externalReferencesActions.js","container/Content/components/ExternalReferences/ExternalReferences.js","container/Content/components/Properties/components/SupportedAPI/SupportedAPI.js","container/Content/components/Capabilities/capabilitiesActions.js","container/Content/components/Properties/propertiesActions.js","container/Content/components/Properties/components/AuthType/AuthType.js","container/Content/components/Properties/Properties.js","container/Content/components/ConfigurationSpec/configurationSpecActions.js","container/Content/components/ConfigurationSpec/components/Options/OptionItem.js","container/Content/components/ConfigurationSpec/components/Options/Options.js","container/Content/components/ConfigurationSpec/components/ConfigurationSpecItem/ConfigurationSpecItem.js","container/Content/components/ConfigurationSpec/ConfigurationSpec.js","container/Content/components/Capabilities/components/Capability.js","container/Content/components/Capabilities/Capabilities.js","container/Content/components/FileInput/FileInput.js","container/Content/Content.js","rootActions.js","container/Content/components/visibilityActions.js","container/Content/components/ModalForPush/ModalForPush.js","container/Content/components/CustomAlert/CustomAlert.js","globals/constants/schema.js","container/Content/components/ModalForPull/ModalForPull.js","container/Content/components/Sidebar/Sidebar.js","container/Content/components/Header/Header.js","App.js","serviceWorker.js","container/Content/components/ExternalReferences/externalReferencesReducer.js","container/Content/components/ConfigurationSpec/configurationSpecReducer.js","container/Content/components/Properties/propertiesReducer.js","container/Content/components/Capabilities/capabilitiesReducer.js","container/Content/components/visibilityReducer.js","rootReducer.js","container/Content/additionalInputsReducer.js","services.js","sagas.js","index.js"],"names":["module","exports","updateSingleInput","pair","type","payload","name","value","onFileLoaded","imageFile","MarkdownEditor","state","tab","props","handleValueChange","setState","handleTabChange","minEditorHeight","minPreviewHeight","toolbarCommands","onChange","this","onTabChange","syncContent","generateMarkdownPreview","markdown","Promise","resolve","source","selectedTab","React","Component","mapDispatchToProps","connect","other_inputs","KEY_DATALIST","TYPE_OPTIONS","LABELS","URL","ALERT_TITLE_FAILURE","CustomInput","changeInputHandler","event","persist","updateExternalReference","reference","id","target","trim","onDeleteIconClick","deleteExternalReference","className","placeholder","autoComplete","list","label","required","link","Constants","map","option","key","onClick","xlinkHref","Icons","ExternalReferences","onAddButtonClick","addExternalReference","syncExternalReferences","item","uuidv4","external_references","SupportedAPI","title","api","class","onCheckboxToggle","updateSupportedAPI","checked","addCapability","syncSupportedAPIs","filter","elem","startsWith","length","deleteCapability","includes","properties","AuthType","auth_type_options","toggleAuthType","onAuthSelection","updateAuthType","Object","keys","syncProperties","disabled","hidden","Properties","apis","addConfSpec","addOptions","options","conf_spec_id","OptionsItem","deleteOption","onInputUpdate","updateOption","option_id","Options","onButtonClick","ConfigurationSpecItem","showOptions","syncConfSpecItem","onSelectChange","onInputChange","role","deleteAllOptions","deleteConfSpec","trimInputValue","updateConfSpec","prev","onBlur","tooltip","subtype","syncConfSpec","configuration_spec","ConfigurationSpec","Capability","onDescriptionChange","updateCapabilityDescription","description","syncCapabilities","capabilities","getStyle","isDragActive","deleteLogo","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onload","dataURL","result","readAsDataURL","useDropzone","multiple","accept","getRootProps","getInputProps","style","Boolean","src","alt","height","Content","trimFlags","updateFlags","split","changeFlagsHandler","handleLoadLocalFile","preventDefault","files","onloadend","default_name","short_description","flags","logo","readStateFromBackend","json","hideModalForPush","hideModalForPull","showAlert","message","pushModuleTypeRequest","values","client_id","password","loader","elements_visibility","initialValues","validate","errors","onSubmit","a","setSubmitting","isSubmitting","loaded","htmlFor","component","CustomAlert","closeAlertHandler","validator","Validator","addSchema","VALIDATION_SCHEMA","pullModuleTypeRequest","module_type_id","Sidebar","inputEl","createRef","onSaveButtonClick","isValidForm","formattedData","constructValidJSON","fileData","JSON","stringify","blob","Blob","url","createObjectURL","document","createElement","replace","download","href","click","onPushButtonClick","showModalForPush","handleFile","parse","valResult","valid","join","error","String","onerror","readAsText","onOpenButtonClick","inputElement","current","addEventListener","data","syncJSON","element","getElementById","reportValidity","ref","showModalForPull","modalForPush","customAlert","hideAlert","modalForPull","formatState","Header","App","window","location","hostname","match","initialState","getIndexOfSpec","spec","indexOf","appReducer","combineReducers","action","fromEntries","entries","concat","obj","elementIndex","index","el","addIDs","currentList","authorize","fetch","method","headers","btoa","body","response","ok","statusText","pullModuleType","token","pushModuleType","sagaWatcher","onPullSuccessSagaWorker","onPullErrorSagaWorker","pullSagaWorker","onPushSuccessSagaWorker","onPushErrorSagaWorker","pushSagaWorker","takeLatest","put","call","saga","createSagaMiddleware","store","createStore","tips","applyMiddleware","run","app","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7c568aa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.31710dea.svg\";","import { LOAD_FILE, UPDATE_FlAGS, UPDATE_SINGLE_INPUT, DELETE_LOGO }\nfrom \"globals/constants/types\";\n\nexport const updateSingleInput = (pair) => ({\n        type: UPDATE_SINGLE_INPUT,\n        payload: {name: pair.name, value: pair.value}\n})\n\nexport const updateFlags = (list) => ({\n        type: UPDATE_FlAGS,\n        payload: list\n})\n\nexport const onFileLoaded = (imageFile) => ({\n        type: LOAD_FILE,\n        payload: imageFile\n})\n\nexport const deleteLogo = () => ({\n        type: DELETE_LOGO\n})\n","// Capabilities\nexport const ADD_CAPABILITY = 'ADD_CAPABILITY';\nexport const UPDATE_CAPABILITY_DESCR = 'UPDATE_CAPABILITY_DESCR';\nexport const DELETE_CAPABILITY = 'DELETE_CAPABILITY';\n\n// Properties\nexport const UPDATE_SUPPORTED_API = 'UPDATE_SUPPORTED_API';\nexport const TOGGLE_AUTH_TYPE = 'TOGGLE_AUTH_TYPE';\nexport const UPDATE_AUTH_TYPE = 'UPDATE_AUTH_TYPE';\n\n// Content\nexport const UPDATE_SINGLE_INPUT = 'UPDATE_SINGLE_INPUT';\nexport const UPDATE_FlAGS = 'UPDATE_FlAGS';\nexport const LOAD_FILE = 'LOAD_FILE';\nexport const DELETE_LOGO = 'DELETE_LOGO';\n\n// Configuration Spec\nexport const ADD_CONF_SPEC = 'ADD_CONF_SPEC';\nexport const ADD_OPTIONS = 'ADD_OPTIONS';\nexport const DELETE_CONF_SPEC = 'DELETE_CONF_SPEC';\nexport const DELETE_ALL_OPTIONS = 'DELETE_ALL_OPTIONS';\nexport const DELETE_OPTION = 'DELETE_OPTION';\nexport const UPDATE_CONF_SPEC = 'UPDATE_CONF_SPEC';\nexport const UPDATE_OPTION = 'UPDATE_OPTION';\n\n// External References\nexport const UPDATE_EXTERNAL_REFERENCE = 'UPDATE_EXTERNAL_REFERENCE';\nexport const ADD_EXTERNAL_REFERENCE = 'ADD_EXTERNAL_REFERENCE';\nexport const DELETE_EXTERNAL_REFERENCE = 'DELETE_EXTERNAL_REFERENCE';\n\n// Root\nexport const READ_STATE_FROM_BACKEND = 'READ_STATE_FROM_BACKEND';\n\nexport const PULL_MODULE_TYPE_REQUEST = 'PULL_MODULE_TYPE_REQUEST';\nexport const PUSH_MODULE_TYPE_REQUEST = 'PUSH_MODULE_TYPE_REQUEST';\n\nexport const PULL_MODULE_TYPE_SUCCESS = 'PULL_MODULE_TYPE_SUCCESS';\nexport const PUSH_MODULE_TYPE_SUCCESS = 'PUSH_MODULE_TYPE_SUCCESS';\n\nexport const PULL_MODULE_TYPE_ERROR = 'PULL_MODULE_TYPE_ERROR';\nexport const PUSH_MODULE_TYPE_ERROR = 'PUSH_MODULE_TYPE_ERROR';\n\n// Visibility\nexport const SHOW_MODAL_FOR_PUSH = \"SHOW_MODAL_FOR_PUSH\";\nexport const HIDE_MODAL_FOR_PUSH = \"HIDE_MODAL_FOR_PUSH\";\n\nexport const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\n\nexport const SHOW_LOADER = \"SHOW_LOADER\";\nexport const HIDE_LOADER = \"HIDE_LOADER\";\n\nexport const SHOW_MODAL_FOR_PULL = \"SHOW_MODAL_FOR_PULL\";\nexport const HIDE_MODAL_FOR_PULL = \"HIDE_MODAL_FOR_PULL\";\n","import React from \"react\";\nimport ReactMde from \"react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { updateSingleInput } from \"container/Content/additionalInputsActions\";\nimport { connect } from \"react-redux\";\n\n\nclass MarkdownEditor extends React.Component {\n    state = {\n            value: \"\",\n            tab: \"write\",\n            name: this.props.name\n    };\n\n    handleValueChange = value => {\n        this.setState({ value });\n        this.props.updateSingleInput({name: this.state.name, value: value})\n    };\n\n    handleTabChange = tab => {\n        this.setState({ tab });\n    };\n\n    render() {\n        return  <ReactMde\n            minEditorHeight={333}\n            minPreviewHeight={323}\n            toolbarCommands={\n                [\n                    [\"header\"],[\"bold\"], [\"italic\"], [\"strikethrough\"],\n                    [\"link\"], [\"quote\"], [\"code\"], [\"ordered-list\"],\n                    [\"unordered-list\"], [\"checked-list\"]\n                ]\n            }\n            onChange={this.handleValueChange}\n            onTabChange={this.handleTabChange}\n            value={this.props.syncContent[`${this.props.name}`]}\n            generateMarkdownPreview={(markdown) =>\n                Promise.resolve(<ReactMarkdown source={markdown} />)\n            }\n            selectedTab={this.state.tab}\n        />\n    }\n}\n\n\nconst mapDispatchToProps = {\n    updateSingleInput\n}\n\nconst mapStateToProps = (state) => ({\n    syncContent: state.other_inputs\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);\n","export const SELECT_PLACEHOLDER = \"Select your option\";\nexport const LOGO = \"logo\";\n\n// Content.js\nexport const MAIN_TITLE = \"Module\";\nexport const INPUT_TITLE_LABEL = \"Title\";\nexport const DEFAULT_NAME_LABEL = \"Default Name\";\nexport const SHORT_DESCRIPTION_LABEL = \"Short Description\";\nexport const DESCRIPTION_LABEL = \"Description\";\nexport const TIPS_LABEL = \"Tips\";\nexport const FLAGS_LABEL = \"Flags\";\nexport const FLAGS_PLACEHOLDER = \"Enter flags separated by commas\";\nexport const LOGO_LABEL = \"Logo\";\n\n// Capabilities.js\nexport const CAPABILITIES_TEXT = \"Select at least one of \" +\n    \"the Supported APIs to write a description\";\n\n// Sidebar.js\nexport const SIDEBAR_TITLE = \"Settings\";\nexport const OPEN_FROM_FILE = \"Open JSON from File\";\nexport const OPEN_FROM_API = \"Open JSON from TR API\";\nexport const SAVE_JSON = \"Save JSON\";\nexport const PUSH_JSON = \"Push JSON to TR\";\nexport const FILL_REQUIRED_ALERT = \"Please, fill out highlighted fields\";\nexport const VALIDATION_ERROR_MESSAGE = \"Wrong JSON structure: \";\nexport const FILE_LOADING_FAILURE = \"Error occurred reading file: \";\n\n// ConfigurationSpec.js\nexport const ADD_BTN_TITLE = \"+ Add\";\n\n// ConfigurationSpecItem.js\nexport const KEY_DATALIST = [\n    \"basic-auth-password\", \"basic-auth-user\", \"token\", \"url\", \"user\"\n];\nexport const TYPE_OPTIONS = [\n    \"api_key\", \"boolean\", \"device\", \"integer\", \"options\", \"password\", \"string\"\n];\nexport const TOOLTIP_LABEL = \"tooltip\";\nexport const SUBTYPE_LABEL = \"subtype\";\nexport const GROUP_LABEL = \"group\";\nexport const REQUIRED_LABEL = \"required\";\nexport const LABEL = \"label\";\nexport const TYPE_LABEL = \"type\";\nexport const KEY_LABEL = \"key\";\n\n// OptionsItem.js\nexport const VALUE_FIELD_TEXT = \"value\";\nexport const LABEL_FIELD_TEXT = \"label\";\n\n// Options.js\nexport const OPTIONS_SECTION_LABEL = \"Options\";\nexport const OPTIONS_BTN_TITLE = \"+ Add\";\n\n// Header.js\nexport const HEADER_TITLE = \"Threat Response Module Maker\";\n\n// ExternalReferences.js\nexport const LABELS = [\"Sign Up\", \"Free Trial\", \"Contact Us\"];\nexport const SECTION_TITLE = \"External References\";\n\n// ModalForPush.js\nexport const URL = \"https://visibility.amp.cisco.com\";\nexport const AUTH_ENDPOINT = \"/iroh/oauth2/token\";\nexport const MODULE_TYPE_ENDPOINT = \"/iroh/iroh-int/module-type\";\nexport const MESSAGE_SUCCESS = \"The module type was successfully created with id: \"\nexport const PUSH_MODAL_TEXT = \"Create a new module type in your Threat Response organization\";\nexport const CLIENT_ID_LABEL = \"Client ID\";\nexport const CLIENT_PASSWORD_LABEL = \"Client Password\";\nexport const PUSH_BTN_TITLE = \"Push\";\nexport const CANCEL_BTN_TITLE = \"Cancel\";\n\n// ModalForPull.js\nexport const PULL_BTN_TITLE = \"Pull\";\nexport const PULL_MODAL_TEXT = \"Pull module type from your Threat Response organization\";\nexport const MODULE_TYPE_ID = \"Module Type ID\";\n\n// AuthType.js\nexport const AUTH_LABEL = \"authorization\";\n\n// CustomAlert.js\nexport const CLOSE_BTN_LABEL = \"Close\";\nexport const ALERT_TITLE_FAILURE = \"Failure: an error occurred\";\nexport const ALERT_TITLE_SUCCESS = \"Success\";\n","import \"./CustomInput.scss\";\nimport React from \"react\";\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport { deleteExternalReference, updateExternalReference }\nfrom \"container/Content/components/ExternalReferences/externalReferencesActions\";\n\n\nclass CustomInput extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateExternalReference(\n            this.props.reference.id,\n            {\n            name: event.target.name,\n            value: event.target.value.trim()\n            }\n            )\n    }\n\n    onDeleteIconClick = () => {\n        this.props.deleteExternalReference(this.props.reference.id);\n    }\n\n    render() {\n        return(\n            <div className=\"reference_wrapper\">\n                <input type=\"text\"\n                       name=\"label\"\n                       placeholder=\"Enter label\"\n                       className=\"custom_input\"\n                       autoComplete=\"off\"\n                       list=\"ext-ref\"\n                       value={this.props.reference.label}\n                       onChange={this.changeInputHandler}\n                       required\n                />\n                <input type=\"text\"\n                       name=\"link\"\n                       placeholder=\"Enter link\"\n                       className=\"custom_input\"\n                       autoComplete=\"off\"\n                       value={this.props.reference.link}\n                       onChange={this.changeInputHandler}\n                       required\n                />\n                <datalist id=\"ext-ref\">\n                    {\n                        Constants.LABELS.map(\n                            option => {\n                                return (\n                                    <option key={`${option} ${this.props.reference.id}`}>\n                                        {option}\n                                    </option>\n                                )\n                            }\n                        )\n                    }\n                </datalist>\n                <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    deleteExternalReference,\n    updateExternalReference\n}\n\nexport default connect(null, mapDispatchToProps)(CustomInput);\n","import { ADD_EXTERNAL_REFERENCE, DELETE_EXTERNAL_REFERENCE, UPDATE_EXTERNAL_REFERENCE }\nfrom \"globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport const updateExternalReference = (id, pair) => ({\n        type: UPDATE_EXTERNAL_REFERENCE,\n        payload: {id: id, pair: pair}\n})\n\nexport const addExternalReference = () => ({\n        type: ADD_EXTERNAL_REFERENCE,\n        payload: {\n            id: uuidv4()\n        }\n})\n\nexport const deleteExternalReference = (id) => ({\n        type: DELETE_EXTERNAL_REFERENCE,\n        payload: id\n})\n","import React from \"react\";\nimport CustomInput from \"./components/CustomInput/CustomInput\";\nimport * as Constants from \"globals/constants/constants\";\nimport \"container/Content/components/ExternalReferences/ExternalReferences.scss\"\nimport { connect } from \"react-redux\";\nimport { addExternalReference } from \"./externalReferencesActions\";\n\n\nclass ExternalReferences extends React.Component {\n\n    onAddButtonClick = () => {\n        this.props.addExternalReference()\n    }\n\n    render() {\n        return (\n            <div className=\"reference-section\">\n                <div>\n                <label className='input-label'> {Constants.SECTION_TITLE}\n                    <button onClick={this.onAddButtonClick} type=\"button\">\n                        {Constants.ADD_BTN_TITLE}\n                    </button>\n                </label>\n                </div>\n                    {\n                        this.props.syncExternalReferences.map(\n                            item => (<CustomInput reference={item} key={item.id}/>)\n                        )\n                    }\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    addExternalReference\n}\n\nconst mapStateToProps = (state) => ({\n        syncExternalReferences: state.external_references\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExternalReferences);\n","import React from \"react\";\nimport \"./SupportedAPI.scss\";\nimport { connect } from \"react-redux\";\nimport { updateSupportedAPI } from \"../../propertiesActions\";\nimport { addCapability, deleteCapability }\nfrom \"container/Content/components/Capabilities/capabilitiesActions\";\n\n\nclass SupportedAPI extends React.Component {\n    state = {\n            title: this.props.api.title,\n            class: this.props.api.class\n        }\n\n    onCheckboxToggle = (event) => {\n\n        this.props.updateSupportedAPI(this.state.title);\n\n        if (event.target.checked) {\n            this.props.addCapability(this.state.class);\n        }\n\n        else {\n            if (this.props.syncSupportedAPIs.filter(\n                elem => elem.startsWith(this.state.class)).length === 1) {\n                this.props.deleteCapability(this.state.class);\n            }\n          }\n        }\n\n    render() {\n        return (\n            <div className=\"supportedAPI\">\n                <input type=\"checkbox\"\n                       autoComplete=\"off\"\n                       onChange={this.onCheckboxToggle}\n                       checked={this.props.syncSupportedAPIs.includes(this.state.title)}\n                />\n                {this.state.title}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addCapability,\n    deleteCapability,\n    updateSupportedAPI\n}\n\nconst mapStateToProps = (state) => ({\n      syncSupportedAPIs: state.properties[\"supported-apis\"] || []\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupportedAPI);\n","import {\n    ADD_CAPABILITY,\n    DELETE_CAPABILITY,\n    UPDATE_CAPABILITY_DESCR\n} from \"globals/constants/types\";\n\nexport const addCapability = (api) => ({\n        type: ADD_CAPABILITY,\n        payload: {id: api}\n})\n\nexport const updateCapabilityDescription = (api) => ({\n        type: UPDATE_CAPABILITY_DESCR,\n        payload: {id: api.id, \"description\": api.description}\n})\n\nexport const deleteCapability = (api) => ({\n    type: DELETE_CAPABILITY,\n    payload: api\n})\n","import { TOGGLE_AUTH_TYPE, UPDATE_AUTH_TYPE, UPDATE_SUPPORTED_API }\nfrom \"globals/constants/types\";\n\nexport const updateSupportedAPI = (api) => ({\n        type: UPDATE_SUPPORTED_API,\n        payload: api\n})\n\nexport const toggleAuthType = () => ({\n        type: TOGGLE_AUTH_TYPE\n})\n\nexport const updateAuthType = (type) => ({\n        type: UPDATE_AUTH_TYPE,\n        payload: type\n})\n","import React from \"react\";\nimport \"./AuthType.scss\";\nimport * as Constants from \"globals/constants/constants\";\nimport { toggleAuthType, updateAuthType } from \"../../propertiesActions\";\nimport { connect } from \"react-redux\";\n\n\nclass AuthType extends React.Component {\n   state = {\n            auth_type_options: [\"authorization-header\", \"basic\", \"bearer\"],\n        }\n\n\n    onCheckboxToggle = () => {\n        this.props.toggleAuthType();\n    }\n\n    onAuthSelection = event => {\n       event.persist();\n       this.props.updateAuthType(event.target.value)\n    }\n\nrender() {\n    return (\n        <div className=\"divAuth\">\n\n            <input type=\"checkbox\"\n                   autoComplete=\"off\"\n                   onChange={this.onCheckboxToggle}\n                   checked={Object.keys(this.props.syncProperties).includes(\"auth-type\")}\n            />\n\n            <label> { Constants.AUTH_LABEL } </label>\n            <select className=\"selectAuth\"\n                    value={this.props.syncProperties[\"auth-type\"] || \"\"}\n                    onChange={this.onAuthSelection}\n                    disabled={!Object.keys(this.props.syncProperties).includes(\"auth-type\")}\n                    required={Object.keys(this.props.syncProperties).includes(\"auth-type\")&&\"required\"}\n\n            >\n                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                {\n                   this.state.auth_type_options.map(\n                        option => {\n                            return <option value={option} key={option}>{option}</option>\n                        }\n                    )\n                }\n            </select>\n        </div>\n    )\n}\n}\n\nconst mapDispatchToProps = {\n    toggleAuthType,\n    updateAuthType\n}\n\nconst mapStateToProps = (state) => ({\n    syncProperties: state.properties\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthType);\n","import React from \"react\";\nimport SupportedAPI from \"./components/SupportedAPI/SupportedAPI\";\nimport AuthType from \"./components/AuthType/AuthType\";\nimport \"./Properties.scss\"\n\n\nclass Properties extends React.Component {\n    state = {\n            apis: [\n                {title: 'health', class: 'health'},\n                {title: 'deliberate/observables', class: 'deliberate'},\n                {title: 'refer/observables', class: 'refer'},\n                {title: 'observe/observables', class: 'observe'},\n                {title: 'respond/observables', class: 'respond'},\n                {title: 'respond/trigger', class: 'respond'},\n                {title: 'tiles', class: 'tiles'},\n                {title: 'tiles/tile', class: 'tiles'},\n                {title: 'tiles/tile-data', class: 'tiles'},\n            ]\n        }\n\n    render() {\n        return (\n            <div>\n                <p>Properties</p>\n                <fieldset>\n                    <p>Supported APIs</p>\n                    <fieldset>\n                        {\n                            this.state.apis.map(\n                                api => {\n                                    return <SupportedAPI api={api} key={api.title}/>\n                                }\n                            )\n                        }\n                    </fieldset>\n                    <p>Auth-type</p>\n                    <fieldset>\n                        <AuthType/>\n                    </fieldset>\n                </fieldset>\n            </div>\n        )\n    }\n}\n\nexport default Properties;\n","import {\n    ADD_CONF_SPEC, ADD_OPTIONS,\n    DELETE_ALL_OPTIONS,\n    DELETE_CONF_SPEC,\n    DELETE_OPTION,\n    UPDATE_CONF_SPEC, UPDATE_OPTION\n} from \"globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport const addConfSpec = () => ({\n        type: ADD_CONF_SPEC,\n        payload:   {\n            \"key\": \"\",\n            \"type\": \"\",\n            \"label\": \"\",\n            \"tooltip\": \"\",\n            \"subtype\": \"\",\n            \"required\": false,\n            \"group\": \"\",\n            \"options\": [],\n            \"id\": uuidv4()\n        }\n})\n\nexport const deleteConfSpec = (id) => ({\n        type: DELETE_CONF_SPEC,\n        payload: {conf_spec_id: id}\n})\n\nexport const updateConfSpec = (id, pair) => ({\n        type: UPDATE_CONF_SPEC,\n        payload: {\n            conf_spec_id: id,\n            pair: pair\n        }\n})\n\nexport const addOptions = (id) => {\n    return {\n        type: ADD_OPTIONS,\n        payload:\n            {\n                options: {\n                    value: \"\", label: \"\",\n                    id: uuidv4()\n                },\n                conf_spec_id: id\n            }\n    }\n}\n\nexport const deleteAllOptions = (id) => ({\n        type: DELETE_ALL_OPTIONS,\n        payload: {conf_spec_id: id}\n})\n\nexport const deleteOption = (option_id, conf_spec_id) => ({\n        type: DELETE_OPTION,\n        payload: {option_id: option_id, conf_spec_id: conf_spec_id}\n})\n\nexport const updateOption = (option_id, conf_spec_id, pair) => ({\n        type: UPDATE_OPTION,\n        payload: {option_id: option_id, conf_spec_id: conf_spec_id, pair: pair}\n})\n","import React from \"react\";\nimport  \"./Options.scss\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport { connect } from \"react-redux\";\nimport { deleteOption, updateOption } from \"../../configurationSpecActions\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass OptionsItem extends React.Component {\n    state = {\n            value: \"\",\n            label: \"\"\n        }\n\n    onDeleteIconClick = () => {\n        this.props.deleteOption(this.props.option.id, this.props.conf_spec_id)\n    }\n\n    onInputUpdate = event => {\n        event.persist()\n        this.props.updateOption(this.props.option.id, this.props.conf_spec_id,\n            {name: event.target.name, value: event.target.value.trim()})\n    }\n\n    render() {\n        return (\n            <div className=\"optionsWrapper\">\n                <div className=\"column\">\n                    <div className=\"inputDiv\">\n                        {Constants.VALUE_FIELD_TEXT}\n                        <span className=\"required-field\">*</span>\n                        <input type=\"text\"\n                               name=\"value\"\n                               className=\"customInput\"\n                               value={this.props.option.value}\n                               onChange={this.onInputUpdate}\n                               required\n                        />\n                    </div>\n                    <div className=\"inputDiv\">\n                        {Constants.LABEL_FIELD_TEXT}\n                        <span className=\"required-field\">*</span>\n                        <input type=\"text\"\n                               name=\"label\"\n                               className=\"customInput\"\n                               value={this.props.option.label}\n                               onChange={this.onInputUpdate}\n                               required\n                        />\n                    </div>\n                </div>\n                <div className=\"optionsIconWrapper\">\n                    <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteOption,\n    updateOption\n}\n\nexport default connect(null, mapDispatchToProps)(OptionsItem);\n","import React from \"react\";\nimport \"./Options.scss\";\nimport OptionsItem from \"./OptionItem\";\nimport { addOptions } from \"../../configurationSpecActions\";\nimport { connect } from \"react-redux\";\nimport * as Constants from \"globals/constants/constants\";\n\n\nclass Options extends React.Component {\n    onButtonClick = () => {\n        this.props.addOptions(this.props.conf_spec_id)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"confSpecRow\">\n                    <div className=\"options-title\">\n                        { Constants.OPTIONS_SECTION_LABEL }\n                        <button type=\"button\" className=\"addNewButton\" onClick={this.onButtonClick}>\n                            { Constants.OPTIONS_BTN_TITLE }\n                        </button>\n                    </div>\n                </div>\n                {this.props.options.map(\n                    elem => <OptionsItem key={elem.id}\n                                         option={elem}\n                                         conf_spec_id={this.props.conf_spec_id}\n                    />\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addOptions\n}\n\nexport default connect(null, mapDispatchToProps)(Options)\n","import React from \"react\";\nimport \"./ConfigurationSpecItem.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\nimport Options from \"../Options/Options\";\nimport { connect } from \"react-redux\";\nimport { addOptions, deleteAllOptions, deleteConfSpec, updateConfSpec }\nfrom \"../../configurationSpecActions\";\n\n\nclass ConfigurationSpecItem extends React.Component {\n    state = {\n        showOptions: this.props.syncConfSpecItem.options.length > 0\n    }\n\n    onSelectChange = (event) => {\n        this.onInputChange(event);\n        if (event.target.value === 'options') {\n            this.props.addOptions(this.props.role);\n            this.setState({showOptions: true})\n        }\n        else {\n            this.props.deleteAllOptions(this.props.role);\n            this.setState({showOptions: false});\n        }\n    }\n    onDeleteIconClick = () => {\n        this.props.deleteConfSpec(this.props.role);\n    }\n\n    trimInputValue = event => {\n        this.props.updateConfSpec(\n            this.props.role,\n            {name: event.target.name, value: event.target.value.trim()}\n        )\n    }\n\n    onInputChange = (event) => {\n        event.persist()\n        let value = '';\n        if (event.target.type === \"checkbox\"){\n            value = event.target.checked;\n        }\n        else {\n            value = event.target.value;\n        }\n        this.setState(prev => ({\n            ...prev, ...{\n                [event.target.name]: value\n            }\n        }))\n\n        this.props.updateConfSpec(\n            this.props.role,\n            {name: event.target.name, value: value}\n            )\n\n    }\n\n    render() {\n        return (\n            <div className=\"confSpecWrapper\">\n                <div className='column'>\n                        <div className=\"inputDiv\">\n                            {Constants.KEY_LABEL}\n                            <span className=\"required-field\">*</span>\n                            <input\n                                type=\"text\"\n                                name=\"key\"\n                                className=\"customInput\"\n                                required\n                                value={this.props.syncConfSpecItem.key}\n                                onChange={this.onInputChange}\n                                onBlur={this.trimInputValue}\n                                list=\"key-input-list\"\n                            />\n                        </div>\n                        <datalist id=\"key-input-list\">\n                            {\n                                Constants.KEY_DATALIST.map(\n                                    option => {\n                                        return <option key={`${option} ${this.props.role}`}>{option}</option>\n                                    }\n                                )\n                            }\n                        </datalist>\n                        <div className=\"inputDiv\">\n                            {Constants.TYPE_LABEL}\n                            <span className=\"required-field\">*</span>\n                            <select name=\"type\"\n                                    className=\"customInput\"\n                                    required\n                                    value={this.props.syncConfSpecItem.type || ''}\n                                    onChange={this.onSelectChange}>\n                                <option value=\"\" disabled hidden>{Constants.SELECT_PLACEHOLDER}</option>\n                                {\n                                    Constants.TYPE_OPTIONS.map(\n                                        option => {\n                                            return <option key={option}>{option}</option>\n                                        }\n                                    )\n                                }\n                            </select>\n                        </div>\n                    {  this.state.showOptions\n                        ?\n                        <Options\n                            conf_spec_id={this.props.role}\n                            options={this.props.syncConfSpecItem.options}\n                        />\n                        : null\n                    }\n                        <div className=\"inputDiv\">\n                            {Constants.LABEL}\n                            <span className=\"required-field\">*</span>\n                            <input type=\"text\"\n                                   name=\"label\"\n                                   className=\"customInput\"\n                                   required\n                                   value={this.props.syncConfSpecItem.label}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            {Constants.TOOLTIP_LABEL}\n                            <input type=\"text\"\n                                   name=\"tooltip\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem.tooltip}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            {Constants.SUBTYPE_LABEL}\n                            <input type=\"text\"\n                                   name=\"subtype\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem.subtype}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"inputDiv\">\n                            {Constants.GROUP_LABEL}\n                            <input type=\"text\"\n                                   name=\"group\"\n                                   className=\"customInput\"\n                                   value={this.props.syncConfSpecItem['group']}\n                                   onChange={this.onInputChange}\n                                   onBlur={this.trimInputValue}\n                            />\n                        </div>\n                        <div className=\"checkboxDiv\">\n                            {Constants.REQUIRED_LABEL}\n                            <input type=\"checkbox\" name=\"required\"\n                                   checked={this.props.syncConfSpecItem.required} onChange={this.onInputChange}/>\n                        </div>\n                </div>\n                <div>\n                    <svg className=\"closeIcon\" onClick={this.onDeleteIconClick}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    addOptions,\n    deleteAllOptions,\n    deleteConfSpec,\n    updateConfSpec\n}\n\nconst mapStateToProps = (state) => ({\n        syncConfSpec: state.configuration_spec\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationSpecItem);\n","import React from \"react\";\nimport \"./ConfigurationSpec.scss\"\nimport ConfigurationSpecItem from \"./components/ConfigurationSpecItem/ConfigurationSpecItem\"\nimport { addConfSpec } from \"./configurationSpecActions\";\nimport { connect } from \"react-redux\";\nimport * as Constants from \"globals/constants/constants\";\n\nclass ConfigurationSpec extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"confSpecRow\">\n                    <div>\n                    Configuration Spec\n                    <button type=\"button\" onClick={this.props.addConfSpec}>\n                        { Constants.ADD_BTN_TITLE }\n                    </button>\n                    </div>\n                </div>\n                {\n                    this.props.syncConfSpec.map(\n                        elem => (\n                            <ConfigurationSpecItem\n                                role={elem.id}\n                                key={elem.id}\n                                syncConfSpecItem={elem}\n                            />\n                            )\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    addConfSpec,\n}\n\nconst mapStateToProps = (state) => ({\n        syncConfSpec: state.configuration_spec\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationSpec);\n","import React from \"react\";\nimport \"./Capability.scss\"\nimport { updateCapabilityDescription } from \"../capabilitiesActions\";\nimport { connect } from \"react-redux\";\n\n\nclass Capability extends React.Component {\n    onDescriptionChange = event => {\n        event.persist()\n        this.props.updateCapabilityDescription({\n            id: this.props.api.id, description: event.target.value.trim()\n        }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"capabilitiesWrapper\">\n                <p>{this.props.api.id}\n                    <span className=\"required-field\">*</span>\n                </p>\n                <input\n                    type=\"text\"\n                    value={this.props.api.description}\n                    name={this.props.api.id}\n                    placeholder=\"Enter description\"\n                    autoComplete=\"off\"\n                    onChange={this.onDescriptionChange}\n                    required\n                />\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    updateCapabilityDescription\n}\n\nexport default connect(null, mapDispatchToProps)(Capability);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Capability from \"./components/Capability\";\nimport * as Constants from \"globals/constants/constants\";\nimport \"./Capabilities.scss\"\n\n\nconst Capabilities = ({syncCapabilities}) => {\n            return (\n                <div>\n                    <p>Capabilities</p>\n                    <fieldset>\n                        <p className=\"capabilitiesTip\">{Constants.CAPABILITIES_TEXT}</p>\n                        {syncCapabilities.map(api => {\n                            return <Capability api={api} key={api.id}/>\n                        })}\n                    </fieldset>\n                </div>\n            )\n        }\n\nconst mapStateToProps = (state) => ({\n        syncCapabilities: state.capabilities\n})\n\nexport default connect(mapStateToProps)(Capabilities);\n","import React, { useCallback } from \"react\";\nimport \"./FileInput.scss\"\nimport Icons from \"globals/icons/sprite.svg\";\nimport { deleteLogo, onFileLoaded } from \"../../additionalInputsActions\";\nimport { connect } from \"react-redux\";\nimport { useDropzone } from 'react-dropzone'\n\n\nconst getStyle = (isDragActive) => {\n    if (isDragActive) {\n        return {\"borderColor\": \"#049fd9\"};\n    }\n    return {\"borderColor\": '#eeeeee'};\n}\n\nconst FileInput = ({ value, deleteLogo, onFileLoaded }) => {\n    const onDrop = useCallback((acceptedFiles) => {\n        const file = acceptedFiles[0]\n        if (file) {\n            const reader = new FileReader()\n            reader.onload = () => {\n                const dataURL = reader.result\n                onFileLoaded(dataURL)\n            }\n            reader.readAsDataURL(file)\n        }\n\n    }, [onFileLoaded])\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\n        onDrop, multiple: false, accept: \"image/*\"\n    })\n\n    return (\n        <div className=\"dropzone-wrapper\">\n            <div {...getRootProps({className: \"dropzone\", style: getStyle(isDragActive)})}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop your logo here, or click to select logo</p>\n            </div>\n            {Boolean(value) &&\n            (<div>\n                <img src={value} alt=\"\" height=\"60\" className=\"img\"/>\n                <svg className=\"closeIcon\" onClick={deleteLogo}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>)\n            }\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = {\n    deleteLogo,\n    onFileLoaded\n}\n\nexport default connect(null, mapDispatchToProps)(FileInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Content.scss\";\nimport MarkdownEditor from \"./components/MarkdownEditor\";\nimport ExternalReferences from \"./components/ExternalReferences/ExternalReferences\";\nimport Properties from \"./components/Properties/Properties\";\nimport ConfigurationSpec from \"./components/ConfigurationSpec/ConfigurationSpec\";\nimport Capabilities from \"./components/Capabilities/Capabilities\";\nimport * as Constants from \"globals/constants/constants\";\nimport { onFileLoaded, updateFlags, updateSingleInput } from \"./additionalInputsActions\";\nimport FileInput from \"./components/FileInput/FileInput\";\nimport { addConfSpec } from \"./components/ConfigurationSpec/configurationSpecActions\";\n\n\nclass Content extends React.Component {\n    changeInputHandler = event => {\n        event.persist()\n        this.props.updateSingleInput({\n            name: event.target.name, value: event.target.value\n        })\n    }\n\n    trimInputValue = event => {\n        this.props.updateSingleInput({\n            name: event.target.name, value: event.target.value.trim()\n        })\n    }\n\n    trimFlags = event => {\n        this.props.updateFlags(event.target.value.split(',').map(item=>item.trim()))\n    }\n\n    changeFlagsHandler = event => {\n        event.persist()\n        this.props.updateFlags(event.target.value.split(','))\n    }\n\n    handleLoadLocalFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => this.props.onFileLoaded(reader.result);\n            reader.readAsDataURL(file);\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"row\">\n                    <h1 className=\"title\">{Constants.MAIN_TITLE}</h1>\n                </div>\n                <form id=\"mainForm\">\n                    <div className=\"row\">\n                        <div className=\"column\">\n                            <label className=\"input-label\">{Constants.INPUT_TITLE_LABEL}\n                                <span className=\"required-field\">*</span>\n                            </label>\n                            <textarea\n                                required\n                                autoComplete=\"off\"\n                                value={this.props.syncContent.title || '' }\n                                name=\"title\"\n                                onChange={this.changeInputHandler}\n                                onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.DEFAULT_NAME_LABEL}\n                                <span className=\"required-field\">*</span>\n                            </label>\n                            <textarea required\n                                      autoComplete=\"off\"\n                                      value={this.props.syncContent.default_name || ''}\n                                      name=\"default_name\"\n                                      onChange={this.changeInputHandler}\n                                      onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.SHORT_DESCRIPTION_LABEL}</label>\n                            <textarea autoComplete=\"off\"\n                                      value={this.props.syncContent.short_description || ''}\n                                      name=\"short_description\"\n                                      onChange={this.changeInputHandler}\n                                      onBlur={this.trimInputValue}\n                            />\n                            <label className=\"input-label\">{Constants.FLAGS_LABEL}</label>\n                            <input type=\"text\"\n                                   name=\"flags\"\n                                   placeholder={Constants.FLAGS_PLACEHOLDER}\n                                   autoComplete=\"off\"\n                                   value={this.props.syncContent.flags || ''}\n                                   onChange={this.changeFlagsHandler}\n                                   onBlur={this.trimFlags}\n                            />\n                            <label className=\"input-label\">{Constants.LOGO_LABEL}</label>\n                            <FileInput\n                                value={this.props.syncContent.logo}\n                                onChange={this.handleLoadLocalFile}\n                            />\n                            <Properties/>\n                            <Capabilities/>\n                            <ExternalReferences/>\n                            <ConfigurationSpec/>\n                        </div>\n                        <div className=\"column\">\n                            <label className=\"input-label\">{Constants.DESCRIPTION_LABEL}</label>\n                            <MarkdownEditor name=\"description\"/>\n                            <label className=\"input-label\">{Constants.TIPS_LABEL}</label>\n                            <MarkdownEditor name=\"tips\"/>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    syncContent: state.other_inputs\n})\n\nconst mapDispatchToProps = {\n    updateSingleInput,\n    updateFlags,\n    onFileLoaded,\n    addConfSpec\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\n","import {\n    READ_STATE_FROM_BACKEND,\n    PULL_MODULE_TYPE_REQUEST,\n    PUSH_MODULE_TYPE_REQUEST,\n    PULL_MODULE_TYPE_SUCCESS,\n    PULL_MODULE_TYPE_ERROR,\n    PUSH_MODULE_TYPE_SUCCESS,\n    PUSH_MODULE_TYPE_ERROR\n}\nfrom \"globals/constants/types\";\n\n\nexport const readStateFromBackend = (json) => ({\n    type: READ_STATE_FROM_BACKEND,\n    payload: json\n})\n\nexport const pullModuleTypeRequest = (module_type_id, client_id, password) => ({\n    type: PULL_MODULE_TYPE_REQUEST,\n    payload: {\n        module_type_id: module_type_id,\n        client_id: client_id,\n        password: password\n    }\n})\n\nexport const onPullModuleTypeSuccess = (data) => ({\n    type: PULL_MODULE_TYPE_SUCCESS,\n    payload: data\n})\n\nexport const onPullModuleTypeError = (error) => ({\n    type: PULL_MODULE_TYPE_ERROR,\n    payload: error\n})\n\nexport const pushModuleTypeRequest = (json, values) => ({\n    type: PUSH_MODULE_TYPE_REQUEST,\n    payload: {\n        json: json,\n        client_id: values.client_id,\n        password: values.password\n    }\n})\n\nexport const onPushModuleTypeSuccess = (data) => ({\n    type: PUSH_MODULE_TYPE_SUCCESS,\n    payload: data\n})\n\nexport const onPushModuleTypeError = (error) => ({\n    type: PUSH_MODULE_TYPE_ERROR,\n    payload: error\n})\n","import {\n    HIDE_MODAL_FOR_PUSH,\n    SHOW_MODAL_FOR_PUSH,\n    HIDE_ALERT,\n    HIDE_LOADER,\n    HIDE_MODAL_FOR_PULL,\n    SHOW_ALERT,\n    SHOW_LOADER,\n    SHOW_MODAL_FOR_PULL\n} from \"globals/constants/types\";\n\n\nexport const showModalForPush = () => ({\n    type: SHOW_MODAL_FOR_PUSH\n})\n\nexport const hideModalForPush = () => ({\n    type: HIDE_MODAL_FOR_PUSH\n})\n\nexport const showLoader = () => ({\n    type: SHOW_LOADER\n})\n\nexport const hideLoader = () => ({\n    type: HIDE_LOADER\n})\n\nexport const showModalForPull = () => ({\n    type: SHOW_MODAL_FOR_PULL\n})\n\nexport const hideModalForPull = () => ({\n    type: HIDE_MODAL_FOR_PULL\n})\n\nexport const showAlert = (title, message) => ({\n    type: SHOW_ALERT,\n    payload: {\n        title,\n        message\n    }\n})\n\nexport const hideAlert = () => ({\n    type: HIDE_ALERT\n})\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport './ModalForPush.scss';\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\";\nimport { pushModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPush, showAlert } from \"../visibilityActions\";\nimport { connect } from \"react-redux\";\n\n\nconst ModalForPush = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.client_id) {\n                    errors.client_id = 'is required';\n                }\n                if (!values.password) {\n                    errors.password = 'is required';\n                }\n                return errors;\n            }}\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.pushModuleTypeRequest(props.json, values)\n                setSubmitting(false);\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader?\n                    <Loader loaded={false} className=\"spinner\" />\n                : <Form className=\"modal-content\">\n                    <svg className=\"closeIcon\" onClick={props.hideModalForPush}>\n                        <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                    </svg>\n\n                    <p className=\"push-modal-text\">\n                        { Constants.PUSH_MODAL_TEXT }\n                    </p>\n                    <label htmlFor=\"client_id\" className=\"centered\">\n                        { Constants.CLIENT_ID_LABEL }\n                    </label>\n                    <div>\n                        <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                        <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                    </div>\n                    <label htmlFor=\"password\" className=\"centered\">\n                        { Constants.CLIENT_PASSWORD_LABEL }\n                    </label>\n                    <div>\n                        <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                        <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                    </div>\n                    <div className=\"controls\">\n                        <button type=\"button\" onClick={props.hideModalForPush} className=\"cancel\">\n                            { Constants.CANCEL_BTN_TITLE }\n                        </button>\n                        <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                            { Constants.PUSH_BTN_TITLE }\n                        </button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    hideModalForPush,\n    showAlert,\n    pushModuleTypeRequest\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPush);\n","import React from \"react\";\nimport \"./CustomAlert.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\nexport const CustomAlert = ({title, message, closeAlertHandler}) => (\n    <div className=\"alert\">\n        <div className=\"alertContent\">\n            <div className=\"alertHeader\">\n                {title}\n                <svg className=\"closeIcon\" onClick={closeAlertHandler}>\n                    <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                </svg>\n            </div>\n            <div className=\"alertBody\">\n                {message}\n            </div>\n            <div className=\"alertFooter\">\n                <button type=\"button\"\n                        className=\"closeButton\"\n                        onClick={closeAlertHandler}>\n                    {Constants.CLOSE_BTN_LABEL}\n                </button>\n            </div>\n        </div>\n    </div>\n)\n","import { Validator } from \"jsonschema\";\n\nexport const validator = new Validator();\n\nconst Properties = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"supported-apis\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        },\n        \"auth-type\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\nconst Capability = {\n    \"id\": \"/Capability\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n                \"enum\": [\n                \"respond\",\n                \"observe\",\n                \"health\",\n                \"tiles\",\n                \"refer\",\n                \"deliberate\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"id\",\n        \"description\"\n    ]\n}\n\nconst ExternalReference =  {\n    \"id\": \"/ExternalReference\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"link\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"label\",\n        \"link\"\n    ]\n}\n\nconst ConfigurationSpecOptions = {\n    \"id\": \"/ConfigurationSpecOptions\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"value\": {\n            \"type\": \"string\"\n        },\n        \"label\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"value\",\n        \"label\"\n    ]\n}\n\nconst ConfigurationSpecField = {\n    \"id\": \"/ConfigurationSpecField\",\n    \"type\": \"object\",\n        \"properties\": {\n        \"key\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\",\n                \"enum\": [\n                \"password\",\n                \"string\",\n                \"api_key\",\n                \"integer\",\n                \"device\",\n                \"options\",\n                \"boolean\"\n            ]\n        },\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"tooltip\": {\n            \"type\": \"string\"\n        },\n        \"subtype\": {\n            \"type\": \"string\"\n        },\n        \"required\": {\n            \"type\": \"boolean\"\n        },\n        \"options\": {\n            \"type\": \"array\",\n                \"items\": {\n                \"$ref\": \"/ConfigurationSpecOptions\"\n            }\n        },\n        \"group\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false,\n        \"required\": [\n        \"key\",\n        \"type\",\n        \"label\"\n    ]\n}\n\nvalidator.addSchema(Capability, '/Capability');\nvalidator.addSchema(ExternalReference, '/ExternalReference');\nvalidator.addSchema(Properties, '/Properties');\nvalidator.addSchema(ConfigurationSpecOptions, '/ConfigurationSpecOptions');\nvalidator.addSchema(ConfigurationSpecField, '/ConfigurationSpecField');\n\nexport const VALIDATION_SCHEMA = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"description\": {\"type\": \"string\"},\n        \"tips\": {\"type\": \"string\"},\n        \"logo\": {\"type\": \"string\"},\n        \"short_description\": {\"type\": \"string\"},\n        \"title\": {\"type\": \"string\"},\n        \"flags\": {\"type\": \"array\"},\n        \"external_references\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/ExternalReference\"\n            }\n        },\n        \"configuration_spec\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/ConfigurationSpecField\"\n            }\n        },\n        \"capabilities\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"/Capability\"\n            }\n        },\n        \"properties\": {\n            \"$ref\": \"/Properties\"\n        },\n    },\n    \"required\": [\"title\", \"default_name\"]\n};\n","import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Icons from \"globals/icons/sprite.svg\";\nimport './ModalForPull.scss';\nimport *  as Constants from \"globals/constants/constants\"\nimport Loader from \"react-loader\"\nimport { connect } from \"react-redux\";\nimport { pullModuleTypeRequest } from \"rootActions\";\nimport { hideModalForPull } from \"../visibilityActions\";\n\n\nconst ModalForPull = (props) => (\n    <div className='modal' id='modal'>\n        <Formik\n            initialValues={{ client_id: '', password: '', module_type_id: '' }}\n            validate={values => {\n                const errors = {};\n                if (!values.client_id) {\n                    errors.client_id = 'is required';\n                }\n                if (!values.password) {\n                    errors.password = 'is required';\n                }\n                if (!values.module_type_id) {\n                    errors.module_type_id = 'is required';\n                }\n                return errors;\n            }}\n            onSubmit={ async (values, { setSubmitting }) => {\n                props.pullModuleTypeRequest(values.module_type_id, values.client_id, values.password)\n                setSubmitting(false)\n            }}\n        >\n\n            {({ isSubmitting }) => (\n                props.loader ?\n                    <Loader loaded={false} className=\"spinner\" />\n                   : <Form className=\"modal-content\">\n                        <svg className=\"closeIcon\" onClick={props.hideModalForPull}>\n                            <use xlinkHref={`${Icons}#icon-small-x-close`}/>\n                        </svg>\n\n                        <p className=\"push-modal-text\">\n                            { Constants.PULL_MODAL_TEXT }\n                        </p>\n                        <label htmlFor=\"client_id\" className=\"centered\">\n                            { Constants.CLIENT_ID_LABEL }\n                        </label>\n                        <div>\n                            <Field type=\"text\" name=\"client_id\" id=\"client_id\" required/>\n                            <ErrorMessage name=\"client_id\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"password\" className=\"centered\">\n                            { Constants.CLIENT_PASSWORD_LABEL }\n                        </label>\n                        <div>\n                            <Field name=\"password\" type=\"password\" id=\"password\" required/>\n                            <ErrorMessage name=\"password\" component=\"div\" className='error'/>\n                        </div>\n                        <label htmlFor=\"module_type_id\" className=\"centered\">\n                            { Constants.MODULE_TYPE_ID }\n                        </label>\n                        <div>\n                            <Field name=\"module_type_id\" type=\"module_type_id\" id=\"module_type_id\" required/>\n                            <ErrorMessage name=\"module_type_id\" component=\"div\" className='error'/>\n                        </div>\n                        <div className=\"controls\">\n                            <button type=\"button\" onClick={props.hideModalForPull} className=\"cancel\">\n                                { Constants.CANCEL_BTN_TITLE }\n                            </button>\n                            <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                                { Constants.PULL_BTN_TITLE }\n                            </button>\n                        </div>\n                    </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    loader: state.elements_visibility.loader\n})\n\nconst mapDispatchToProps = {\n    pullModuleTypeRequest,\n    hideModalForPull\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForPull);\n","import React, { createRef } from \"react\";\nimport \"./Sidebar.scss\"\nimport * as Constants from \"globals/constants/constants\";\nimport { connect } from \"react-redux\";\nimport ModalForPush from \"../ModalForPush/ModalForPush\";\nimport { CustomAlert } from \"../CustomAlert/CustomAlert\";\nimport { validator, VALIDATION_SCHEMA } from \"globals/constants/schema\";\nimport { readStateFromBackend } from \"rootActions\";\nimport ModalForPull from \"../ModalForPull/ModalForPull\";\nimport {\n    hideAlert, hideModalForPush, hideModalForPull,\n    showAlert, showModalForPush, showModalForPull\n} from \"../visibilityActions\";\n\n\nclass Sidebar extends React.Component {\n    state = {\n        inputEl: createRef()\n    }\n\n\n    constructValidJSON() {\n        const data = JSON.parse(JSON.stringify(this.props.syncJSON));\n        for (const elem of data.configuration_spec) {\n            if (elem.options) {\n                elem.options.map(\n                    option => delete option[\"id\"]\n                )\n            }\n            delete elem[\"id\"]\n        }\n        data.external_references.map(\n            element => delete element[\"id\"]\n        )\n        return data\n    }\n\n    isValidForm() {\n        const form = document.getElementById(\"mainForm\");\n        return form.reportValidity();\n    }\n\n    onSaveButtonClick = () => {\n        if (this.isValidForm()) {\n            const formattedData = this.constructValidJSON();\n            const fileData = JSON.stringify(formattedData);\n            const blob = new Blob([fileData], {type: \"text/plain\"});\n            const url = URL.createObjectURL(blob);\n            const link = document.createElement(\"a\");\n            const title = formattedData.title.replace(/ /g, '_');\n            link.download = `${title}_module_type.json`;\n            link.href = url;\n            link.click();\n        }\n    }\n\n    onPushButtonClick = () => {\n        if (this.isValidForm()) {\n            this.props.showModalForPush();\n        }\n    }\n\n    handleFile = (event) => {\n        event.preventDefault();\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                try {\n                    const json = JSON.parse(reader.result);\n                    const valResult = validator.validate(json, VALIDATION_SCHEMA)\n                    if (!valResult.valid) {\n                        this.props.showAlert(\n                            Constants.ALERT_TITLE_FAILURE,\n                            Constants.VALIDATION_ERROR_MESSAGE\n                            + valResult.errors.join(\", \")\n                        )\n                    } else {\n                        this.props.readStateFromBackend(json)\n                    }\n                }\n                catch (error) {\n                    this.props.showAlert(\n                        Constants.ALERT_TITLE_FAILURE,\n                        String(error)\n                    )\n                }\n            };\n            reader.onerror = () => {\n                this.props.showAlert(\n                    Constants.ALERT_TITLE_FAILURE,\n                    Constants.FILE_LOADING_FAILURE\n                    + file.name\n                );\n            };\n            reader.readAsText(file, 'UTF-8');\n        }\n    }\n\n    onOpenButtonClick = () => {\n        const inputElement = this.state.inputEl.current;\n        inputElement.click();\n        inputElement.addEventListener('change', this.handleFile, false);\n    }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <p>{ Constants.SIDEBAR_TITLE }</p>\n                <ul>\n                    <input type=\"file\" ref={this.state.inputEl} accept=\"application/JSON\"/>\n                    <li onClick={this.onOpenButtonClick}>\n                        { Constants.OPEN_FROM_FILE }\n                    </li>\n                    <li onClick={this.props.showModalForPull}>\n                        { Constants.OPEN_FROM_API }\n                    </li>\n                    <li onClick={this.onSaveButtonClick}>\n                        { Constants.SAVE_JSON }\n                    </li>\n                    <li onClick={this.onPushButtonClick}>\n                        { Constants.PUSH_JSON }\n                    </li>\n                </ul>\n                {\n                   this.props.modalForPush &&\n                   <ModalForPush\n                       json={this.constructValidJSON()}\n                   />\n                }\n                {\n                    this.props.customAlert &&\n                        <CustomAlert\n                            title={this.props.customAlert.title}\n                            message={this.props.customAlert.message}\n                            closeAlertHandler={this.props.hideAlert}\n                        />\n                }\n                {\n                    this.props.modalForPull &&\n                    <ModalForPull/>\n                }\n            </div>\n        )\n    }\n}\n\nconst formatState = (state) => {\n    const {\n        external_references,\n        configuration_spec,\n        properties,\n        capabilities,\n        other_inputs\n    } = state;\n    return {\n        external_references,\n        configuration_spec,\n        properties,\n        capabilities,\n        ...other_inputs\n    }\n};\n\n\nconst mapStateToProps = (state) => ({\n    syncJSON: formatState(state),\n    modalForPush: state.elements_visibility.modalForPush,\n    modalForPull: state.elements_visibility.modalForPull,\n    customAlert: state.elements_visibility.customAlert\n})\n\nconst mapDispatchToProps = {\n    readStateFromBackend,\n    showModalForPush,\n    hideModalForPush,\n    showModalForPull,\n    hideModalForPull,\n    showAlert,\n    hideAlert\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n\n","import React from \"react\";\nimport './Header.scss';\nimport * as Constants from \"globals/constants/constants\";\nimport Icons from \"globals/icons/sprite.svg\";\n\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div>\n                    <svg className=\"iconCiscoLogo\">\n                        <use xlinkHref={`${Icons}#icon-cisco-logo`}/>\n                    </svg>\n                </div>\n                <div>\n                    <p className=\"headerTitle\">{Constants.HEADER_TITLE}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.scss';\nimport Content from \"./container/Content/Content\";\nimport Sidebar from \"./container/Content/components/Sidebar/Sidebar\";\nimport Header from \"./container/Content/components/Header/Header\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"site\">\n                <Sidebar/>\n                <Content/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"container is cached for offline use.\" message.\n              console.log('container is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    ADD_EXTERNAL_REFERENCE,\n    DELETE_EXTERNAL_REFERENCE,\n    UPDATE_EXTERNAL_REFERENCE,\n} from \"globals/constants/types\"\n\nconst initialState = []\n\nexport const externalReferencesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_EXTERNAL_REFERENCE:\n            return state.concat(\n                {\n                    \"label\": \"\",\n                    \"link\": \"\",\n                    \"id\": action.payload.id\n                }\n            )\n\n        case DELETE_EXTERNAL_REFERENCE:\n            return state.filter(\n                el => !Object.values(el).includes(action.payload)\n            )\n\n        case UPDATE_EXTERNAL_REFERENCE:\n            return state.map(\n                    item => {\n                        if (item.id !== action.payload.id) {\n                            return item\n                        }\n                        return {\n                            ...item,\n                            [action.payload.pair.name]: action.payload.pair.value\n                        }\n                    }\n                )\n\n        default:\n            return state\n    }\n}\n","import {\n    ADD_CONF_SPEC,\n    ADD_OPTIONS,\n    DELETE_ALL_OPTIONS,\n    DELETE_CONF_SPEC,\n    DELETE_OPTION,\n    UPDATE_CONF_SPEC,\n    UPDATE_OPTION\n} from \"globals/constants/types\"\n\nfunction getIndexOfSpec(state, payload) {\n    let spec = state.filter((spec) => spec.id === payload.conf_spec_id);\n    return state.indexOf(spec[0])\n}\n\nexport const configurationSpecReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_CONF_SPEC:\n            return state.concat([action.payload])\n        case ADD_OPTIONS:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.concat(action.payload.options)\n                    }\n                }\n            )\n\n        case DELETE_CONF_SPEC:\n            return state.filter(\n                (spec) => spec.id !== action.payload.conf_spec_id\n            );\n\n        case DELETE_ALL_OPTIONS:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": []\n                    }\n                }\n            )\n        case DELETE_OPTION:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.filter(\n                            el => el.id !== action.payload.option_id\n                        )\n                    }\n                }\n            )\n\n        case UPDATE_CONF_SPEC:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        [action.payload.pair.name]: action.payload.pair.value\n                    }\n                }\n            )\n\n        case UPDATE_OPTION:\n            return state.map((item, index) => {\n                    if (index !== getIndexOfSpec(state, action.payload)) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        \"options\": item.options.map((option) => {\n                                if (option.id !== action.payload.option_id) {\n                                    return option\n                                }\n                                return {\n                                    ...option,\n                                    [action.payload.pair.name]: action.payload.pair.value\n                                }\n                            }\n                        )\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\n","import {\n    TOGGLE_AUTH_TYPE, UPDATE_AUTH_TYPE,\n    UPDATE_SUPPORTED_API\n} from \"globals/constants/types\"\n\nconst initialState = {\n \"supported-apis\": []\n}\n\nexport const propertiesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_SUPPORTED_API:\n            if (!state[\"supported-apis\"].includes(action.payload)) {\n                return {\n                    ...state,\n                        \"supported-apis\": state[\"supported-apis\"].concat([action.payload])\n                    }\n            } else {\n                return {\n                    ...state,\n                        \"supported-apis\": state[\"supported-apis\"].filter(\n                            (api) => api !== action.payload\n                        )\n                }\n            }\n        case TOGGLE_AUTH_TYPE:\n            if (Object.keys(state).includes(\"auth-type\")) {\n                return Object.fromEntries(\n                        Object.entries(state).filter(\n                            ([key, val]) => key !== \"auth-type\"\n                        )\n                )\n            } else {\n                return {\n                    ...state,\n                        \"auth-type\": \"\"\n                }\n            }\n\n        case UPDATE_AUTH_TYPE:\n            return {\n                ...state,\n                \"auth-type\": action.payload\n            }\n\n        default:\n            return state\n    }\n}\n","import {\n    ADD_CAPABILITY,\n    DELETE_CAPABILITY,\n    UPDATE_CAPABILITY_DESCR\n} from \"globals/constants/types\"\n\nconst initialState = [];\n\nexport const capabilitiesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CAPABILITY:\n            if (state.filter(\n                obj => Object.values(obj).includes(action.payload.id)).length === 0\n            ) {\n                return state.concat([action.payload])\n            } else {\n                return state\n            }\n        case DELETE_CAPABILITY:\n            return state.filter((api) => api.id !== action.payload)\n\n        case UPDATE_CAPABILITY_DESCR:\n            let item = state.filter((api) => api.id === action.payload.id);\n            let elementIndex = state.indexOf(item[0]);\n            return state.map((item, index) => {\n                    if (index !== elementIndex) {\n                        return item\n                    }\n                    return {\n                        ...item,\n                        ...action.payload\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\n","import {\n    HIDE_ALERT, HIDE_MODAL_FOR_PUSH, SHOW_ALERT, SHOW_LOADER,\n    SHOW_MODAL_FOR_PUSH, SHOW_MODAL_FOR_PULL,\n    HIDE_LOADER, HIDE_MODAL_FOR_PULL\n}\nfrom \"globals/constants/types\";\n\n\nconst initialState = {\n    modalForPush: false,\n    modalForPull: false,\n    loader: false,\n    customAlert: null\n};\n\nexport const visibilityReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case SHOW_MODAL_FOR_PUSH:\n            return {...state, modalForPush: true}\n        case HIDE_MODAL_FOR_PUSH:\n            return {...state, modalForPush: false}\n        case SHOW_LOADER:\n            return {...state, loader: true}\n        case HIDE_LOADER:\n            return {...state, loader: false}\n        case SHOW_MODAL_FOR_PULL:\n            return {...state, modalForPull: true}\n        case HIDE_MODAL_FOR_PULL:\n            return {...state, modalForPull: false}\n        case SHOW_ALERT:\n            return {...state, customAlert: {\n                ...state.customAlert,\n                    ...action.payload\n                }\n            }\n        case HIDE_ALERT:\n            return {...state, customAlert: null}\n        default: return state\n    }\n}\n","import { additionalInputsReducer } from \"./container/Content/additionalInputsReducer\";\nimport { externalReferencesReducer } from \"./container/Content/components/ExternalReferences/externalReferencesReducer\";\nimport { configurationSpecReducer } from \"./container/Content/components/ConfigurationSpec/configurationSpecReducer\";\nimport { propertiesReducer } from \"./container/Content/components/Properties/propertiesReducer\";\nimport { capabilitiesReducer } from \"./container/Content/components/Capabilities/capabilitiesReducer\";\nimport { combineReducers } from \"redux\";\nimport { READ_STATE_FROM_BACKEND } from \"./globals/constants/types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { visibilityReducer } from \"./container/Content/components/visibilityReducer\";\n\n\nconst appReducer = combineReducers({\n            other_inputs: additionalInputsReducer,\n            properties: propertiesReducer,\n            capabilities: capabilitiesReducer,\n            external_references: externalReferencesReducer,\n            configuration_spec: configurationSpecReducer,\n            elements_visibility: visibilityReducer\n    }\n)\n\nfunction addIDs (currentList) {\n    if (currentList) {\n        currentList.map(\n            el => el.id = uuidv4()\n        )\n    }\n    return currentList || []\n}\n\nfunction reformatConfSpec (spec) {\n    spec = addIDs(spec);\n    if (spec) {\n        spec.map(el => el.options = addIDs(el.options))\n    }\n    return spec\n}\n\nexport const rootReducer = (state, action) => {\n    if (action.type === READ_STATE_FROM_BACKEND) {\n        return {\n            ...state,\n            external_references: addIDs(action.payload.external_references),\n            configuration_spec: reformatConfSpec(action.payload.configuration_spec),\n            properties: action.payload.properties || [],\n            capabilities: action.payload.capabilities || [],\n            other_inputs: {\n                // The API response contains additional fields that need to be excluded\n                title: action.payload.title,\n                short_description: action.payload.short_description,\n                tips: action.payload.tips,\n                description: action.payload.description,\n                flags: action.payload.flags,\n                logo: action.payload.logo,\n                default_name: action.payload.default_name\n            }\n        }\n    }\n    return appReducer(state, action)\n}\n","import {DELETE_LOGO, LOAD_FILE, UPDATE_FlAGS, UPDATE_SINGLE_INPUT}\nfrom \"globals/constants/types\"\nimport * as Constants from \"globals/constants/constants\";\n\n\nexport const additionalInputsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_SINGLE_INPUT:\n            return {...state, [action.payload.name]: action.payload.value}\n\n        case UPDATE_FlAGS:\n            return {...state, \"flags\": action.payload}\n\n        case LOAD_FILE:\n            return {...state, \"logo\": action.payload}\n        case DELETE_LOGO:\n            return Object.fromEntries(\n                Object.entries(state).filter(\n                    ([key, val]) => key !== Constants.LOGO\n                )\n            )\n        default:\n            return state\n    }\n}\n","import * as Constants from \"./globals/constants/constants\";\n\nexport async function authorize(values) {\n    const response =  await fetch(Constants.URL + Constants.AUTH_ENDPOINT,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Authorization': 'Basic ' + btoa(values.client_id + ':' + values.password)\n            },\n            body: 'grant_type=client_credentials'\n        }\n    )\n    const data = await response.json();\n    if (!response.ok) {\n        throw response.statusText || data['error_description']\n    }\n    return data['access_token'];\n}\n\nexport async function pullModuleType(module_type_id, token) {\n    if (token) {\n        const response = await fetch(\n            Constants.URL +\n            '/iroh/iroh-int/module-type/'\n            + module_type_id, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n        })\n        const data = await response.json();\n        if (!response.ok) {\n            throw (response.statusText || data['error_description'])\n        }\n        else {\n            return data\n        }\n    }\n}\n\n\nexport async function pushModuleType(token, json) {\n    if (token) {\n        const response = await fetch(Constants.URL + Constants.MODULE_TYPE_ENDPOINT,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + token\n                },\n                \"body\": JSON.stringify(json)\n            }\n        )\n        const data = await response.json();\n        if (!response.ok) {\n            throw(\n                response.statusText || data['errors']\n            )\n        }\n        else {\n            return data['id']\n        }\n    }\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\"\nimport {\n    PULL_MODULE_TYPE_ERROR,\n    PULL_MODULE_TYPE_REQUEST,\n    PULL_MODULE_TYPE_SUCCESS, PUSH_MODULE_TYPE_ERROR,\n    PUSH_MODULE_TYPE_REQUEST, PUSH_MODULE_TYPE_SUCCESS,\n} from \"./globals/constants/types\";\nimport * as Constants from \"globals/constants/constants\";\nimport {\n    hideLoader,\n    hideModalForPush,\n    hideModalForPull,\n    showAlert,\n    showLoader\n} from \"./container/Content/components/visibilityActions\";\nimport {authorize, pullModuleType, pushModuleType} from \"./services\";\nimport {\n    onPullModuleTypeSuccess,\n    onPullModuleTypeError,\n    onPushModuleTypeSuccess,\n    onPushModuleTypeError,\n    readStateFromBackend,\n} from \"./rootActions\"\n\n\nexport function* sagaWatcher()  {\n    yield takeLatest(PULL_MODULE_TYPE_REQUEST, pullSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_REQUEST, pushSagaWorker)\n    yield takeLatest(PULL_MODULE_TYPE_SUCCESS, onPullSuccessSagaWorker)\n    yield takeLatest(PULL_MODULE_TYPE_ERROR, onPullErrorSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_SUCCESS, onPushSuccessSagaWorker)\n    yield takeLatest(PUSH_MODULE_TYPE_ERROR, onPushErrorSagaWorker)\n}\n\nfunction* onPullSuccessSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(hideModalForPull())\n    yield put(readStateFromBackend(action.payload))\n}\n\nfunction* onPullErrorSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(showAlert(Constants.ALERT_TITLE_FAILURE, action.payload))\n}\n\nfunction* pullSagaWorker(action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload)\n        const payload = yield call(pullModuleType, action.payload.module_type_id, token)\n        yield put(onPullModuleTypeSuccess(payload))\n    }\n    catch (e){\n        yield put(onPullModuleTypeError(String(e)))\n    }\n}\n\nfunction* onPushSuccessSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(hideModalForPush())\n    yield put(showAlert(Constants.ALERT_TITLE_SUCCESS, Constants.MESSAGE_SUCCESS + action.payload))\n}\n\nfunction* onPushErrorSagaWorker(action) {\n    yield put(hideLoader())\n    yield put(showAlert(Constants.ALERT_TITLE_FAILURE, String(action.payload)))\n}\n\nfunction* pushSagaWorker(action) {\n    try {\n        yield put(showLoader())\n        const token = yield call(authorize, action.payload)\n        const id = yield call(pushModuleType, token, action.payload.json)\n        yield put(onPushModuleTypeSuccess(id))\n    }\n    catch (e){\n        yield put(onPushModuleTypeError(String(e)))\n    }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'globals/styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\"\nimport { rootReducer } from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\"\nimport { sagaWatcher } from \"./sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(saga)\n)\n\nsaga.run(sagaWatcher);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}